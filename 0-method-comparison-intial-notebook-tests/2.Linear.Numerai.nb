(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    461983,       9217]
NotebookOptionsPosition[    455238,       8996]
NotebookOutlinePosition[    455567,       9011]
CellTagsIndexPosition[    455524,       9008]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["e"], "Input",
 CellChangeTimes->{3.716235781238573*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"numeraiData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/tamellan/Desktop/Numerai/numerai_training_data.csv\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7158855423917723`*^9, 3.715885566842874*^9}, {
  3.716283624398583*^9, 3.716283627045772*^9}}],

Cell["\<\
Ideas -- 
1) Train net based on 10 most output correlated features.
2) Train net based on 10 most output correlated features with maximal \
orthogonality - compressive sensing.
3) Fourier transform to extract a periodicity.
4) Check L1 reg and decision trees in Mathematica 11.2.\
\>", "Text",
 CellChangeTimes->{{3.715891376509575*^9, 3.715891466724325*^9}, {
  3.715980360479624*^9, 3.7159803818662977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numeraiData", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.715885705755796*^9, 3.715885710414496*^9}, {
  3.716288206772553*^9, 3.716288209349841*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"535714", ",", "54"}], "}"}]], "Output",
 CellChangeTimes->{3.715885711095654*^9, 3.715891136333334*^9, 
  3.7159749757735977`*^9, 3.715982697288288*^9, 3.716283763673312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"{", 
   RowBox[{"535714", ",", "54"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{3.715974978749818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"numeraiData", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "100"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "50", ",", "54"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.715885718124488*^9, 3.7158857328196373`*^9}, {
  3.71588576827265*^9, 3.71588590034137*^9}, {3.7158859739997673`*^9, 
  3.715885983504897*^9}, {3.715974982500601*^9, 3.715974983056717*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1VAtMk2cULYipEnRkTN5z2Ik8Ag5YUaBgT6U8C4UWSgExoIjDyRhkIuIM
+dG4GSBuIKwwp9tgwIRtBHRhlMxUNJgQdChIeSgiCMjLCWPM8Zgb7H5/0vw5
Pfd+373nnvtvO/ihMsWQx+Ml//dbff//vBCHOj1bKG4bFtMfOJ5mNJy10kl4
AxxaP6lRt3cTNsXd5fc3m3aw+DfwatvKQtbQQ8KWiP+zuT9/5TFhW+T7hmgP
z7F4O4RUaBQuTUOEBSg03fqBbcMI4e0Qygy7uxsZvwNOOVnnDfoY74iY2cCx
InEvYWekCtJOnKxi8S6QXVB2ztg/IbwT7+V68jeMsXg3pP7UFSwbHSfsjnaP
Ww070+8R9kDz8qfzA/o+wu8iw160y3B2kLAQtcFnG87asfs8wb9rpei3uU94
Fw5UzyTGHeknvBtSofZMbznTzwuiZc+4yq2jhL3RcdK9xGyG1euDx9XipSIB
01MEB/nzbEdjVr8vuNMFWzzLGO+H75VX+fF5LH8PBJmfVb22n90nRqvFjqj1
lUw/QHJ6+HZZC+VzgPab6ylyDeMlmF5c33JggPrlJBguHpFPJLHz9+If/8WZ
Kd0D4veiUd8iHqxj/fojR9R65EYBxXP+SA+LiB02uEO8FFr5266lTQPES3E7
9U1VuClhXgD+qPOGWxDpwwXAvWuh/gch0zsQgaccDv9qyeoLxPOSzT2vvMeI
D8J9n9ov7Sapfy4IyrlJ23WNjA9Gps2mIdfPWX3BOPhtj/B3Lzb/EOgVD4wU
f5EeXAi6zL44gT52fyguyTJVfdldxIdC/07vpgFzxssQkLenyCGE9SdDT3pL
Z0LNI+LDcGeisaz3FLs/DFY/VtZurGD54XhrbSBM33D4iKxs7evZPOWQBzgX
uhrRPnFyvKzKHYz+js0vAnMm1osOv9B5XASuXbihmJtk+xcJx9zC5qMbyf+I
xOCo4LrZVZofF4mjSXVGBTdpXrpI8MsPPXWZZn5V4OfdL1sP1VL9UCBy2fIj
/etsHgok3zt23MOrjfIVkBakjS9deUr5Slw2OV+sHqfzoMRAzYj7ulLaN04J
P2N9ZYYf8TolEmyc2/6+yPSJgnA+IqOhoofyo7Bmh3amVxQSxo7FhaVRP7oo
8gvzZzQ+Xl0351uUH41L2rm4y3zyBxeN+pKUc8n7SS9dNDS22aH8KeZPFVa/
BtpciocKYt6V8K8eMr+oIGnSCAOnqF+dChZfGyb5nmH3x4Dn06GxSCL/IAYX
bVYdRvvNxcBat89OMkv96GKQuP3aaEL+BOWrkVMfX/5CRn6FGgZLz7pLf2Pz
U0Ng/UgyHUZ+06kxXy3Y0mbO/B+LYHO3vH3Z9H1GLBJNRqUtxhTPxWJt/OWs
/ljYOQluOg8+Ef8L1J3bgg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1UwlQ1HUURiiFmFwDQww5FCIyklAOEYOPY1nkWGBhlw08YoGSe7SGyEL+
qNQ4iRnjIMIYMcUpYELKoelqcVVioBSrgEDEEYQQCQZNBPXezuzsfPt+73vf
e997G1UpslhtLS2t6KXv8u//nyn3gCDl4IrYAXf6A+Nl8UfKFgYJ66JJ57uS
3QO/EF6DJ1xsokp+Z7wWr5ufa/zjtT7Cxqh3Tajbs7+H8AbEG74w57qW+SxQ
2VSqZXyb621C5sSjyY/n+glbQbVG6fJVK/NZo/dWqOnBbd2EbZDzSe2XpaYc
34wo58TI0xrms8Vhx1W6w6PMtwUuYsnBv0Ss9xVcDa8KeFzM+uxRmlv1SOzJ
77ci+tBNA5HNr4S3Ybrx8I3kbo47QLH65ZpzD5nPEQWVIaKO0SHCThhZKJ/u
DOR8Z+zbK6S//dsI4e3QrpscLl/9gLALiq7FSs80Mf8OxA7ZTsR92EvYFaY6
NT9fced6O5FnZ6d228HxV3FyTM9/52c8Xzcc3+tzsaeT37tD1LA+WT3C8wEm
2+8lrcunuACYGcUHzpxkPg+kV19WZWiIT/BAfrt0paSN8z3x5Lz3p1Z7CAue
EOlfKnm3ZZTiXmgRlg3lfC8UyAvPV3UzvzeG3qhfUWjO+d7w86g74+DTRXEx
2itudykmCAtiOGkvO8D9+UCueUc8dZ3mK/jAbVRTOb+b9UlgXVG38rIf15dA
NXMgqcz4PsV9UWdT62G9nuv74mbA/es1nZy/C+WzY2k/QEPxXSi2j5DIDdlP
P5wf+WIu+wLxCX5oS71W+Jwd++ePF0dnc5r3sz5/THyQ9NFWk3sUD0BsaPXU
lnXkvxCAhLteDo1H2a9A9Jk/lL9kyPoCUSPo9TQWsD4p/pa5p2yW0TwFKYoT
rB8kvsXzDYIsKnFjqwf3H4Q3veNSprKoH61gjFdlVhnYkh4E42ruKdEhJ64X
DLN/8pc2mvSog2l/+V5CkBsZ8fTx94gfIVh1NmZpYzsoPwTjixuGv9enfVeH
0D1xfzL8d57T9B4ySDNmLcUxrFeGG4uKmmhLum+1DBW+WRezLHj+ocgW39G0
9d+l/FAshCvyTx/hfQ7FnyWbnm02ontUh+Jb3YGO5mf43sLQmndlqWPShzAk
Thh0Reqw32GozzE1yUyjearDoFUd0+JjwfOX44CFlX6emvyHHF+fUDUUd/H8
5LCbf6rzhJj6Ucvh3D/zje7AHcpXoOix/XD18z9RvgKa8d4lx9lPBQYtVX5W
HaRHrcAxiYmksonvIxx9qUUNUkvqD+E4leDVtD2D9Ydj+bp8dNm/cKTX3soe
0+P9V+JzZXKcoxX7p0Rzz6Vj7/9IfIISmn2pQWZG5LdaicW0CxFnp/rd/wWg
Qef4
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1lAtMU2cUxwEVIS4d4gtlCgxhUIHwLgNc/0AFhEpLS0sVMArrnBuDiCNG
5+MGZWjZigIOjchwCShLZMYH3UBZQScqZCoaZqeWh2NgcBGzLYRB58Sdc5Ob
m9893/nO//7P+a5XbqFK72BnZ5f36p55/n+NSzOaLLPOmoek9AKGqqnlBodB
YieMNIl+WFowQOyCPdnu4uuT94gXYnHHS+35PI67IeqAOOKz+sfEb0HjluVU
pOwl9oTi6Sbb11fvEL+NzNkvs24aLcQrYezx3hc8biX2xVyfnou2VazPDwnb
TyZuED8kFqO9LNUY08B6A+CgVzePB7GeIEiji4cvxPL6YEwUD9TOb2B9ITA7
lzpFHRgmDoX/zmKjvYXXh2F66ot5c+NZTzgiPX753LDtPnEERIrvqvUHWV8k
nslP/bms7RGxBJ/6N4unmn8jjsLVtuxrO3L7iN+FZfVO3ZmIfuJo+OSETX5w
4glxDEaWnx5NDuJ4LLIrOv/2y2a9q9Futb3YeInrvwenWbevlKVyXIpd09ZG
6RT7C+R73YhzDqP9BcDrXNGHR/5gv+LwvGh+/6H1pFeIw3Gx29H7zuxvPP4K
NQx/peX8eNg+Ern03OV4Aq6N/TOnbTPpFRJwo7cs6Ewh+y3D0iHdEtNd0ifI
cOTEoOPuvZy/Bu51G/27XYiFNfD7Xpe+fyv7lYjZtxqzB3M4nojtrQG+kR68
fxJqF18eXZX8O8WTcDhkR6CXB/cjmfRSf4VkvBrOTvnDMYqvxetx7eT8tbD4
fGtybOF+pCDOVBOeOMb1U1Dqs0IZOczzkYp71oF5VU3kp5CK3TL5oZW7uD9y
KHRD9no1zY8gR35WtcWziv1fB4vTjIO0XliH9eUK++A6np80zHTXGEPfK6Qh
pTeiqrCF8xXwfCN2YgXPi6DA0z1PPr4dwPWVKCgPdX+/kuJQYkOSZoHsMX+P
kvJpf7MSLpVz5AN93J90XP8kXDCB/EA6bp4zSEIreF7Ske88Wb/lAvXXnI6U
S4quPEeur0KXf3Rl9z5iqBDv5SA6lcJ+qfCidW9HwQPy06xCTOfWjvJ2Pm9q
NC24I3swTvWgRv+M3SXshxqxIWM/KdM4Xw2jd9+Q2o79yUD15egu4RnXz4Dp
4jLXCR37nYFtFQ1v5ihpvTkDrb8abPoJ7q8GosDzJ5+fJoYGP0dKGt8J4HnS
kD/0vzNrIJSUL4o4xudRC92I2+ErVtavxTe5tT86l/J50qLkrGuAaAuxWQuf
ylH9wm4+v5nwnVZJC8Wcn4nonpolmzzYv0w011VZJe2sPxOvf1f/sn861EsW
NQW3UD+hw2bJzARyvg5f1hS47jffonwdvAOPmrxrH0n/A5+11AY=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1VAlQ1HUUZlCGLUhgIjUgBWQAFcjiSM79uFl2uXbZIxRoSMo4VJQhW2X8
O445KpCThiKQpGwiyGJgYRzO4rRTlCQFCkFchkJiihTmSOPE1ns7s7Pz7fu9
9773vcMla7s829zMzOztxa/p9//PrPjvVT6BD06Mi+kPrF/Qi561/kZYhBlj
cuLlhgnCttDP+qx4VH2dsD1mfX2cRN2/El6JoYmmbof5UcJOcFn9V56qWE/Y
Gfub16p3n7xJ2BWPqk/NZ3lOEnZDtZ2us2vFLcLuGAm/L/vszyHCntDVDEsd
zjGfdYjeojE6VjB/Lwz7Ss37+wcJ+yD+1HsLahXz2wBtafpZbS7zew15u7U6
r0jO/zoOVny1L1vXR9gX9cu+fnmbYZiwHwKzvMMsDOzvD9eCj3Q26Zw/AKU/
BdWfduZ8b2Do4tPN+UbmvxGKFsu0/S5cfyCy/1kosbLkeoLQX2wmr9w4RTgY
JzqCvhXujxAOgUXdhezcYu5PKPpq7Qv3SPh9GJ7s6C44X3ibsBjXUubuOS1h
PYCrHWYL0/3kLwDz3rvavNw5XjjEheHFP1RRPCGc9OX8EfDbOn1mPIv9I5C9
w8SQ80XCTuF6OCOG6hMiEdIpL3cp4/qiIC6xXZXvRHoJUXjum5mnFu1sj0ZF
e/kxGy3xFaLxX7gvWM8YbGj3sLH6kvolxKCsKbTFDewfi1e674hrx+i9EAuR
Mucx1jO/ODQ0Pzwyvm+A7HFYuUm0M/naHbJL4GHvOm5bP0N2CSz87AJCOu+S
PR6bL9Z1+VnTeyEe6huSh46ZY2SXYlLys//x7cRHkOJxdMSmH3U8LzL0TFbm
b5ORnoIM0u8sQyuVxMcsASePPkm8rmX/BLwpywvTv8D6J2Jpo+HYzUbWPxGj
xw8dTOvj+pPwvDSkJu97ri8J7gGrBz48wvObDLvSB85Fn9N7JMO4U9rgUsD5
kvG+t2ljia8hGaIlNzoPSXkfU2B81rxn7hLNB1LwSeuaquUdrHcKmvaWT3WN
UDxDCs569nrMubE+cqTUJC1KxPnl6C66esbhVZ4HOcT+GW0Sa+q/QQ57feyE
1p77r8BpkeOnGWupHixi07pKCAsK5OT8kpbpRv02KPDH7MCWUi3rn4ra0jW3
bit+J/9UfKCp8+8J5vypKEOHPvMSxTOkIsqv7cBgRT/5K3HZPFLVyvGgxLoS
76WBnnQvBCUuvNgbNThLfA1KTPkXHb7XyPOlgnWI6eISP6ggKwvWHZhn/ipU
nQ+afOcK81chrzkmNOoc3xc1Qq8E57amT5O/Glt7e8VdRt4XNe6qdwlvldF7
gxphi9uR4M33RgOr8GWLJ5Hs0OBjfcXelh6uXwPT9Lw0SvNm0CDOd3nCux5j
4n8BXEbV4Q==
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdzs1KglEQh/E/rVq2aNGiRUVERETf2Yd5TNPsU1/NXCuuvYW5tLmkLqEi
BpnngMiP58yZd3u6qOYrkma/v7////PdUD4lcxVeg9fhDXiz5D1b8A68C+/h
vX30A/gQPoKP8d4JfIr7Z/A5fAFfwld4v4Z+jX6Dfot+h16H7+EG5ku2wWrm
eWuiP2A+HPta6C30Nnob/RH7YXUw30HvonfRn9Bh9bC/h/6MeVgvmIf1ih6O
84b3wzH/jnlYH+jhOP3cSz93Q3dYA8yHYx7dYVX5fqlyN9hxX0Psh22Y7zus
EeZHuRvsuK9PfD9ssMMaY/84d4Md9/WF/bDBHo75CeYnuRu6L/0D5DKGPg==

      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{883.87109375, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.715885871471911*^9, 3.715885900875905*^9}, {
   3.7158859745850563`*^9, 3.71588598394097*^9}, 3.715891136791847*^9, 
   3.715974983657072*^9, 3.7162368595474854`*^9, 3.71628377325145*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract correlations", "Subsection",
 CellChangeTimes->{{3.715982574225067*^9, 3.715982576928245*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Parallelize", "@", 
  RowBox[{"Correlation", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"numeraiData", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "48", ",", "48"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"numeraiData", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "54", ",", "54"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.715886096820136*^9, 3.715886099384314*^9}, {
  3.715895676862872*^9, 3.715895690861204*^9}, {3.715895744161688*^9, 
  3.7158957462829227`*^9}, {3.716283786436233*^9, 3.716283794990282*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Parallelize","nopar1",
   "\"\\!\\(\\*RowBox[{\\\"Correlation\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"numeraiData\\\", \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"Span\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"i\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"2\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \
\\\",\\\", \\\"48\\\", \\\",\\\", \\\"48\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"numeraiData\\\", \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"Span\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"i\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"2\\\", \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \
\\\",\\\", \\\"54\\\", \\\",\\\", \\\"54\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]}], \
\\\"]\\\"}]\\) cannot be parallelized; proceeding with sequential evaluation.\
\"",2,5,1,30830409485892355964,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.716283796122085*^9}],

Cell[BoxData[
 RowBox[{"-", "0.0020546473094387816`"}]], "Output",
 CellChangeTimes->{
  3.715886102748526*^9, 3.715891140531777*^9, {3.715895682307476*^9, 
   3.715895694089422*^9}, 3.7158957505538063`*^9, 3.71597500684671*^9, 
   3.7162368635394583`*^9, {3.7162837826422653`*^9, 3.716283799847775*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"correlationTable", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Correlation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"numeraiData", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "10000"}], ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "k", ",", "k"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"numeraiData", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "10000"}], ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "54", ",", "54"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "4", ",", "54"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "@", "correlationTable"}]}], "Input",
 CellChangeTimes->{{3.71588600783116*^9, 3.715886083984336*^9}, {
  3.715886191822342*^9, 3.715886243364798*^9}, {3.7158862915932083`*^9, 
  3.715886303966428*^9}, {3.7158863406519127`*^9, 3.7158863439438543`*^9}, {
  3.715886381205606*^9, 3.715886385732698*^9}, {3.715895775527266*^9, 
  3.7158957859967546`*^9}, {3.715895843395784*^9, 3.715895866269163*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "0.01740756650549042`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "0.02724794396781698`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0.008264798169167826`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0.0024768299261210946`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "0.02125720625908436`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0.026584008825775992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.004377246247555602`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0.033042780007546235`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"-", "0.007170617524325967`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "0.013649118899779336`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     RowBox[{"-", "0.011982741627801878`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"-", "0.006921316645712929`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     RowBox[{"-", "0.006497063581096874`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0.03790088401973818`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "0.04319669603730679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "0.024466426062718483`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", 
     RowBox[{"-", "0.04493417236728452`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "0.043789475630171555`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "0.0429844200480908`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     RowBox[{"-", "0.015110415067279457`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "0.002519773211454825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", 
     RowBox[{"-", "0.006356985444838004`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", 
     RowBox[{"-", "0.003116091616683625`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "0.00823447376413445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "0.028750677970802323`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "0.003379772053050998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", 
     RowBox[{"-", "0.020674555349402456`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "0.03105001594113328`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "0.029332542981201627`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "0.04566489713734918`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "0.025036058096254938`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", 
     RowBox[{"-", "0.04338652400734065`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", 
     RowBox[{"-", "0.011332909878294372`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "0.014982392723021647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "0.028195481269704156`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "0.003656160873226979`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", 
     RowBox[{"-", "0.0122928156352546`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "0.0077542301910927675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", 
     RowBox[{"-", "0.031116630269444757`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "0.02768083929880866`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "0.017716393370261884`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "0.015730743017827804`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "0.008155228559611826`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", 
     RowBox[{"-", "0.00960185618174414`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "0.0032229300020854635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "0.003837969085988507`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "0.007855067097036116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", 
     RowBox[{"-", "0.009237058553343693`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52", ",", "0.0113908106089078`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", 
     RowBox[{"-", "0.015842053259408354`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.715886001291733*^9, 3.715886087704833*^9}, 
   3.715886200181745*^9, {3.715886289878682*^9, 3.715886311679586*^9}, 
   3.71588635293442*^9, 3.715886416933237*^9, 3.7158911710522013`*^9, {
   3.7158958244633303`*^9, 3.715895869420755*^9}, 3.715976638567713*^9, 
   3.716236866287513*^9, 3.716283807079422*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kG1Ik2EUhpeLdKDLICzKoqaF6JRyzc1l7XbzY3vTaCPS0ZSauXJLXf6r
lEbCtGJmpj/Mj+lmCkLOiumSaCghlQWFEBJZWjRkaKWmsNaPip33gYeHi+vc
h/OcvYZqbXkEh8MR/bv/3/CJRY3qDJeZvuML81akmvzNX/wdxNvBTI5XCZas
8jDHI94Y/KlmzhHvga3Nt17zvI3qBXDruc730g7yiTghfbBtbukS8X68HeKM
hgI9xEmYZPb9+VFaR/lkLDh1Y1t+3SIW4qlMefrCzUbiNKw9lLyy6WqJD6CQ
35U52HmF+CCSDB7ns/Mu6p+Oqmh7+9yufmIRhrVJm8di2okPYVNfa2/nhgHK
izEuvBpqMbP1GZhOHn4dE8GyBPfXi1rFK01UL4WkIGW5uI/dRyZ2ZJWpX/DY
eWQwqr0rAVsF8WFsVAj0WbPsPrPQra879c7SRXwEhtBy4Te3mfgo/LFFi54U
dr9yrDoiC+5OOcgDqSq4dLzuMFuBJ+bb7rKzA+SzsRb52xTjov9as8H3lKdM
ZPRTPwWCkyUmj7ghzFYF9KtxI3HuJsor8XH31Gje507KKyGVJ160rVaSz0GF
PeplUHiD8jmwfJdq/BPXyOdCNnPZw5t1kM+Fpok/VFJM/Th5SKisj5IntlD/
PLT1Zhzz7mwmnw/biEs+/Jj2Zc0HpxbahMF6ml+FFmd7adBoIq9C/wfn+htL
NeXViJZoFJo4Nq8GfyqNOx+4TnkGjce13tiTDeQZjCvvpfulzb6v7keDC3YG
gplP84sir/wvy/XslA==
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 54.}, {-0.04493417236728452, 0.094542317527925}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.715886001291733*^9, 3.715886087704833*^9}, 
   3.715886200181745*^9, {3.715886289878682*^9, 3.715886311679586*^9}, 
   3.71588635293442*^9, 3.715886416933237*^9, 3.7158911710522013`*^9, {
   3.7158958244633303`*^9, 3.715895869420755*^9}, 3.715976638567713*^9, 
   3.716236866287513*^9, 3.7162838071780043`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bestCorrelations", "=", 
  RowBox[{"Reverse", "@", 
   RowBox[{
    RowBox[{"Ordering", "[", 
     RowBox[{"Abs", "@", 
      RowBox[{
       RowBox[{"Transpose", "[", "correlationTable", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "10"}], ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"correlationTable", "[", 
  RowBox[{"[", "bestCorrelations", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"bestCorrs", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"correlationTable", "[", 
     RowBox[{"[", "bestCorrelations", "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "51", ",", "30", ",", "17", ",", "18", ",", "32", ",", "15", ",", "19", ",",
    "14", ",", "8", ",", "39"}], "}"}]], "Output",
 CellChangeTimes->{3.7158958744922123`*^9, 3.715976656413404*^9, 
  3.716236866546096*^9, 3.716283815434196*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"54", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "0.04566489713734918`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", 
     RowBox[{"-", "0.04493417236728452`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "0.043789475630171555`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", 
     RowBox[{"-", "0.04338652400734065`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "0.04319669603730679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "0.0429844200480908`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0.03790088401973818`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0.033042780007546235`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", 
     RowBox[{"-", "0.031116630269444757`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7158958744922123`*^9, 3.715976656413404*^9, 
  3.716236866546096*^9, 3.7162838154362164`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "54", ",", "33", ",", "20", ",", "21", ",", "35", ",", "18", ",", "22", ",",
    "17", ",", "11", ",", "42"}], "}"}]], "Output",
 CellChangeTimes->{3.7158958744922123`*^9, 3.715976656413404*^9, 
  3.716236866546096*^9, 3.7162838154377937`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"correlMatrix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Correlation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"numeraiData", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1000"}], ";;", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "k", ",", "k"}], "}"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"numeraiData", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1000"}], ";;", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "j", ",", "j"}], "}"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "4", ",", "54"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4", ",", "54"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.715886785186606*^9, 3.7158868785637617`*^9, {3.71588693320157*^9, 
   3.715886937163497*^9}, {3.715887023107588*^9, 3.715887050241612*^9}, {
   3.715887118159905*^9, 3.715887169372986*^9}, {3.71588890256531*^9, 
   3.715888927828368*^9}, {3.71589582026005*^9, 3.715895821845044*^9}, {
   3.715895975986457*^9, 3.715896023726136*^9}, {3.715896056550269*^9, 
   3.715896123950053*^9}, {3.71589615412215*^9, 3.715896154460053*^9}, {
   3.7158962022676764`*^9, 3.715896211263694*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"correlMatrix", "//", "MatrixForm"}], ";"}]], "Input",
 CellChangeTimes->{3.715976663323588*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PrincipalComponents", "@", "correlMatrix"}], "//", "MatrixForm"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.715896220265727*^9, 3.715896233965764*^9}, {
   3.715896282056025*^9, 3.715896300978098*^9}, 3.7159766658978558`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"numeraiData", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "100000"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "33", ",", "33"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"numeraiData", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "100000"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "54", ",", "54"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.715887742793807*^9, 3.7158877930610657`*^9}, {
  3.715887838825242*^9, 3.715887841214072*^9}, {3.715976693150324*^9, 
  3.715976706018825*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.020328707320200264`"}]], "Output",
 CellChangeTimes->{{3.715887749729013*^9, 3.715887795986395*^9}, 
   3.7158878446836863`*^9, 3.7158911746999187`*^9, {3.7159766994296637`*^9, 
   3.715976712066195*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"numeraiData", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "10000"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "33", ",", "33"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"numeraiData", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "10000"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "20", ",", "20"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.715888017187201*^9, 3.7158880200532627`*^9}, {
  3.715888070654998*^9, 3.7158880722755337`*^9}, {3.7158884053323517`*^9, 
  3.715888405434843*^9}, {3.715976854235918*^9, 3.715976859273231*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxcXXm8jVX/VYbImFQihUJljGQIS6bILElmZRaFTEVEkZlEUZmlzEOKSDJm
vvee+TnP/Jxz7jWGMkT47b3POuf9fH7983685d5znmfv/V3f9V1r7XJvv9ep
//25cuUqVilXLvm/11YWPNc94UfvrJKbVq+3Mf6LD07FvjmFgbvuW/5UCwf9
3/9yb/2jOt6IjG1++XcbR//5tMKTHcKYv+LmC4nNBtx8Ez4uWS4DGxq92X3b
7zo+abSgUquQhtBjBYbV+8rDnw80/OaN5Q62VIhNXXYqCw1K5L3VbJmHhfXv
a/tp4ShyeY+/+E/7ID4t3H7Ll/2z0CPxwVtt3tXQ6eq5J3JvD2HZA2MHXvw5
gDWfF9ow7mkPVbufn/Xpz2HkPvPb9NZz47iz/OCE8ffpWNoku/aYGVnYeHhd
rpJn/FjSL1blwuAIxlYt99Q/7x7BwXCT+VOLn8XsqnnqPdv3OIo9/emrpV/1
MOvgkt6n7oshUX7fwzt62diyZMKOU3PE33vtgfP3noijbtVxmW/Oj+OvNyo/
/PGPFvrWfKPG8+J/Xz8RvFV+5TF0evDX39a8YML56tb41xeYWDu0ovXuKAMf
tPjyer7eJl5Z/ufCNUNdtA3+MH3QB2dwKp/8ZA56NKz023sTfFj9hXwQLso1
0Oq+XVXHtG6+vV6JUxgxb23Rnh1szNzqnF203cbUW4vr9Xw0gk23egw7fDeG
CZUG/FbyuIFHyhyLY42Fu01vXTy/38GF6nsqFS0Yw3zt0LE7RSz4i0wSv9rG
9FWNxScJw3/l60+O34zgqVWZZQ6dthEqfvWVMwNCiA2QLzyMXbFdr9fvGsKV
f157a1pdExnfzOxcsnsYV+Vfu2FjWu5yb+3PE8fu/6b/Ew0FsLLYfdM7rHWR
U6N3r8kTNfxQX/6kTOR6c/s7TxeL4fN3euotcgfxQIWTP92pbMDX9u1iXetl
YftnZcX/ZeP+ytMfjZyOYH+e4cap10N4rcXpA8vG6Hh/wsUlFcR7LVpw5/fj
j0bw6MPfzBvaNITmxX+b/fZui+shgI/L1B3YbLCLFd8v3nStuQnfH7cw/V8H
HX+rvfWNKRae7fv9xd5vOcgoKl94CEuWbT2U+3gQG905J5+elIMD+0f95XyR
wOs5e49U65iNrx/r89R3v2rY373sK1fe0dC9SaOcyMYggl3kk7UxI8u0Cy50
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
6vcbZmNdeVkAgvjaWDj9s24u9i+6EM5/yECge+7uFbp6OPL7mV3vlw2jpISL
NSO4vTm/2JkWEj1mbji+L8Z9GYD8U+UpFl5RxIYPC4pKpCzWlfm9wD7Hsevs
mY/XfK6hj/pCOkpNm/f5cwtE3yDbhJ89VBLVqvGQAOTpu3NGFDeOfhQ4/ukZ
4ksN+uQzRZ/+1Ga/lc3z0Y+On09u+oOof980lIjfxvH26yfWf9KAeImj4zs8
vB2ctfJb0RdJFrT9Fj/ffwwPq4ZOxxc5/UVpslBL/ZNJPOZyP2vkS0T9UA22
g+nr3jxeUzyf2wJ1P/iOA9XuPJKDg3t6HBr7dhbOZbdt/vzsGNyzi7YXGuHh
rRe/+67QXBOLxZ82zopAwfe/fDhY+OZ/NZromNpGAlmPOEzjutbS/KPaDsUd
fCmX37sh9oECX2ZJgs/mPomjyKf9RKtk8fyyIdnSbq8aaf5EtZeva6i/ZVvr
zu+dgoL3J0z2E1FMO9b5jx/WiP055uDPzZccxhtti41+anIW1i8te65RLgsb
519dOETg4BG5G2F2MQeLlsoHHiEOjaH7lxGB4EU9lTTLX0Gc7NlatEgRdBMo
c9R3DlQbO+A061IM9+/NW7yEqE/1VSMUwpTDzsktiTAmXN3aYejSEJ4e2Lf9
y//58Imkt244XD/ZxNlBNK8uGYYcnLh54/HHisTI6zp4cJBEqi5qfz1NdOR+
KJj9jYErz+U6UmuQx33lQNFW4nMneSHRL/8Yyb1pv4b2jSUTYGOSOhgsVFq7
QiBSB4+qH+ghd4GZT71zyeQ+tflzNQza7GvZOm7jvuuZP1ZebkGuik4fB/F9
JXnCxrHE1/+Fbf865ME8CHBV7v4iPvRRC8aGWJRVCnSwEcl/6PwtUS+Tz90m
zshENXn8ifN4vCK+TCgabKSLuooYFn3uG5IJszBaAeMgeQYN/boeLr1E4PLl
Er60iKHIytdOPTnIhni44sS3cTjhicrjECdo6FZ4xkdVJsbwkiwHmRbUMfme
Tn4jANnlnx3noYJs/6Jaun9WdObfou7eWL+owO9BiN5ZVIoIZBcwu3mC+z2M
LkWqbv/uLxdyVbf6x4Qql73OQLL0F5dY+Fe+zk8dDFYHmI2BH9cWLbPAwQN7
1C32hUN8HkfHFe3FR4vgZHPJ0NvoowpmNmSX2OFzD6UV8AhA0R4v5GDYKNkR
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
bzeiMpRjpty/rXzTxzv/OiV3tsMfb0Wxxp/uyR2oyCtp8NlXonFn146c5CrO
qUK9kqFXzdBFZbK/AvPSWGeEOfaE/OUa/09D/eui3ivU77l8xGNY/uk62dbL
cIZ6OvRtYw7DlN9vAx5KQv+wFG1rn5lyLt/CvrxEN1fK7z7ujUE9uQRz+V9v
N/5bIXqcva8Vxajep5GXaQBfiu7Qkg+aMadqyLssyJ8qIrcw+PEa0djuL4xc
Yss5X8jr9Tc06B7zmN8Z+Dou6hz87/anJ+Xs7VM4dE7CxdKgAyrgH7a8H3P2
D5V80retH5jgH10xx1rIzT4m828N318pimO+xaKP2BR1MM/50fbDiZnG3KLg
z2v45zbyrYM+a8yJbtGjlLF+DnqcRo7XQVsHD2pN1C717YL9t4k+sJBDNmdO
bKgfDLwJx550Hnk44X208PU24j0Z/BkW/11NbmWNz7uTf9VGu0Cvs+CcMfTP
K1H79F4tezYrim/cuyJnp6OuM+QxZbKzgpNbqTa95EFv++cl/d1QR6vAJGfu
14mOr+5Xozs16IKn7GV6+uUJuT3rsr0aOSf4f3vZ7H/7skUHV8Ilncc9XtCd
98wbRv78RA5So6Xle6yijk3tWPcd8zJczKsY59iBbz2To3QhU4mOnU6fiGLv
95jDUXOicYtfNbw3tdz2bT+YdvieF+xLV+RZDd/3/fwbNKGOr+gzbdzTBP9w
Jt/xGPSiRE+UipbDnWMuUkntx8W7G7h6hVziy4gHGubKhty2OfP9LtaBD9QC
q4t6mXBPju/lEt/H8PmpoG5Fzs9N5O9Y+amPR9prTV6lQi8Dh2UFdziRo/Q/
a3KmX3f+csLc0PL3GH2u85h3qdfho0u5ytva7ZgrUcsrVbC3hv9tzLdaoZ93
kY+kstHvj/wJI14t/J6vL/h+S3m6GiMy/NWZ+K3bI964En0N75QxpzXUWRY+
xwrd2vCcG78orDjXRh1MKrr2/1uJ3q+UO3n5+lDXB995id+kE421+dQCTn2H
L7eXJ+qB7/CNJvjCp/I0Lyt4kRVt18s5urfhvfHxEs9t0Ov25ENY+CQtvsZa
vuhxGkP9ELhaRnTc/oSaHOkxd2rcC7iYQxz45wl7w06equC9nv6pwu+2EC2/
Pt7LndXQOYcH3IjaLLbPRB/Pe465eCNvtJbveVzdD6bM9y1zh0Qeq8CGXlRG
/+mGvbdBB7LOfHON83/BeeAityDkBs7JXWqpq0vyEzr2F7loeXHD1egtrfz1
Yb7jSOXxCqhJ2Z8VkWMTdEKXUt+28L9KUVnh0x25GY7noZVb/bH8+Yy8gK1z
0uArnqP/svJHj9V7ThE532EOYpmj99y3Cb6VOfkQhrollblfy/67E6+GueyU
rfqyk7yM+uQ1/E6dqN3sryt8+HnkwKiNfajnQv6Fo/9ZsFef8x72zGEqedm9
HnfJF4c67A+FB1WX1FcJfJCGutPK8OXf9y13q8jr2wwvoxXFaj5yAW+7lvtp
YJYVtaE8tRFP2d3piowcspl49dX1Rzf03S7yn8NzXsFB6OCNDeecgkALWfPX
wBsr8a7S43cf/jzfhj14Sm5TL/6pfck7UnxuFt9GBWd/uF89duG6OuZgh3PP
4cMq2T9P4UG36LSH70WBvR05gRl1ehv5l8G/38v7PSZ2l16+6+UJX08jt9ar
G7rftnJfb3e/YAkvz8b8u8BfKeCqZnHPGPxLM/L6rBynF3ABz2DO3NbCF6/l
xWrgceQx5eRF1aKP5W0OPVFOrsQE7v4ickBC3VfJS1S45Hg/FnBvKrjrE3K2
W3QeOT6CDu5Zwnx1XbRc+lLHz3M9n4dDP1zLuR63vRrOSQXKJPKKO/nK4hbR
deCHtuZpBj1LBne1hsMyk/63fvHRwt8y8hX/OL2upU5q8fHkcDBs1MeOPM1Q
V7W8R4Us/Jj22jl+kkT06/xHi3/KyE+8DPm7TvbUQVkiD9JCIhXFC+y5EXk9
j9DC1bAvnaF/NXCKM/Z/hr2Qpa628NNmclcFDVp5nI/TesqU/PIV76llzpGT
O2zI5XCysaMSD9l7XQ9PbfQjOvbqc3SGBt93ib+sJ59ljX/Pyja68CxEbSvf
TWQbHZgu0PkaeakagGbkEzbodYyoDPEjNubfBl5LiR7DRV3R131Z8RbDfN7J
7AUe+JCjE1qSD1cwZ23hIW4ht2EzuV1F/POCv8mib03h5jqeL0Nedim7qKC8
Zm+UwBM0cqkvo97Tw2VbI++zQ7+95H1p4KU78v4a5qiOOrpHp+7kvRpgXjHP
ytBv1ehRDTzdhHyPBfOPuZxmvHGiiFy9cR87+s5C7v1cvAv40jMXcW+nx8cf
Krj2KfdkGvW6uhY+NseH4+hbanmiBo1uxh+d45/r0SWW5NNY2V6NNIns7rEN
92jkaX4MvE0P36sS/Tomw3OmD8pQx+oit4y5iSHXcLPsubNPWlqRMzlHL7qO
nitl7jATTwX56ztKOdOXeQc5Pr8cvWzD3rsVr8L68k5GFEf6kwpedsPfe8xJ
ruCslaLrx2kVc/yCf9egN7SRbxn4poYcF8dzuTWX4d5qYBq58kZCAEUtn/Ex
X/fo4djMI2cycP97+Q8fj7trw/zeyD4a3Dlh397Jw/WFXHD/V+x/cs73jn1U
yTxqTf784Q8NndwGvPFctL0c6sDA78vZkxvRtucbLfnac3K7OlEM1aUz5q0m
5r+Fz2n0bRr8siX7y5r87VHPvUaO6IL7tRW1iT16Bi9hBcflJtE26wet6Pr1
g0aepQDWKfw7I8bL5H9r4SIb0diI3495Kw38/BK+l2Ue5WQomoeT34iO95+w
mX5zRp5fx/mdw/2v5Plq/DP0XQm+XEO/VMrPP+QPToeexVBPWfIGJvj8Z3GO
G+pNR16ZI7fGkmu7lJv9cfuKBXmhXcynDlweK3qN7DnUA/4xfN+E+Z8lP8VE
X0XIJRx5mxNRG9j3N9AXTODfd6LruGKcY4/8Gsd5aeTTXu7+LUP/WMn91ADu
+P1KUZnc3ZeieJYHW3wAU3QWfcxrC3OsVeTnq+3zk4Wc7WMp9s/RcfTwkQz9
2ErupYvmFM7SStROfUQF57+FH2XJU3TwXFP5gBrvts6jQh3Vidpmz6iof1NR
eu/zZujHS/z/Yx5qKYef9ZsDb/9xIUd7zP/LDPkxTtQO+O0J/U7H85vAF3Fw
pRt45o0opmd4joLuuZBPevz0m13MjQjPURPngiHvxbC/NvJi/RfHPtTR56Rw
URrRMuzbDXynmjqoZ89Qs4+axb1PmPNWcd8b/M425k+GOVGGriDHP7VBruOY
k9SQvzHum7rYR++rA6iOeeUy5nv4W+8v/2rJtbWR/xnm0i37kZb9ZYYPb+gD
VXhr4WyZuPcPuTcN3IQcLuec+smhS7bMG2q4Jpk8SgFfVdTNZh4jcNRSVG6b
5VHHGvq0TfJxjyn/8tAn+4/laIsOyYrxa8hnD/eEx33ulZOzZJgTbRKNv35v
BT/aRX/N6KsL8yDL3LPnPbbkEPSisoqdm5grGebkPXOeAj64g3No5OV6oFXy
cjUmpcz5x718Kue95pzLtxv6Qx0Lv3/0/xlRmfjQN4T8ybFPbMkXv5pzqWfP
t4LvkzAHKJgfNMyNevnAFccNFZaVt3h856tnouPa3WsRH5f0WMdzsoC3P3wv
Z/hgP4s+2ES/TPBBWn7eWhRf9z8Ze6mS3I2EOqsXlXEfnHBuJuSP5+TOGvTn
Fn9YJ4qzv3cjx+niaiWP1QaggTfVineHPuXpjfhb7933GX2Zw8/v5R0nZPx5
Fu5bKd1t3giX41NZyc2f9UGGC/JaVuQquphrvZcGgBr6HgNfdp1c3Dn79Iz+
0cn2vsy4fgW/J0d/PZf9v3rRCZ9bt+ROVtyTo26xZb6Ykct5nXiKwTsfcgt7
/6H+2cZflAY9fAFfwcCJT+GA9PKvOkjv2XNU+AFbzuVEzvWy/wvWqCMMfUEh
H/V436Gu0vHFK9bhphWidozLGuYGGe9PJ+9WYJzhuXHsUQvR+EGZU1cYcpQz
0THKMQa+5rifcMyFJ8xrWlG5x3dr+Mou6gmDT3T0aaZyiAaerETXqTencApW
cg9dNC/hDeRw+Sv8yZY5e0ffPc7LZnDsavm1PbM9aEvK/nKDfYKBW7iU12jD
NpfPeTxEUcljNVA7lUcr+KFFn5vFXGefprGfc+iQ1+jHh+fW2zbukZGTmeJD
r+GFOHmcGu4tOqkWv/gEX6qNuvLgW2pizmjok1zkbYfnyPFcNdT1M87vDTlG
gyKWonFBr69FsWc/v4bnwNJPpqKP7xUr0eviFSv4UIk80pexLx85VJUcqYab
lPzxQlQ+8m8dHKhUXunjyfY1cpwC0Zx80ePVk6Gvcx7cvmJusxQ93o9aido0
P5PxXHTMdws5xZfHV67IP+jgaaf4q2ru3VZ0vFrV6JENdXxNPltCnnHH/MPA
Bahli8eYDHV94FjUouu67eacvyXnvhM97k+tRcu8P01F1/jHW3wlTnyK4Hc+
bSJfPvRbCzjhFp2Lxb9jyFNy8MSWsp8Othz1QxbP2XBPLtDrF6Ll3XkNfsxR
Nz8VLYsuLaXxcqb4HM5F24yjen7OK9ETOHR9FXNvKxpTcHTBc5OJ8/E2b03R
F7YxX0XjJT5k4jkT9gOG+y+jPyhF48dO2cphDb6IRJTq/ZAK3YaRd3p7yk9W
cGqyqAMK+s+G+i+XLR6z+q1a7qgBKQ7edhHnvWHemkvtZcdvX4hPnbnp+Qlc
p4Z86+E+UUF0St6zi/6uzMuUri5k4ePqjmmoj6b0aU4Uh3j5hJyX4bm0u7/m
gIdX8jA9kNakep8HYdRw3yt8hR1874o5esnctKEOHHMbSp7rUt6nxp8s5lCF
3L6VaHz1pgV1uhM/Hd4hd3KENt45erMOfWdBf9GKYspeX6HHXMF/GPpHH3O6
7RROj0GH0qKX7uBEZ/IGDQZy5KEa8sFTUVvTppY8slSOV6NjLvfXA78UlWOd
25KjVbGvnskPPabw0A7fcsceK2FPk5N3Vouftj3u+Ixc9RRdlxFtS25syJWx
Mb8rcGwNdXINB82w3+3k7SoYS+F61Owplsxxe3zyRayLdI0+nHuBg1HHunLk
EQW9okHHU5PncAs6hQXfmxGN5fp+xedpZeax3xem7MscuZrzmO886srDvtWg
X8gjzzvo+FM4Cwt5szZaTv7m19E7lHI3XbwN54QfZ32qpg7sZF8dkHfohGtR
WXszY57Skidn8cFbUZv363O5nx5so58kkdNP8kZmE/N8wzlViv71n2Xgo1bM
3wwcvVZ0LfKDq+Sz+/vN2gY+v633Y/BtWXJbZuSzjXvmGj9IyZ6sYH40i/dS
mCsk+FBquYcORke93HA/eZz9N5fo3is4ZkO94rG6d3NwXZbk9nbyFo9xHX6f
sB8w5BksRGMB71/gd0rh7yXoWUZ+bElOVk2dUNEXZ6K22Lu3ojKq9Zz+Yeu8
MOTP5uS6GPmDb4tWBr5VDVeyE7VdfyDBJ+CibyXwE7fIR73M9u21XLSDJwdn
8lwFnszRDVfkNNaiY9jZEr9OIslefsEz+vpq/rcR7z5++VkGP4mBu5zC5VzF
3MAwb9qMbqClj87ITyxlDwVmW+qHH+PXXpFHsGSu4qJv8Lu3+8VvgQ8tISdo
IYqH2HPOfWTptw18z5b7Z0EdaNAlFvJzjzUenvPA16si33ucv4WftxBPEd31
Iwv46YX4qdmVn5nCL7Pohh1zl5Kc9EqOUoCgQ99TyD9rwT/6PHN5iy5EHNyj
Fp3nlHuxgN/RwOcxopiRSwt4aQ69phW1Pf/UkYtVxzzc4LOs2N81+JUN+ZuJ
/M6v5S4dnh8FvNb4STvqsJL3dZ09qBFtK19i5IajvULWcW815Pu26PiujP6G
96oAbsG+IIGD0YjaAP+rZX7mOD8X6N5SURveqww5fkZeoYKMMvZ7Iz8x6Lpv
IN9xE/2CIwdws+jabq2J3P9QP1rmcDbmgQT+XwFveoFvsiS3woqOgzpLHu/W
PPBR9xx8Fkt0QS3c0FxeqMJjC183Ze6bkptYy+4HeFK0EZVrvTOTaz1e/1VW
1Gb4iqUUx/qDcaw3y8idC/zCzbKvLjI78hnHOug6eXEYqMrxWshPmJt0cgc9
WLf600P/aOHN9rLNg7yT6hr0ngver4K9dYluzLCXsvgvMtEx4iNS7oUxH7pm
3piTdzXUxwqibjh3FqKYjwdb5nbDveCPn/0XzBUX8ht/bWQWHWcrD9FgSCvH
K8CiY16Z4dua0O+v5EQfK3P/MQ+gxeexkKcrCHcrNybk15roYwjc5E68O/Qv
j8zhVPWynw7WN8FhcPg2DPdDhh8plU/5teUzF+jCjKj96Clz5jEN/NUOPVMV
69qQI5zLGzUguoU30sr/dIt9tj2yYd9RxPc5cOateHfp6uqWezBDV+7Qdy7R
+yzlSo8lfmjNXGaG/6sS/WXfdPj010WP2xekouX9n3JyrSfsv3O5wsu+2xJ/
aivf9musBxlyXzL6iEIerl+gE5XLnG85J5vI+wj3VcHcukS3Z9kfFfifF+Se
GfqGiahc/VYDB2khRyg4fCLPVpDxMnJQAz9+q49+9GeF/n8WeXOBy2+ZO8zQ
26+L4nNfOJGd/Zpq6J9CrkeBP8dGfvwlX/z1V68+0FL/1OiXZ+xbE9H1x1dm
3JMNc39DTty1kT8V9LKOfimVfVWAO+oAE573XDTG9JUVvtY5/Isxz8RxPhTo
pcZ8spRzOyf/0pITvU7u3gL958hN6uCoGPYZBfpTKw/VheKMe8Hgk7DUbTM4
Q71suZd/Iwv5rC8bT+/k9OKY4SOZi8anPrBjD7dET92L2onuVbLfHHN0N+De
F9yfGfkfQ13oZWDbzURlHp/puFetvEmFT07eoYLMCZyNNu7/dX37nRX+0QLu
e49PJ5HJRT7A28CdXWN/18dch/cMVc9vDtwUc4+D3n/k7XWicW3Pb+QGL8P+
lpWd1CC7GR1Eg45ozPOqma/MmAsYfDOpPNLHjm2f8p6NHCVHvdLKqb7MPriB
i2Gp9x3+x5+z35mRD2Hlem8b/9JSFPv3upYc25pzLUH/NOZ3LyN/cTjkhqOh
IJfFiK7fdmpFMS2fcrFOC777XB7l7TDvGX1MU7ltixf2Wj6XSn7tZTjbrZPn
mMgz1Hi5Bb5WyXmQU98Z5uUWDqAjz2yGXr2JOa6jXjvkIS6ov8f8i635SYGr
W4uOWc5p4Tjl1M2N/GXhA4ULzudEFDPxsRpfb0l9WuIXaKKvNOjhlrx/VnJ/
ve2Ryt0U9Gvw9To5yGOo7lygQ83kKi8reVIpD9RgqRafeEMObUau+JR5UBlz
Isc5ezgfKjiyM/ImOureBVyDln29i3PNcC+m1B9OFLOflugZS/gfThSbc/pE
NM75/Q4dZBn3ooGXUZNTXsu09YP2dTjxBX5by5zWiGJ5PpKw98nhDSa81x1+
/JK8+Sl1uYn5XIHza+XdKiBfwZdY4kNZZ86aUccb0fL9OVXMTw17wwXznQX8
xTk615vhcTh87RXcuVHf5kTliU0lz/Lj/DcuxashHvamLuYGhvfayle9zM5l
+Okz5pcN8/JEtMz6xGb2q4Y5RCsh5m4m9/Lx0GkmGvv2rl4+42MLH1gwb+pE
5UW7rnO+1eyvV+LpY6f93FLndPC0HHvzhHqyp76z7DsN+Tk5XNacc6URn/b8
qvdtpo+2sd8MfKgaPrmFb93hx8/hAhvyVUp5h38d/+7Qwxi5zNt9n1PgizDy
JjWujT7jlbzW20W+X+BPsNTxM7nM4077Vh6lwIuUP9+QYzCVZ6iBpUZXO+qA
jLxWAUUpuVilPEh/YcIcupTfGx8s18AFq0Ux89/J0ZMkojag51WRN6Pjpafk
cpjHs37ckjMyQd+7jg6ywKdUiZ9GP31R4LM1UV84cmpC7mnLOWDhec3l/6kQ
KdvKQdI/36BXSuJ8N9Tfo1+hY65Zovtr+R6He8fb/3euybcuODc2kVveiI6N
31vDCy/IQbL4qhvxVeZhH6ljXTrqfAJnvUZPYkRjr6YFOs2h39zd/8Q1e36D
DrARLSuuaeUTnRcEFsxfq5gXFvTYGfvdHI50w8+3gF9T0C878gPmonij/Wvq
rFQeevMzt7nwBUvynZOoGwh7qA3Z4seOtxtyO6bkIk749S28V4MOsUAX5+Te
GmRh6edTdHWOPPihT9dCysqT1Bhb42t0sqsKqlr0ZBN8LyvRWOM7LEXXNtst
mUeNPggDj9ygn85EMYDfMKKvyzUp/oue+6WBD5GzB0rg36/IJzDUSVXU06r8
7S/D5+6vpc2J7KoB9Sv2Bo7zahb3kK/xMcQba8ynK/RtS/E01o0ft6Kx00Pd
512pewzvn/7y+VC/+WNkeI5Dzq2Nc86gCy3Ix1mTmb+Wn+/kV36stL2jnjWi
Mp7728iZDvPLoc9VkJeV6Tb+LzScN3oRtqLy1M2We21JHk9PnmAql/ty7cie
+iBl7rxFnqMP/PX410b9XY3/rYWPX9KfjLwNI39QfNJ1cs6LvECkpd+29Bul
eDXS6Qfk6Hta0XHulcN75m295xn5lLcLvH8VfbSBvzHUIfqAFeTpWHmtAo4r
eZ0KwlL6sJnoxz/0hRpHuuOCeyeLc8bg76y43xvRx2w1/Psve8TfDpYiciyC
f2Qac5139jK64X7Ux+fFFfONJuoVw3vZoZcb8/sS9IkOn/+aDIfi5ZdMS/H0
k827tPjBLP1dKTMvH/9zSY5Hy96wEY0TvDVB33i1PE4bsA3R9cDEwedtRWOx
ftLiW85F45gvnpOT7aIvJsytGngrhjlww3PtqO+MKOb55DTmo4Z5aclzY2K+
RPAXGDnR21mOXqLX6+RQ/7G+eY36vBXn183/MZE9fZz8V4fz268thrroZC+z
Gd7z4N9JyY82so8+mC25RAl1qmGulsG7tjEfO3BKF8zfWznTx3793Yjian7Y
iGLYD6zwwXWRaxd8RU6+4eMXb5rFnPugE1jKfgr8s9EnFHQKw+fn12H/WaEX
WZIX5uBdZfhob4I71nGuGXj8FfyQGdwXIyprnKyLYrE2LeHeOPzIM/LTRt9F
LdpG51vYi5qY7x5yOwzz/Bxus4lz4sC7aOS9Kjgp0ImNz9eU3N1b4Ess434z
5LzN2Fd1cG1T+cpXPnDiaTsZkXd4cqWTyy70X+BSDtUFZIE/oBPFZ01SUYzF
uw28wpacMoevspPcj7cWK/xEJnJLgg6l5t8f55YzuNhd7ItD3WiZB7b8/TP5
P/84fGHMqVpDb5vH+zLwb1PRsX0yntOdzL188/slHM6GOrkXXZ/9PWVv6ETl
RR9z7B+WEhYIRk7ew1eshpxxx3uVsz9Yi3mVI/83cG225if+ysdh/rCQD3lZ
9vMK+v2Z6PjwloU8Xw2AK1lX27+Fs96y95+hG+rgrW/G37siz74i78bAtc1j
/RZ8Rluf85CPNsfPseQ8tXL8Oeft/oO/FfhO5+i3GvTbU/oUJ7qG+ticvUgX
fdxPUBD71fj+G1G5cWXRnSTUBz28vRX89RrfQct8KsXfZtEvGHT7Q71wqwdx
OFGb+o4d/hILb6YUlWk8qZAdf/usm45aZOTVDPWux3B/r2OfmaG779HrOXis
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
YY59ihG/fTjxtIZ8TCMqo36XlV31YF7IiT6Oe9vRd5lzD9f8PC174Iy5imVv
nuPT6ehjDPsqR79u4Qwa8sAN3HYDxyCXZ/ox+Rk1vDNHPTDy0ud8vj3zpU70
43piiy+wJYfJcf/N0KG1MTcl/L0y9qIWLoKjf6mYu1eictHnTsmPKkTX8+fm
ou3B06rIVVCc3z1z/CsdeW+pqAzwDMt9P861aln6mNNHjnqXDp9wHfdIoY4d
9VmtaPzD45by3Qt8kEzJvM6R+2FEsURDfRt83p1oe7Grg4uX8ve5AT/YCt6t
E7VnLWb4ZKZyirfpH+ngmc6YA6TyEy+bf85P2ev3zLOaqPMNvuGKfVLF/nud
+U8WfdFhj1PB914nD6jk3q3ZS2XUFXnMtQ2+bAfnu4afOfpDhnNGg5Nz3r/R
PzqjTlix96qinjvMozPeE4teKJOzvRz2wk7er8L1Eo5Bh4+8kdP9evahI8d7
ISrPf5whV3ics66zd7sGfeNKdIz+Swc/fcHzlJAvsULf2uLDnKNzNeSrDOes
Hmw1ebAFfMOUfbvD723QdQ3vq5ehD+dD8CGv6PMy9PSWz23c7yzIYavgN3Zw
VVvx24zz/qWAi9/Dp1riH6hi/7/Ffx1PH/OGE9GYgi2W/N0Sn/ZUXujxxTu2
zItncO7W+Xu2cS4T9rwl57DhHBt1sw4enYHflMGXWcI3M/h0Df1Gx7zXwR+a
U98vROXcW4Y62I/X3lBQR1b4iUfd2bgHTaJf/84KpjHwCa08RYOTUnnpzocP
pcAUTqvBT5DAaTTo9IdzTRuwjryEEn1Eyxxtwdx6Cu+iIwfXUGc18moN/k7Y
Q3X0CaNeOo/ca8WiP9RGfV3gY1l5qTZKPfrfJOrew7x95FCm6IWdPF+DkDty
W1LO8Q365Rnzl4Ic2ILc814U1/6McR6yhfvTxXzLoCeewr/u0IEtyNHsmQe0
csbd/WZmzA+oZVc9YGfi6fV7nFmLllknWVF52uMsueg5OdrjfHkm91YwXyNe
5b4c7oPAPx3ui09+/5rpKR35DQtJfUzSH2tyVgz5j9fG3Ing/zDiKYtfelYL
77dHB3wDfVaJv2oD/VrLvmQqX3qW7ywcz0vOe7y17w95WWU8z0JfPhONZfq8
EY3zO2CCH9BxXgz1tl8DHzjqDVN5gS5krBytALxMDlFgQ8ecYEK+5NZ75Pfe
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
sd+6IYqvuF8vN3q8d8D38kYNfKrgKht44R059lYepYVjiy5/lMep8MLAwbTi
1VoXnLTJXNOKxu28xeAnr+GaO7mJXvSOvItN+aW3yU0/1y3VWJnznPX42Yzc
62Ve2drCpTZwkVvuoR4dbgu/1HL/DnKYAtNr0ev1oDU/f0+ObORplnDsGu7f
LvnYAv9lxv098J+WefL0filYpsJPcbEoHvjCNXsIx/mU8XvV8CUL9Hst+slc
fntbv8CKPtSop4y5p5Z+YiZbfj31si3uRZM4ib7aPu6jLTyGnLoqox7s4a86
UXtYtUTv2qEDsORiGvJDlpwfl8GtH9Bd9HCgGvjMDu5yJyoP27EzcakDp8dR
D+3lRYa9UEsO0Crt+YPvf0kuRM88fgUfcRA9bscaf1UDR6+DD7DGH9PIP/ix
3kaV+JpBHzTdKyoEasnxqJkTOrjsVvQ4njdyigq6rHzV26V/VMj9dGBbsLdz
5EsV7CnaxNkOOhcDnznj3OnQa8S97goucOStR/64E5XDH9ijq6yokwdR28a7
RvlN5gVItTzLt8dfNolrOnob5DlRb1mS55KjSzLkRa5EbXF/bOFlNeQ5F+iS
evHTvz2vrlK9FT+XwGu+DC6FIXe+hL9t5Xhv2728I0dkTl5Lhj/NoM9z8GAa
5kKjKH7iB0t8xRX6gg7/kZXnaiBjS35nK/rx/bEhN77Dn7gkP6wml3GH/NGX
F/9mmNsZ+qYlXKdL5fH6i+0WtaWeVdK/jvBDCnIlClEM/3T+hn4vY6/Ts4/Y
lEP0Dxzl2trYruARFezxHf18k/Kc4vMT6mWDHnOBr2XA77lAJ2mSjz3Uswa/
YNyzTu+Px3LtXIiONV80iLY1D6sTtzHo/xz+xZp63qX89iMV+NrD8WzZTy/I
q5on/Vl83wKvZS4X3N0/MU6+73G03yrJfSjT8zM/yn/AW+j5Hfy2Ju3dw/fS
099EHWSHDs8yJ9oQjV2ppr5dA9tX+GHW+KUXzGMrdKYxj7KU/RTI2MmGx/R+
33BP9ryHA3nrlvlNBa806tus+K3rh594OefGDP+D5ZzKqEeXctyvP3PO7Xb0
5ANZ+fyR3tjRow+P+slKPnGaN9AY7ueePLMKffrF1Ekd/GdD3xbPuxIfXUtu
38B7sYCrUtHnxj6rIf+hk8/7uO5XtfBDBvl7j6nd3BaNizraoP9YwxdeouNc
w0FtRPElz2qYg/Sy4WMFXnwlOYMz6vmMvNbpfvBrsrcXcqQC2B37GCMXzzyA
u2BebtHTdDwnC/ZojTzRyw/eb8gDqUXlGp+r5UpfhlYtde9MvNuj+VoHZ7iU
X3sc0T9YfJyX8/uv5TBdYK9Ex057es71gnPTyQ10MNKIxhE9OM57W/x/BXXd
HuqYn+PHyOHzrXkPLc/jQO7bkn2mkYcp8LiG7zwTxQN+pZdTrTeIb7MfseQl
N+gwpj7Vx5Kf4kRf949Oz4/Hn30nE40ZuUlDztAGz0vHHM+iByrkBzqpjRyS
Khyzp3f4ltbyeR9fet8KH1qXfG6Nl0FdsIBzUcsxurhtyWvpyDctROVMH2+o
o7tUZ4Zc0I59ZIE/5WJ0gRaf75z3r2QPXJILN+K/2MN5PZen+TVwGzkLDTxx
Q77gQO5UDgfSybU9FulKyxw4Z65ekFdWo8/JRfEor16jT1rKofriOvqnSvq/
95OsbfZE23BJNskHcJwPtdxP/6+C816g+6rQTVT4ozN8mjVc8Abd+kI0DtNZ
+qIeLnct/vS+22t24zs0+Oss769hP2qZ2xeco1ui44CrhpRXE+ahPft8g+6/
YZ9g2Pes5ShffvxuBWfCJe5e2Jv19FF18rsHX2n0ZfSJI6F4oWXcS3boPSvm
clmqRwInJKPPaJIvJXAql/J6DXrt5EBtDKtUTwXOYZm4WVGf+Hwd+A1pXxVz
mALX2DC/KLhHbeJvhvp+HtrGM4x8ycfF3bCSF6pQoUdHUCUea9C1GnSwdeLs
R11CyI82ona0xvJz5KLj1R/tYu/Qw7NZibYHL2/499ai8RJvteQSFNSnBr1q
9A0P6DRy0R/vKT3zn0w+5+OiL6jIGV+K4l2uv2CPa+ETW/K4WuqJBl9uwTnc
yTvWvqByzHvGxNOIeaKP9B/zixrmdAvyII1s7eMFDD18miV76Apuk0VHV8Oh
tOg4O3KBCrny/r4jnuFPm/olvya3pTzZT+lut0Iv2IrKL8+ewf81cqAK7Fr5
qLd9lY7nu2fOUsA3sMxr53InBe1HnusV5IIW5ItFH0aXdLyBW5eLp/icebBB
V2pFZflPtvBsevIpLD70OXt/KypH/GonXi3x9Ok+CnzuMeUKhe/PymsV7OfI
S6pF5cm/msk+T/UKkjHtEd7iMbA/r0TtDvePHN+1eBXpuh/lbn4MfddaPu/l
V7NMtC27TSmb/tj7XkmuVZ94h1f58c3TLO93yT1WMR8q6Zs24I/2cIwz+qjI
GxiZpxv5xb/5m7lJ3OJwLlruk5Vo+XTbFr+fhSNqRY+f5/TojHLqmYL+YxTF
GL62R3e6kD1e7v+DWj7u24M/Vvhna3RUHXusWlR2/JGBnMgSvtogV3jbwUmt
3F8bDAe3zcIPbuXGClwx7FtjbkLPPtWKxuT8d4HfpGeuv5QL/PrgGv1ef4zq
3DLydhq5sRZwBZyuXqxfH99wwf3n+PctycNcyX4q6F3z9zfkD3Zwlhr4aA19
nE3nSaina/phm/L5gv92Sw7Q/2cLrlDkAxSi6+03NOKrlgffxqEfMOgvGtF1
2WdKuDk2+Q+C77AiZ2/q4/06+9SOOd4cH6ujnq7pR3vqgVFUzvFZK4+41RXu
729pkh7bq6TPP9Ywn6nQ5SzZ7xnyw1u5iQZWGfbujnNnlKfrgdOIr953X7mS
mykY3ZFHkssttFCPOe9Vyh0N/NYr0DXP0WvM0bvupv7O4BhcKX6LfLOPZaI4
iem+DX3Skrm8kRcGA1j6fuJePOhpp//u5d633xY99r6xgX+lhbu4pn+y1M11
+hwDN3JNbkzJezPVHTfyG9pevvEQv+Bu4ADEfZFBH2FF43APXeMHbEXLl1cu
5A9eHvbNIX0vT1PjsRWVI189Jg5V4Lz07OmW8lwdoO7VF4R84j7lK4f5sknc
l+CDMXKSCj1bOUIFzQP+UCfv9vLN52boBgr8CSO8J5NyolRGcEBGHdDBT1tw
bhrRtqfLRWW/npOrc/YCPewg91ZAukOHvUluUCGX+/jI68U9UCGeOnPfB1k4
3zl7S0udX5PjZ/FbOXKiC/ZbkWs/JA5kyMlbUJ9lcoFfsz8vJ6d8hQ/RUm86
9NArfr+SOtaKxq+e0eBrcHCnO7gOBh2slZ/5r+V0h0+rF42TPLSR031b1Fq4
2BbdVSsqC7m0xfe9FJ9K9bpvbMP9XYiOZw8a4YzapFMIPsEaPZcl53ITvlYv
F/mx668z/DsD/UhDrsAM7rojR6aFE2bozxo5UoPLHFygNXMPK4pHeEIBZ39O
HoSRz3mb16stegfD81nBQbD0sa2oHH1/Qz2Qc1+VorEe113Jy+6vm3fmE465
USNf93aQHxh8pVvS+fXSVO9+r/QffE5d03C/WfrTGn/Gijm4pY5cJR9q4E7V
omXE99fwbAq4zIa+usfH3sqL/ePQT3WCtxV9vkv5gs/XhnkGN69iXpHhfxjw
1zrmujb1eYFPn+Gvjjm9Bl6XwY/QkvPXyccP8YMBx7zAoBOKn2/UHe/i/NxB
HncvaguUNbpFR380S3rv8D0PorKXV8e9bgsnNO7F6uRDjj60wFGu034n8Kmn
ulIDJ7fRy5bo4R3P1SD+1DvrgJ5z2zB/HMgfa9E3VPRlg2j7/ahG3uRjMnIn
Dw0B3+TXORn8OOxXhvlHj29qQV5dL/vrxVTASTSiOLwLlnzeg+h4dF8rp/p4
rYMX6CNK8sRq8nsM/JdcPM3xgyc7uIZOLjjDB+ZdKccpiK5ij7FCJ7Ukt3cm
Wj4e36S8kLBH3iJPpJVX68LAktdR4nPZ4DmKPAuT9ochP8cwX9lgb1ImP3vI
FXDsn0f2h3PqqIzntkQPWshN9eLr0f3lnMtTP/uhYx/hbjOSP2LQJ5uklwu+
dIM+xMgL1Fix5P613Ieb6Kr3yFfe58FYDt9qh95ohq9gi36qwwffMrcp5XN+
nX5jK7fRg9/AezGisus3duigF+hdIwd3IFdrIb/5pAdYGPYqBdynPunSwj1o
0eNU+KgvlofpYnAT3f42/lpDjlMPx6onv6qmXyzQ2Xdwk+LeaJv8SSd6jT2r
lg95HNgVM/Ju4vc5I29kjU/BkRNm6Ptd4gUGv+USvqeRL/jH4v2d/MiX69P7
FXTdDfdyhx5xRM+Wi2JQ/9Whp2943ww6oIF+wMC9NeJ/imd/oBNda565hEtX
plyd2Ife3l+Hv1jI9VWAXtFf1sxvGvYbhRyuALmaOnQ6VzXgai5nPMsTsBfo
QEb2uTP5oW/rHplxn+XoB0byDHfAe+vweRnmAgtRGfWLnTgvI7v9gnnCWv6f
LuqNvMjLN6c+OOTY1Wn//ei/Psd89w8b8MgH9GUtPtMF85SB/s8wR5yJ4mof
MLDv7WVfBRt06O4r/PcjuWEVOX+V9L6d38jlCj8+f3GVdODh2KtEbXcXGfbP
LXuhJXszJ54G+ftnNqlOCX6HUt71kRs95nf3tXIHBUY2zNcc50uGLs5QN24w
l7Ryc48zvKrA71ng/3XkFxnm1qWobeyRVu6pBjEHf70VLeNuMCd/o+O+bfCX
10m3Gfpbl97noKex6J06/Pa13MePUV9j8SM15GI47hUnKsN/QU/egOG8K8RT
JN9wCysPOux1m09934o+ZM3cvmEf4MhNdvCMav59WfJjBT9uwXvewKVdke/S
idr8j2nRg+7N0Q75ZYO890leMDvgj21E27SVQTdjyL+oRe2i088b5set6Ot+
L8P8b44frReV9fxT5IpsoONr5XP39B3fgpyoFq5K7OeHpNu/ngawjvhYHXuV
Xt6ogZ01uX9b4tVSr9s91Z/f0oEb/p1BzjjRK5JauE0F86cC/aIln2pTHuux
Vi9YJq5N8B0uRMfAf4v1/pq6ppOrPuKB85Xo9fTDmr1gk86JJ3+puOZXzy/J
jV6Inx5+pXFyrsehTXVZmOet4C2aNP/+qh9vnr3CB9PDacrkeDXyr+HE9vJh
b2+f7n8da963JG+8h4MUc2p3cc+u2DcYcgsr8msW+FumetWvP7cyuEdWfBre
J/536p98bMmv5qI221vsgWtU0C84UVn79yp0ACVzGCda3jygk0MVzFBy765T
jnTgR9fUrzP4U4b+t2Y/1XFvZ3AMqpRrGPKLS/kXLeic+JSr+iAn2vacZ9kn
T3WGXkwFHM4t8rmaxBOPvrCQ95ujqzLynd27TjnznW3iwOyj/zdDj1GTt1OK
Yh/amI823WN+3byzlS0fv324IY+8xLcaeSOO+XAn//dc/xsb5qoOfd3InGwp
Gvd8wChaRr9jA39uw3xwG+7w9Htr3G0jH/XH6Gkd+TYxV6EQ62NL952jB8/F
T5N+eGbF3jnDT75Cr7MiT2rF77GU/dRY6MgprKnbOlH5+VGV/NnLbw6NvMpR
dnv7xfS/x/yekCtk0pxHx7tfM3K8LiQs3FnDPTmIYqHu0CV+jH7cdzT4OAr5
gMc/HbXAB2DIfYn8jzX+9i75rMPeysg9NWgyZ84V8212cE4bdLc5OnzDHKaX
8eMvnUrxGq6uSTqpMM8p0x459JXx3qmZG0fedaxn+5RbdZGP33v4Ap3dGj3r
dF56bPgTB7mpDihm5LGOyZ8d/Y1hT3kZeuQ1eqP4czfk1sU5eAG3z6Bnnp67
p3oD9QzfkJXiob6gLETlQ69vEm8r7PUc+RgL+EEjHGfHf3foFh3fo4F3dRnc
jo6+zZFr1HBO1uiPCnQ/Hb7bOX7EMuU9Bx5GBee1oA4xzM0X5N5buY42PDEP
dC6KX7/+kvcvpy9bwmd3cICL5LsP/tKou8nlIy/zL/CAn9LK6+563d+96yHT
++mxI9+9TP7Vy0ifFvNQKznNtwXHdHCA1vR9lny+vXyvoANbMc+r4VHl+J97
+Udd1Dj2iFXKaw2+vqVovFyzCXelkxNUIGGY8w7MexzPheVe6NCZ9fgPpj7B
t0vP6+DrtaL4t8/H+YljD2DSfjFwNwz6njn70wE94cC5uOJ8LdEpbaW5k44V
/mzwx2zIK1VY0ZGXYNDt1PhcLmWvt8afYsRTK+57SMk+cEM0rvRBI/rqS9mD
xT64EF3r/n4QlYdd5OBuZ4mffAP9AffmJChWZuyZj8QclxLfXc+cJBP943Z2
cOBa9mqb5KBa8gHX7E9jnnYmurZ+0cicxqIPHdjvXChqC5737Fut6Ot65CZ+
xxnzjFoKjzWZ6u25j/Ha7dgPG/KLttBjbMALc+itjDzHt4f/Pmf/OtWvXlZ0
cM5cN3JSKlEZ+Vc2ku4xzq2D/7ESjaP9U4W/bcDPs7cfCv7mnvzVnO8x5tTU
7JNKeakOGIrEEw4cJMt7n6HDteQ8VXJrbaQqfI8D/W/O+9clnmd4Pwrm/xl9
ekveVAsPuRddP/8lF99NPP2MItXBgY80kp/UkbuQi46NvtGQ92zxLxr0SQU+
ryXzsk3u9y36zIUoZvM+Hbmmu/h9RuaDObz1jrwAy5xgqj9UGGGp+1o4xoW8
1tuPf1ig02/xmff0m0v4FhbeccH55+RIDQrYFi2LnrQpBxziO9s88XuCz7Yg
R6TCd7WUsx7tJ729/K8//hctz01DnbsiT6Sn/rHkd1vmXoYczhwuUYtPvsGH
07NHb/GdVczFOvLEMzlQgV2DqJ3yt5bn0IjGMdy5kkt93MEvDfPJhv2aSbmf
7/fymYe2svCvxR9j3ptBf7Ri/ron9aGB/7agb3TwIouUvx5yeY2ofOUvBd9n
IZ7KuPngGs7JivuwS89z4NsYPvc6+bJDvzQm/XDI1ylTnRL1pEFvOIqnvl1x
/tR/n+cPqBx93CBeHb3fsT39awWfbUAv2sOv65MfU21/R0S/5zLxZMOcpEt1
QeCZxPrFSeWv16lviOdK4BZeIV7d9ZodM/Gq4K3pfPP0iJMvK+HJr5kXxxzY
nH//PO0zwl7tAvZEu+FlO/lvv36+3JAHlLMXcejWVmmfG3SFVrw7ZH7jlehj
/a4WvtAS3lIG79nIC3ShXuBf7+Wa3n721456uJdDtSFfyN88rvJTm+hA+jRP
DnWPhf+4ZP+64DlxcvYZfnFu2Lca8jtr+Wc1BI1pfxLyxnr6ZAdX8OLkr3uF
gjmd/Mrjt787yEXeLv6+ln1Cj8+rZ/9X0G+Mct6vfIBrI1OTMH7o2CX3qIMH
toQTPST/1Hu8vH/6fkOObClql/9WJ594qV4k+Oca6ralHO3L6vut0KmY5LsK
c8USPWzkSeXwOip8OgO++Sz5bOP+IPgyGjnzLD9Yn95Tj018RyeKmbu7gd+0
k5/Toe9awDuoyX3LRW3l31zAMx/hJxT4Oiw5Ya08WxfYBTm1Di5cgS+1x6fV
pf1BdjM/aK0lYCinv+5jAusKLuxudHqN3Edf3B4OUyE+teAL23XaPwQ9Zszx
Wsklt/XA6pY5vpUv+evvuSP14Zz8jo66rMO3WorG6l7H4iOx3Is9f04F13U6
v32c0/2jfqmVH3tZ+8FxH9Tgu1vJTRRYOYjGrd7ZkHfbk0vS4APaAWdgTf8/
x69v5Gcex32fXO6rwQ25qC3z4zn+to732sr3/vCKS175hZxcgx59tZUbebnf
a3v+fkufNoNLYOV//Mfzz1GXPXKfL5iLVaLy6+MyOOKLlMMbzguTuCIx5y7W
D1FX7ul0d/p/FzF/mqHbGuXcCz2ov8cnXdInZHDjDPwkh8+lELW9TX9e4G6s
yBtf0P/a5BcIfuKRPicTbQc/ZakbG7mvChMa9NoWvlr0M3RwlEZRjO/UVwc9
mIH7YNPeKNQP8d5w5Pnlifsc9g9z9qDT5+xxzqucvXYjj9EDa5Dax+rsV1Cv
9aJl/qcrUezoZy289ZY6uce3NcN3XKCvXJNbOsNf2OP3q+VEbTA79Fctut45
n0tF/kiPftRSJ7dyS2/v/EmHr6SHX1LRt63l5Woo2ITv21O3tvx5VvRa/ruM
fZDBFzIwB7xAdGz4GCNqH3+pkw/7ddTjBvr+VrRtu8yxf+vYJ079r49pecY6
5VMEndFKdD366fheTc/j0X4S0uNLKBPHP+x9GnQSFo58Ay+8hQtr5fkagLCA
47KNP3L6c3VgXqT9eNBDDfRFA3z+Te6hEV2yEy2bp/7hvIP8YqOWb/px5Mcs
foNW3v1Ab0RcyXd/7gXgsV4oxKdM/2l6r8IccsTXN0+c+5dosKxj7tKgn53O
O48XONqI36Jf/cgWjvZA32LksXrA1dRLjj6iYf7UiMrzLlvLMcv9nviHqa8M
+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
L2NP2MMpKrkvenSqJedp5FQ0ieevdv0zLT63mue/Yv67gj8yyB88dv4pc/yP
jrzljP6+IK9zhc7cMW9oyeGo0NWu4Ul2+JealFcUeKM1PIecc32bfW2d3osw
t2vEi+bf+U2H3nKU6+vgeZnmN4/2Mcd/sPjqjFz9aV/I5/AzjHzG48LfXrKf
dinPN+h7SjnV49cWhv4ocusyfLOFvN9jj/664nnYnfbwIUegkQMP8jfCMu2n
AifSoFtpyBEq0nsT9JiDHPL9I69enV/LqzUgKCP3YY+8SoW8K3m0BsK1iesV
9g8Xc34M5BUY9BlGjtfFVE8f6bgPpj7Dy8iu2YvGmb3P4c+u0O8M1FkD3AEn
Xr142nuiLtngl2jTHjDoLqY+Qg01nfiU01fdb5ANf6wf0jEX7Zib5fJyDVI1
cEoz0XizpzXy974t+icralM8tWZeNP152khEn2QhWnZ+pIAv49LvcSsFJpSJ
ZxZ8ZRZ/bpV0XVG3ETgFsX7s2ZvvQhfQwyXYQc78SF28gFOby2P0F8vQ7ZXU
EbsTz/Cqg/zNbmX0ZefUX0UdSugbC/jlfbpHw3xnhT/J8L2X3E9rnuMN+AaR
W74hrY/tm97bY1ToWcHvsXLmLfymfkl+goFnZZmrOjlKhYRtyi1/9y39g75D
zvRri/Pm5JdsMa8d5BNervbFVu7obfCXtXK0/zWn5+wd3qY0nSPh3F+LT095
9gcce60MvVJOrucgiiX/vYFPPvVDD/TE9bVozPI1Nuh7a/RhvWgc1vVy+a5v
a/64FF2v7fdz6pS4X5v6fT9eebIjBytL8/Swp3WJr+JdDW89I2NfWOEfdbL7
+d4oPWPv36ADaMl/duR3GLmXBj51zM0W9A176G+jD7lO906oswb8aSvm1hty
vAqPB37vWlTG8Pt4v7XyKf9rT31UyD0ug/1to5N7q9G15nm9TC73st6Xxjq2
Qw/Sio7Rv9Ezn2jJR3NykDbIvegxtbsSlW8dXXHONnAyqnRuafly/06CfL+V
V6twvRdPUTzrgA2eA4uPuki5PJH3dLIatTflfip0MuTBd+K30M87YQVHc8b5
MdVZOijt2Q/17MVHuGxt4qYHXehIHscan4sVHaf9Q4/+oJevHOuF3A4dn4V/
WojisL481b/X9jdVlvylcf4W8sF68mAM+tpBtDx9W/QBZeTE9/BdBnm5gh6W
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
/w/a+L8E
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.91045}, {0, 0.91079}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7158880237409067`*^9, 3.7158884095974007`*^9, 
  3.715891181523045*^9, 3.7159768627626743`*^9, 3.71623687717078*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Maximize", " ", "correlation", " ", "between", " ", "feature", " ", "and", 
   " ", 
   RowBox[{"output", ".", "\[IndentingNewLine]", "Find"}], " ", "a", " ", 
   "minimum", " ", "set", " ", "of", " ", 
   RowBox[{"features", ".", "\[IndentingNewLine]", "Minimum"}], " ", "set", 
   " ", "of", " ", "features", " ", "should", " ", "be", " ", "maximally", 
   " ", 
   RowBox[{"orthogonal", "."}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.715888190933812*^9, 3.7158882625700607`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["bestCorrs"], "Input",
 CellChangeTimes->{3.715888952731851*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "54", ",", "33", ",", "20", ",", "21", ",", "35", ",", "18", ",", "22", ",",
    "17", ",", "11", ",", "42"}], "}"}]], "Output",
 CellChangeTimes->{3.7158886676509027`*^9, 3.715888953106481*^9, 
  3.715891187799279*^9, 3.715976878824918*^9, 3.716236877567683*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"topTen", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"numeraiData", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "2000"}], ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "bestCorrs", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topTenVal", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"numeraiData", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "500"}], ";;", 
        RowBox[{"-", "400"}]}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "bestCorrs", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topTenTest", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"numeraiData", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "4000"}], ";;", 
        RowBox[{"-", "2000"}]}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "bestCorrs", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.71588863144998*^9, 3.715888791354727*^9}, {
   3.715888822183991*^9, 3.715888850371703*^9}, {3.71588893576329*^9, 
   3.715888978530218*^9}, {3.715889025473995*^9, 3.715889045128173*^9}, {
   3.715889084672632*^9, 3.715889084994652*^9}, 3.71589008074995*^9, 
   3.715890469118649*^9, {3.715891030845912*^9, 3.715891031136825*^9}, {
   3.715894851201339*^9, 3.715894851360447*^9}, {3.715977138102295*^9, 
   3.7159771560026484`*^9}, {3.7159807626929626`*^9, 3.715980771938737*^9}, {
   3.715982599459977*^9, 3.715982612095952*^9}, {3.715982763227869*^9, 
   3.715982795908813*^9}, {3.715982873064988*^9, 3.7159829287672577`*^9}, {
   3.715984481844557*^9, 3.715984483260787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{
   RowBox[{"topTen", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"topTen", "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.715888979777425*^9, 3.715889005347823*^9}, {
  3.7158890382728786`*^9, 3.715889040833817*^9}, {3.7159828027692633`*^9, 
  3.715982807312188*^9}, {3.715982880144676*^9, 3.715982919990128*^9}}],

Cell[BoxData["0.07021129046324472`"], "Output",
 CellChangeTimes->{{3.715888988600075*^9, 3.7158890062630243`*^9}, {
   3.715889041346591*^9, 3.715889047480991*^9}, 3.7158890892779417`*^9, 
   3.715890477557115*^9, 3.715891187860179*^9, 3.715894854476275*^9, {
   3.7159827996545057`*^9, 3.715982807627945*^9}, {3.715982877119356*^9, 
   3.715982920274737*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Feature extraction - principal components", "Subsection",
 CellChangeTimes->{{3.715981280513864*^9, 3.715981292454364*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrincipalComponents", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"numeraiData", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "20"}], ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"4", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "//", 
  "Dimensions"}]], "Input",
 CellChangeTimes->{{3.715894952803125*^9, 3.71589498430128*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"51", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{{3.715894955451644*^9, 3.7158949847703247`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Correlation", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"numeraiData", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "120"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"4", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"numeraiData", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "120"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"4", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "51"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.715894891996862*^9, 3.71589492725679*^9}, {
  3.715894996206305*^9, 3.715895001247048*^9}, {3.7158952940937433`*^9, 
  3.715895295464671*^9}, {3.715895329665551*^9, 3.715895346761054*^9}, {
  3.7158954298662653`*^9, 3.715895496266127*^9}, {3.715895579930245*^9, 
  3.715895582279025*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.003946652822228947`", ",", "0.07165712518443038`", ",", 
   RowBox[{"-", "0.11321860667783751`"}], ",", "0.20967013490887867`", ",", 
   "0.002558264305124263`", ",", "0.05115095816417095`", ",", 
   RowBox[{"-", "0.029527261128226786`"}], ",", "0.2615092562274168`", ",", 
   RowBox[{"-", "0.12434761752274788`"}], ",", 
   RowBox[{"-", "0.19007634482849498`"}], ",", "0.06942916884648183`", ",", 
   "0.08010615509942139`", ",", 
   RowBox[{"-", "0.023995596173843604`"}], ",", "0.19409905258552795`", ",", 
   "0.024805579596166638`", ",", "0.23313695942909826`", ",", 
   RowBox[{"-", "0.1371725421148598`"}], ",", "0.14752846121730567`", ",", 
   "0.1057785950895453`", ",", "0.0905733833077241`", ",", 
   "0.16509227618599723`", ",", 
   RowBox[{"-", "0.10058186623198093`"}], ",", 
   RowBox[{"-", "0.026162960787711166`"}], ",", 
   RowBox[{"-", "0.06442710589265574`"}], ",", "0.17360817939611242`", ",", 
   RowBox[{"-", "0.0850008946765388`"}], ",", 
   RowBox[{"-", "0.12626756698571645`"}], ",", 
   RowBox[{"-", "0.07574791072495643`"}], ",", "0.07330934803704543`", ",", 
   "0.23231276242472956`", ",", "0.1625040880891112`", ",", 
   RowBox[{"-", "0.24626885323286768`"}], ",", 
   RowBox[{"-", "0.0433423397300773`"}], ",", "0.07730425646941513`", ",", 
   "0.12522447226118777`", ",", "0.1718543825270701`", ",", 
   RowBox[{"-", "0.14189374868650914`"}], ",", "0.09115678409709022`", ",", 
   "0.05931075260383364`", ",", "0.16796867098279067`", ",", 
   "0.14612098691817174`", ",", "0.028090815378618086`", ",", 
   "0.05582095102257082`", ",", "0.27682163530475323`", ",", 
   RowBox[{"-", "0.10419581529340138`"}], ",", "0.00964948240831524`", ",", 
   RowBox[{"-", "0.11637398933773006`"}], ",", "0.06661263526607925`", ",", 
   "0.187667125510114`", ",", "0.01997085739640274`", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.715895466045958*^9, 3.715895496541811*^9}, 
   3.7158955825598793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["4"], "Input",
 CellChangeTimes->{3.715895463241624*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.7158948795081367`*^9, 3.7158949277675123`*^9}, 
   3.7158950017329473`*^9, 3.7158952959404783`*^9, {3.715895331628915*^9, 
   3.7158953470851316`*^9}, {3.715895439598855*^9, 3.715895463595142*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PrincipalComponents", "[", 
    RowBox[{"Correlation", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"numeraiData", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "20"}], ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}], "//", 
   "MatrixForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.7158950165963573`*^9, 3.715895032824448*^9}, 
   3.7159812607343903`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model training", "Subsection",
 CellChangeTimes->{{3.715981300594396*^9, 3.715981302849888*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Training", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"trainInput", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"topTen", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainOutput", "=", 
     RowBox[{"topTen", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Validation", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainInputVal", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"topTenVal", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainOutputVal", "=", 
     RowBox[{"topTenVal", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Test", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainInputTest", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"topTenTest", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainOutputTest", "=", 
     RowBox[{"topTenTest", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.715889092633421*^9, 3.715889186962096*^9}, {
  3.715977165355949*^9, 3.715977193803994*^9}, {3.715980744804167*^9, 
  3.715980780425528*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7159829419410667`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "arg_", "]"}], ":=", 
  RowBox[{
   RowBox[{"arg", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
   RowBox[{"arg", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainSet", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainInput", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"trainOutput", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "trainInput", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainSetTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainInputTest", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"trainOutputTest", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "trainInputTest", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"trainSetVal", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"trainInputVal", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"trainOutputVal", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "trainInputVal", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.715977199569909*^9, 3.715977209874742*^9}, {
  3.7159805769999657`*^9, 3.715980624361875*^9}, {3.715980686150194*^9, 
  3.715980693033764*^9}, {3.7159807871994667`*^9, 3.715980804417389*^9}, {
  3.71598294370335*^9, 3.715982944367572*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"methods", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LinearRegression\>\"", ",", "\"\<GaussianProcess\>\"", ",", 
       "\"\<NearestNeighbors\>\"", ",", "\"\<NeuralNetwork\>\"", ",", 
       "\"\<RandomForest\>\""}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"methods", "=", 
    RowBox[{"{", "\"\<LinearRegression\>\"", "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7158892226615667`*^9, 3.7158892349747133`*^9}, {
   3.715979110095406*^9, 3.7159791176536417`*^9}, 3.7159798089311447`*^9, {
   3.7160107872576237`*^9, 3.716010800509939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "Predict", "]"}]], "Input",
 CellChangeTimes->{{3.715979155180188*^9, 3.715979171154396*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"NominalVariables", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ValidationSet", "\[Rule]", "None"}], ",", 
   RowBox[{"FeatureNames", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FeatureTypes", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"IndeterminateThreshold", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"UtilityFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Weights", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"FeatureWeights\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"DistributionPostProcessing\"\>", "\[Rule]", "Automatic"}], 
   ",", 
   RowBox[{"\<\"PredictionName\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"RecordLog\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"FeatureExtractor", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"ImputeMissingValues\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"ProcessorCaching\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"BatchProcessing\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"MinimalPreprocessing\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"ValuePriors\"\>", "\[Rule]", "Automatic"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.715976994021249*^9, {3.715979147000896*^9, 3.715979171619562*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"ValidationSet", "\[Rule]", "trainSetVal"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{
     RowBox[{"net", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"trainSet", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "}"}], ",", "\"\<LogLikelihood\>\""}], 
    "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.715980518553501*^9, 3.71598051988551*^9}, {
  3.7159808473973427`*^9, 3.71598084989537*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nets", "=", 
   RowBox[{
    RowBox[{"Parallelize", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Predict", "[", 
        RowBox[{"trainSet", ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"methods", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "methods"}]}], "}"}]}], "]"}]}], "//", 
    "AbsoluteTiming"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringJoin", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Timing is: \>\"", ",", 
    RowBox[{"ToString", "@", 
     RowBox[{"nets", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", "\"\< seconds\>\""}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"nets", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7159770390975122`*^9, 3.715977046140233*^9}, 
   3.715977232528989*^9, {3.715977434328145*^9, 3.715977439142323*^9}, 
   3.7159786433305073`*^9, {3.715978695557212*^9, 3.715978710379875*^9}, {
   3.715979127676372*^9, 3.7159791279275703`*^9}, {3.715980513018959*^9, 
   3.715980513421362*^9}, {3.716283883304487*^9, 3.716283890878417*^9}, {
   3.716284000839808*^9, 3.71628400377563*^9}}],

Cell[BoxData["\<\"Timing is: 2.2656 seconds\"\>"], "Output",
 CellChangeTimes->{
  3.715979133138356*^9, 3.715979176075392*^9, 3.7159798133929863`*^9, 
   3.7159801991476994`*^9, 3.715980635864798*^9, 3.7159808157277317`*^9, 
   3.7159831665130997`*^9, 3.716236880203434*^9, 3.716283854972603*^9, {
   3.7162839068829517`*^9, 3.71628392249463*^9}, 3.716284006712365*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"netTrainOutput", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"net", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "[", 
         RowBox[{"trainInput", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "trainInput"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "@", "net"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actualTrain", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"trainOutput", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "trainInput", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"netTrain", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"netTrainOutput", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "trainInput", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "@", "net"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.715889282797864*^9, 3.7158892838811283`*^9}, {
  3.7159791359759493`*^9, 3.715979136652268*^9}, {3.71628417249507*^9, 
  3.716284174665862*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7159791332088223`*^9, 3.7159809847912483`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"netTrainOutputTest", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"net", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "[", 
         RowBox[{"trainInputTest", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "trainInputTest"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "@", "net"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actualTrainTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"trainOutputTest", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "trainInputTest", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"netTrainTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"netTrainOutputTest", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "trainInputTest", "]"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "@", "net"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7159810143661947`*^9, 3.715981026946087*^9}, {
  3.715981069083954*^9, 3.715981090775264*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7158894670892467`*^9, 3.715889476742272*^9}, {
   3.7158903949904613`*^9, 3.7158904184483433`*^9}, {3.71597696598098*^9, 
   3.7159769679726543`*^9}, {3.71597853154036*^9, 3.715978535381765*^9}, 
   3.715979180457255*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"style", "[", "arg_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"arg", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "16", ",", "Black"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "arg"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotOpts", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"style", "[", "methods", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", "0.28"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Timestep\>\"", ",", "18", ",", "Black"}], "]"}], ",", 
          
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Output\>\"", ",", "18", ",", "Black"}], "]"}]}], 
         "}"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.004", "]"}], ",", "Black"}], "]"}]}], 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", "18"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "100"}], "}"}], ",", "Automatic"}], "}"}]}]}], 
      "}"}]}], ";", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"netTrain", ",", 
         RowBox[{"Evaluate", "@", "plotOpts"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Training set\>\"", ",", "Black", ",", "18"}], 
           "]"}]}]}], "]"}], ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"actualTrain", ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Data\>\"", ",", "16", ",", "Black"}], "]"}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"0.45", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
      "}"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.715889507653578*^9, 3.715889562623945*^9}, {
  3.715889650846107*^9, 3.715889652051414*^9}, {3.715890142336172*^9, 
  3.7158901633734303`*^9}, {3.7158903804403477`*^9, 3.7158903828503304`*^9}, {
  3.715890425215003*^9, 3.715890433394438*^9}, {3.7159791816778803`*^9, 
  3.715979181941978*^9}, {3.715980820675754*^9, 3.715980820801523*^9}, {
  3.7159811257764463`*^9, 3.715981126750122*^9}, {3.7159833465449247`*^9, 
  3.71598335031804*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw8XXlczc/Xzx6FVAghJCGEIhRvewhRFBVpL5V27d32ve7avbdCFLKHKISQ
RKEsSZZCSEKRZO25z+s35+sfr2k+s5w5c/Zz5o6z27XRsaecnFx1Pzm5////
f//aFv2yaTaadKZxEfsDUjKrjncLGlhbHqZ93lzpvP2StZVwXWVS54M1r1hb
FXFPX78dW03j1ZAzvy68SJn61XHnnp5y+zRqa0BnjMOO7WPo+/GYwtW091eg
tiYejIo6r29ObS2cyDLJUVehtjbcG4cdHpdG+5uC6xo5ayYYvGZtHQxYv3mj
3bAXrD0dU44tdVTrSfvXRdfFbxHaI2i+mXDtNDYf4kjfz4Jp/iHx8CT6fjZG
BB5Zsxe0fz0sV4po21j0lLX1sUZhaK1hGq0/B139h5Rf+fectefi7o+2drPp
NN4Av814dVzQ/PMgX/V0sEhM7fnweiq//NA0gm8BTm4V70twfMbahujiOJYe
q6bvjbDg9j6DYypvWHsh2leOf6mzg9qLsDw3a9tQVZoPyFOtOaP7i8HPAez+
NF/JdaD9LYbpph2H7azY/JzF+PjMIl27H623BKEmXWPk6Xw4S1AbWODacp/2
txQXD69POezL1uMsxaF3an9DL9B5L8Pno8mr+p+i9ZfBMtvAK/Q59S/HT9+V
NiM4NP9ypC1f37JwEJ3vCiQsci1Kn0rzr4DfxIW9/Opp/EpMfTc846wjzb8S
zQO3nsl0rGf9xhi61kG7sJDByzGG+tgFbp/6E/yrMP+tzqjofQy/nFXQTOjt
8307zb8aJyuX/X3lR+NXo+Xxw85plbS/NSjTs9AsEFD/Gng6Brw870/9JnDo
/7i0k86bY4LS2mvjxy6l+dfC6AB3hcUG2v9a/OHJ55mvo/Hr0C/ubU+9cTR+
HX6dbh16WpnGr8dqbvc6TieNX4/q7i121Tep3xQjONwc/jF2fjDFicJhPvkH
2X3lmCLL4d70mXqsv9QUPidK16I/jd+Af3fu199Qo/EbMHDQpKKNqbSfDVDy
+2gnXci+L92A3D3Lr5u20fiNOBk8wShkHY3fiJrs0f7VpjR+I1L6FV4LpPlK
Ze1DBk/0f9H9M8PBoCpEWjN6hRkWXjZYOv4twWuGZd4GEwbE0/7NcM3SNyzw
AZ2fOWa3nZ0+fB67rzDHgcd+ynNtCX5z5Aea/Cu+Qfs3x9Lnmlt5//G/TYjv
YfYjYCvbHzZhodfEHQv+svk4m/DeVjty0B32fekmLJ1ceKBfJtHHZpTf11V7
fIbW34zA9uY5yqcYPJzNKLxbumPNPlp/M54u0/FdVEX30wLOWtbDtY7Q+haY
kSBaoE7nybFAYPOs8WNus/lLLVClr9svgu67nCVmZ7pMtXKl8ZZIb61erqFN
52eJEb9fe3mE0vqWeDtdrzEnn+DfgiRrQ7lUKevHFigcPjTqpJTwtwVjhr6q
LY+j8VtQWDmhfD7Ru9xWnB/wc0TFKsL/ViSM154ZdYzW34o9K87Y+NrQ+K04
O7TI7doDGm+FtJmXD+57R/i3Qta7rUVCOh+OFZbnVIVdmMXwXWqFnRs3NOZa
0nhrnEuQ2vy9xPANawz/3DXqxFrCvzW27BKWzxtH98cax3rEWT2xIflgAx5/
2J7gpbR/G9wtGz22m+QVxwb5+5v2RdvS/bWBOHpKj9/mNH4bris3F01/Q+e3
Dfu9Vn8syqTx2zCh3ujo+NHs+9JtMMxX6dB+QfdnO3KeaH/sIvxiO6wdg58/
iKLx23Htygl7lXza/3YciV3eo1WH8G8LRR+v4LxDdf9ra9ji0Id5l+pCaD+2
4EWeGP8thZ2frS1uc4wst66n+2ULzQVLfjxIYfchxxZyu78Mf51D69mif+np
gONaTf9rN8rWO3UodEIfOv8duDrV8cV0JTa/xg7McWk+rWdD93EHdFdVKM6Y
TevvgP338lEOT2n9HTCeJl/wOpTx55wdCCrSutz4hc57B65sD9tr85Ltr3EH
RseVeIuq6fztsFLoULlen+Fbww6PMGd+yRLCpx3WBfw93pXL9mtrB/mGQYUr
RpM8soNxglrwa9KXcuywyazL08GH8GWHNbVF3tcMaX07nJzgNM5jGMFvD4F7
+M1yMduvhj0469eexSj2PexxvCIwICOUzWcra0sWJV9aS/i1x7J3yb7LvRj+
c+yRXbbg1EFlWt8eNuO21+aSPtVoj7ePdpz7tJfo1wFRc97vMTCk9R0w9Jb8
oei5hH8H3C2tnJGykekPtg54XTBczno2nb8D4tNH7g5OIfgd4K5R/DR2JdGr
A8y1X3aIk9n5NjrAa+BG7ssbpH84Qu/zudWL21lbwxF+n86cO7eX8O+Isr47
TPzGMfhsHbFjct5b14dE345Y8GjXyBpnun+OCLF/VptWwPZb6gjx2Z0zNhK9
Njqitekx91IK0Y8T9GL4xnItBL8TzO/qpSg1MP0ATni7puWGoTPh3wk+57/v
1n9B8DvhjmT5RYczbHyOE0rGH+/8lEb3zwkvpx3NX0r6ZqMT3Oa8GKdK90HO
Gc+5Rn0tvNn8Gs7YFt5f2Psw4d8Zsz22lIgj2Hq2zrgUsMLGsJ3kizOqzWx6
FxA/zHHGySGvrKyJ/kud4X7NpnuBLeHfWXY/i1d7b6D1XeBUN3rEfTMGr4YL
RpT3GJA+kfDvgvWjR5ysUWP4s3WB3v1Fh+bOpvvngn7RictGrKP1XTAupo/8
cOJ/pS5oPFDWelDM9t/oAvVRrg38PbS+K7S/JTnkJhH9u+LyEIvrAfNYG65w
v2JUV+9H67siIGnYJpt8Wt8VLXpx2c//sflzXFFzY8qbgxW0viueVM5rNCd9
sNEVbWqffgYIiP7c4LPiC39VNOHfDR5PJu/M3Uf07wa7XpwXY9OI/tyQJ23f
4mFE9O8G1TsG/nd+Evxu+Ox1cq3mUZL3bjBeU13dcpDw74bS6SKPa//pDzsh
cUosjhnL8KmxE/P996k4TaT1dyJHveNPdjDbn+1OdM/qPH9Bl+Dfif0NTsnt
vk/Y+juhmzlYyXgG3b+dWNfVf8Q9X9Zu3ImThl0DjDeQ/uOO6KeL9Tc8oPXd
UZh2NkfjLOHfHW6cRqlOAfFfdyx6cMvXfzCt746W3SMyg3oQ/O5wFOoah14g
+N3RIP7grqVE5++O2o5pU7oTSP54QLn3mnRFktcaHjg9s8gvcgTRvweKNrt/
mvaS6N8DK6Re11+cZvTN8cDX6LZf/NGEfw9sXh68ZO5WWt8D1gGBz9/PYPtv
9EBqzdYg0QDCvyeaYvOdR7Yx/Gp4Yo2v8hkTQ4Jf1p9Z//smn+jfEw+WvLp9
Zgfh3xP7BiyuH/SP6N8TXY+2fV5G/LvUE1valotz7jH52ugJi1u7dj+qJ/63
C8E9fOerGxP978KLC5lZjXNInu/ConxNo9Jaun+7cE9nWFnjUuJ/uzBdeN3f
cj6DL2cXHveXd5j9lvSdXSjeJTe1vITOfxduh447f+sjre8Fk2v9HPZEsP0q
eeEp8q+KpxI9emFD17dHn66x9XS98PmmXeefKjofLwQPvNqRu5u1Tb1wYfQk
/xay32y94Bh9x5N/hbW9vFB7d69f7ljavxfsFq/dozSTwcf1QmzMbbMRxwmf
XhB/TXD9Sudf4AUDv/0/AvIZPyj1AtKTDoh/MP5V7QWXHTcbzyfSfffCZLvm
8XFBDJ42L1TpbealnKP7542FDp9P3AKbX8kb+i7PuQNPED684bf6p7zwJsHv
DeERc6P76wl+b9zYd/T0qaes39QbrxNu9z84kOjVG4Gfr+ZtnEHwe2P0WZ+O
UrL/Od54pLpvyva/rM31xtn8qSU6zxh8Od5IP1W6K2Yaaxd441DZJd3cPLpf
3pAc0lwkqWP3pdobP/tcyFT4j997w2WDhedD8m+0ecN2/znfgQl0/33wb0zF
iVHhbH4lH6QO+lNalUz8wAcfP6EgVZ6dn64Pvr8P+ji0jOD3QU53zwGXLrPv
TX2Q7jVt4Y8TBL8Pep9rMSole87LBxenDxjq1o/g98HXP88+Oxxi8HB98MhA
tNCM+HWOD3bvGhe9wIStX+CDJ+OFwaMnEvw+eLf+bbniGHZfqn0wwOJUt7cp
0bsPrgh6RGlsZ9+3yfZ3KqZe9Snpf77Yb1jOnTCfjVfyRUhFU2kH6Rsavvj+
LTludwfbj64vTKtcnpv8Jv7kC5uIuTwdst9MfTFhjf+aB+fo/vvizOLpM9TM
2X68fLG9Lz9jXhjxT19wp655ZHWStbm+kF+b88kmh/iJL+p2TdpQQvpVgS90
+w3ruVmf5Jvse4+xTvdbCf++ULgn1YqcR/LWF6PdH188WUv49wV65H0uHkr3
3w/aUR4NH40Jfj/8Vnv3q/4P8UM/nJWM0jA1Jfj94JU1bY/cf/D74U1eyMY9
pB+Y+mF20bX9+8m+sPWDXv6we/KjCP9+CAioOJG8jvDvhwerln/8fovo3w9D
LwUXzX1A+pwf1pwafWdwKfu+wA8LsmfWqWYS/ftBM+3dqzQ6z2o/zAs33zGV
/FWNfhh05kBKGumfbbL9nvTy5VsR/P5Yf6lKFEv6vZI/rq96MSXqJBuv4Q+h
tUO+qTPdf3+Ef+uutSJ9E/54NCJTu7iV6N8fl/kqRmrkv7P1x6uW4rmxPYn+
/VFz/eJVPS7JD3/8GdqxTzqL8O8Pp5cOTzrGkT3jjzFn7G5nWxH9+2NdbC7v
bgzh3x+GUkOb5CCC3x+xQ63nOw9j/LDRH/7t8QVpxcT//NFTZ/mZW6fJHxmA
x5sum3YNYvtXCsCFSAVPd7LvNAIw8NqYyqJagj8Ak/fXf7fYQvAHICU/p2ft
WoI/AEpdG1/0ErL1bQNwwsdGuGs6m88rADlVVooznpD+GgCTY/929dxF/C8A
NfyCl8Gz6f4HQFug7NwvgO5/ACpF78suqpN9Ixt/0cezWovgD0BuTvS3a2tI
3w9A0szCuI3tRP8B2C0s/pNtQPJvNyZf+bLBbjzBvxsd20MPZhN/1NgNtX/5
amdV6f7vxvoEZ4t1hF/sRvrpjhETP7P1THejn8TX8DDZP7a7sf/MuB5NQ4j+
d+Np7/rCcDvC/27E/OBcNSon+HejZO8d/UUtxP93Y7rKz2AO6WMFu7FnVdLx
ntfJvtmN7d/zbf51E//bjUM69zuVPen+74ab16B3PuQfatsNnTSDgXpniP8F
Qs0+QiekieAPxLfvRtE5dQR/IPr+ufxn5GeCPxC55UbHx74n/h+IHHnJsr/y
hP9ALNrYFbjzLNkrgUiLf12xehfBH4jpf5UN5AsJ/4HgWWXtXBhI9B+IzWdV
zvwi+Z0TCL9wneN9JhP9B2LvsdyTOeQPLw2EY9mQ9seH2fjqQJy3c5jmKCH4
A2E92XjI1hCCPxDRHLfG24NJ/w5Cs8K6WcmkXykFYdxuU7uixwR/EEz9B/Xp
eMXW0w2Cn5ffij0NBH8QntiWBFw2YvCZBmHWvFcTIl6RvhaEKSFihfWzmP7n
FYS4H3v2WDaTfykIAQN0ao9fJfoPgp3p4hoFskdygnBgyZ2Kj4lE/0FYOztw
VcR/9nUQXq/ZFHN7Lek/QVCelHv06ByS/0F4FGR0uN8m4n9BqD8bFPArlu5/
MBx05ZMnfif8B+NETNn14yUk/4JRfWPPZNMjhP9gfHUZWvS8ku5/MExWOfrn
17L1TYPx5I/w3QmSr7bB4Fx8d+LVW9b2CkYfo/svo5bR/Q+G9hHNGt/17Py4
wah8sztM8TL7PicYHaU1m3/3ZfspCAY/bdboZ/0J/7L5t96vLvJk9FAdjJ3h
U5NL1dj3jcFQ1HzuPy+Y7a8tGF5unn9bRxL+Q+B8+eyXgYMJ/yHgtP64evgN
yb8Q9PrZ0r9aj/hfCB7rieXv0X4RgsPeIyyUy9h8piFomzfhSPxzkn8hqDMN
fR5D8RWvEMRNnP1T/y7BH4I9s3jdr++x/XFD0DNzR+8jF0n/CcH8GduXbHvM
+gtC8HXAiAVbz5H+E4KOp5/3n4hk61WHwFyhf6+f8gR/CNLVJh+IJH2rLQSe
b7YdnNpK8Iciwe/VwBkDSP6HYsHj8BR1EPyhSNFd931HFuE/FLPsz43pc4nw
H4oLvbVW+LSw8aah+OJa9dVtF/G/UOgJ5oxxJ3rxCsXYEVWxDZaMHjihWNU9
U19Jk/hfKHotPru0gMbnyPazQOVpWw+2XkEoxJqvFPXIHikNhWjliefjyZ6v
DoXC2WvtvY1I/w9FOV+uJJfH9tcWCscbbUtT/5D+G4Zig9OKeafp/odhmmVK
x9v3ZP+EYZjH+lJtwqduGGqV55boO5B9FoYJxqN2zZ5O+A+DQZP7ksXjSP6H
wcZCLdfzO5PnXmFY1Dz9pqCJ4ZMThnJNa/7qJkaf3DCMMTRP7PGX+H8YDn57
UDkugeg/DMkNNu+9A0j+hUHtcIPyE+IX1WE4s/Jkg/c4kn9huBmQ7jpkLttv
WxgOrD9ffXQLwR+Opb522RPrCP/haGnx3uXvSPI/HPLqk/oOXsPoSzccZSUp
EfMonoVwvGyxc8n+SfCHY7Lhcd1+8sT/w8FbWt3n7R3Cfzieefa+sjiW4A/H
Vs7V5WO7Cf/hSIs+0vvAVsJ/OJ4eiYqUXmPnVxAOv7m7/gWT/VkaDs7SBbU/
vzD/R3U4NNNXfc71JvyH49DcFV+OFJL+Gw7Hh5XnGv6Ln0VAahVp+H0q0X8E
DruiNPoY+SMi0PvSvjP9nhP/j0CM2lP7wolE/xHYHBFWZ0PxTtMI9ImfErQ9
lPAfAee4XsFjcwj+CAR3uYyadojiO7Lvcy8O7F1K8i8CepM/W7XMIv4fAX0f
+4KjBG9BBF6bFfl+iCb6j4DJuXnHlhawdnUEgpLTdE5SPL4xAoe6V09qfUX4
j4DiGe+/xsMIfg5eKrmJ5j9h88tzsFd/fGi0JdEDB3N2rnTdm8L2p8bB1G8p
zsaqRB8c8Fb8W11zha2vzcGsC8XJF1yJX3CwdZb00neK9xhwcGX4X50ZSxn9
gwP33It1fV4z/BpzEKw3csKQr6RPcDCQI3fuuBZb35KDSdzzeasCib/I5tP/
1zSO7CUXDuSq+/RfSvEDLw7M/b7fuVbG7lsgB+u/YcbaArI/ONiSOyIuj+g5
gYNellZ1JhSf5sr271rsa7WbwSvh4PC/vg315wk/HDj4mCVVnmf3I1+2H8fC
Av4Zslc5uGhQ2JVI9FjMQc2JYdWTNhH/4sBrUbnXjx2sXcHBkEY36Q3iz9Wy
9aODfpweztp1HFTEn7WeepTsOw6mDbOqOT+PjW/m4OesnuJSN+J3HIinuLuf
K2Trd3HQtnaJ87y5JP8j8dX80IKgAWy8fCRsLvoOTfrPHozERY0cv+gbbH21
SNjOVVIakkTyIRKz7tYFndFl47UjwZ/t8DTlMOE/EoMfGxV9qCT8R8Lpz5kz
tURfiETHsoxfe0aw+Y0jsanplFFdCMmTSPzgKcttpHi6ZSR2x/zKc9xO/uBI
OCy023KH9GeXSGiesA683YvoLRLBFnWOd4g+AiOxfeDQ5fO2kP8+Eu/W1G9q
If9yQiSka702DdVj94EbicPoFJWXsfklkShG0+Z3dD9yIqGgUrR+xHI2Pj8S
L/aMUXn0H7+WnUfpv+uRgWz94kgsfmZod/MV4V/WPltxst2DzVcRiZqLpxr0
Kd+mWrbfjOchIaPYfHWRSGgdNTariPTbSIyc5TxnKPl7myPxLeytwoPFJO8j
YZZdWf98IOE/Em/HqAQqTCb5H4UOo+Wlxl9Zv3wUHpU6hVe0kz8oCk+HKZ9X
I/+GWhRGr1ZxbeEweaARJbNv1XWFigw/2lFw3rHIbhDxc90oTJQququdYP0G
UTB6Y+7t3o/821Ewzz46UzKKtY2jMD7lnpLNWfInROGhmU5kmDLbr6WsbaC0
d4MK+aOjMCHQ2dzwIWu7ROEcd8y0eULCfxRCdQ5WVDix/QRGoYAfU/dhCtF/
FKIL/1qMJv9lQhTsk8bPuX6X5FEUtGCRptXO+IckCnPba6YlfyT/RBSae4bP
2/CO8B+FEfXJq3uTfloQBZco59TxvVh/cRR+GWRmDKxi/K80CnUeWnaLKb5U
EQXbgc92H6b7UB2FN4NXLN+3ha1fF4VR4+uNVH3JnxyFvVrNWqZhDH/NUfhT
rLCpahjhPwq5cvJ3DT6ydpdsP6v0Py1XIf9HNPp/lT+uS/kS8tGQy124OI3s
H6VozDFv3fIqnPh/NK7croj3rqZ4UTQ2RTsLRJRPpB2NCXNrpzz3ZfdFNxrj
pi6sNLzL+g2i0XeJ3akhp0h/ikZn6QfdOVPZfoyjoT791CKzauL/0egZsEmh
4DXx/2hURo7ZeymD5Gs0BrzQPdn5hOg/Gh+yAzrXBbLz9pLB13XDMewnGx8Y
jX3tlnrG60n/jMb66vyRn6cT/qNxqY4bEaFO/D8aNSP9dj4jf6xEBl9RnL5c
MtF/NJ6tmJCTQ/6f/GisDdw7eNtKwn80rG0jH3zSJP4fjcGbqs/6DyX/fDT0
dxx43WnC+iuikTjwGl/enfAfjb2i3fYTtrH+umhs3vDNfspq4v8yeHvppx7V
YvM1R2ONjr7cXQPSd6KR3WBve6OAfd8VjZdTTtd/+c/+j4Gb1Wr9Z3tZv3wM
1vaXV7lnRPiPwd7JGW1+ZqytFgPv9puTcjaSfywGmSaXH3O5rF87Bq2jZh5L
J/+rbgz+jOo7vDWS+H8MAtZN9BirRfkWMZg6a85Pu4Hse+MYOP7g+daTfWYa
A7kJzm2dh9j5WsbAyGJx/7WUn2IbA3srbkr3eLZ/lxj09nn99PB7wn8MNt5w
ffed+F1gDPoLFC85mJD9LdtPYts4EcUbEmKwcOuW8dJYwn8MZoUFflm+k+R/
DPy3egn8wyjeEgOvQy8KZ7Sx+fNjYHDjmfZY2l+B7LyW3rI+2Z/4fwyiP1b1
sKB4TGkMTvLGXfsoT/QvO693X3sc2EL+3Bhc6VTs85vinXUxGBQ2ZnOOEuE/
BoXdYzzLjjF4mmOQYV9v8Y3yR9piINUZVDOY9OGuGFjrblwSsY/wH4tHg+cU
WHMYPPKxmGwzMs11N1tfKRZ//EI+h7exfrVYzIzXcZh4j+yDWJyOLTk/kvQv
7VhMsZJ7+5Lyy3Rjkbw0eLcv+YsMYtFYKHERKTL5gVismdbUdy35o41jkbNU
odw7iPxpsQjqSHok1if8x8L8/vvhZQFkX8fCd1qFDseCze8SC6eHairDJhH/
l+3346frHuR/CIzFqtWR15wNKJ8vFhdC2737pRP+Y3F95b4lugcJ/7Go4HQN
Uypj30tiMeqbZoD3N8q3iEWe5ocBJYsJ/7GYcf/51xvDGHwFsZj76FPJ9G+M
3xTHIvBlTd2YuaS/x0K8ZebBSeasXRELoxX30tyj2XlXx6KyqNf0thji/7H4
bPl0O5fs1cZYJMUYJPBz2PhmGXyOZ6Jmy5G/MxYu0UuV1KMI/7FYMaj58beN
lP8YB/Undhr3erP9ysdh1amFWhqLiP7jYPl6x5LHlL+lFiez14w6XX+QfywO
Ex4o7vj5keg/DvtrN4Vdp3iXbhzGzNVwqSB72iAOKjZJNtMOkP4Xh74r1xbu
onxC4zhs29/ouy2e7Kk47Nrvfa08g91vyzhIy4ecLBpN9B+HyrNyUSNPEv+P
w6CqvZV/5xP+4/B1kfRDoZi1A+NQn1qj06BD8RcZvP6rzJqCif/HIWvxkJDz
FF/jxmE5Lqpm7WdtSRysVKd3rSui+GQcinOUlfWWsPH5cbjRt8egZ0PIXxmH
7Tsa3c2uEf3HYejvkoATLZSPFwfhDxX1z5rsfCriwLNyzWlqI3tetr7X/FE7
9xD9x8FjRWvimDjy78fh25q7o6ooft4cB53QyvoljWTvyc7He+vrYPJfdcn2
98NimQ7lS8nF44O1TeFykrfy8SguFOifA9F/vMweOHrjIcUv1OKxbbThN8W5
ZB/HI+V+z39t5A/UjseGqup/1YmE/3jclBuz6fd+9r1BPGbMOHh2LenDiEff
3ebzFlC8zDgeu3y9Ihs2UTw5HqU9vxsqk/1sGY/8fTccLfNI/4vHkDg9P79R
RP/x+HnWvX8E+cO94qGV8lxp50jCfzzafSsSb9P94cTjkFnIsbPZRP/xeL76
9NIvheSPi8exO0G7TShfSxKPzpt7t+QYkn8yHunJGxz1Kf83Px7P6vRPhn4m
+R+Pea8vpug9ZOOL41HOMTqh00T0L5vfVrjJcjDZf7LzmCy6eWYi4T8e76VX
kuzGMXjr4pHQK/ZlryPE/+PROv6b3JNohq/meISl+NodJX26LR5Bhjq3a7tI
/4/H5Tc69smUvyGXgOWDB/Y5R/qZfAK473/sWdNK9J+A7qkxBwxcWL9aAt6N
M9+7dSPhPwG/D68a2teeza+dgAtuD0bE5TL4dBNgfHDx+D1JxP8T8MV86/s7
q8h/ngCJjaZHwkqy/xLwUXX6j/YlxP8TkOSWkWXjwNa3TICX2fU3n0he2Sbg
/tr0f54v2fcuCVCesSiaW0H+5gQ87jta5QzF8wIT8G2dxvFhZH9xEtC1rfzb
HcqvSZDtR/Hc48rdRP8J+Prpj20n5Z9IEtA5s/9wE/Jv5yTAIKRYOcSJ+H8C
er5UT7pG/v+CBEwZKjza+J30/wSc2xvnkkf8pDQBI+ZfOzqf4jsVCajZ5m2d
rkD8PwFOaN3ZTfHnugRcPGsz2on8aY0JEEV8e2xL+d7NCQiY99Fei/ypbQlo
X8PNTP1O+E+Am+66Ex/eUP5bImY2lj30e8/2I5+ImH4Jmtwr7P4rJeJpvHaU
/ROy/xPhIdk5/ng78f9E7Hu4z8Gd7qN2IkZZvJsruU/4T4TCyQ3zEym+aZAI
ly/6D930yX+WCLXAEqdRFF82ToR4fx/bcW9J/09EyPRJD90pn8YyEc5OW/uc
/EHyPxEpo3sqqCmT/pcIs/oqlWmWFG9KRHiv5ZHZHNYfmIi0VINjNu/J/k/E
tWxzW0Nnsv8TsWFA4qRsyp/jJuLBmO+fWql+QJIIi/d3r68l/3tOIuzvys00
I3mSn4hXy7UdSvlk/ydi4K+P8fP8if4TMd3FwlVygvCfiAujBH4DKR+yIhGv
1+Q5PPovn0HWn53XewnpW3WJUJWqeC67w+R1YyIsJ5+1btFi/c2J+Jo+/PPq
d4T/RDQd59YcW07yPxGmxt9nGFD+nlwSos5vK70VQfZfEka0PKmvWkH5QEn4
1fx0aMolNl4tCXkfpr79TvqSRhLelWumnO9g/lftJOgYegjtKZ9aNwntEsc9
+8n/YpCEz29ajZ/UUb52EmKfmGYN1CD9Pwkl5662Lyd6Mk1C+W7dsIKFRP9J
CJiuHWrlSfI/CXp9s1qcKd7lkgR1idr6OsrP8UqCnKXiQEvCV2AS6tNXqNgN
Jf6fBJPDu7ryKN8vIQm1fiMsM7OI/pMQt+HOd9/fhP8kOClVOgyl+oWcJIxx
3zjqzRYGT34S+LeeG9w+QvGKJGyJcQ1W5bDzK05C4I69Xf/IH12ahOkTtwrn
1DB6rEhC90aXoQcWMvlcnYT4ijM/vpA+WpeEl3WRdYVxrL8xCa2HrtzvfkT6
fxJOvE5YLU/+hzbZef8Y7la7ho3vSsL2EY+mjCP5KpcMo2lfdVRXkvxPxtIn
2XK+5P9XSoan6ZOnwym+o5aMOyFuE4aqkP2XjCXPbl35+J/+l4y+klvGnvZk
/yXj6YDltZmUD2uQjKEdxQvEwYT/ZMRt+1R6mfLrjZPxwuzx5tfkvzFNRqn3
Cqv95H+0TIbZpjXLBlK+nG0ypOmqa0K/Ef6TcXxwc8+pKeT/TcbcVS/HBZH+
GCibz0A2aSbx/2Q0edke76Z4XkIyxCcjc5TJf8JNxrWqj97bBzJ6kyTj3O1V
E9zIP5CTDHvFECsXNTY+PxlC12nLVHcQ/Scjb4Y/VmkT/pPxevmUrIYCwn8y
xvMEClrETyuSkdM2T2z9huR/MvbcPsL98IToX7b19sT8+nTi/8nQKFmV0DGS
6D8ZAi3/ZbvWUL5HMsaqP3iT8YXdr65kzMv9vXYC5QPJpeB4RUvY5qEk/1Ng
njNvawnFs5RSUKly+LO3AtF/CvZO8Vo6hvRXjRS47M8Zf1Kb5H8KBCOVuhfc
YPJDNwU1y//cN/Uh/Kfg9odZ22dQPQtS4N65yVrhK5vPOAXa3cK4IVRfZZqC
wuK7ffpUEP5T8PK9Xu5eyg+xTcH4sIbf2+0I/yno/vLkiEMTyf8UBJ6uKYvy
Z/gLTIHCVI85S2OI/6dgRWfJz1Gr2fcJKbgcZZUQ7Ef+X1m/MHtXN/kfJSm4
0qy/UDma5H8K2lSaOzeRvZ2fgvLV8+2biT8VpEC9v/Po7M1sveIUnN+gOnMz
5euXys4zNu6eCfGDihSc+HbL6uh48v+kwL8DonoJg7cuBRlad/y2HyD8p6Dj
bWfzlW1k/6Xg7YK//fpmU7w7BU1n5xplc4n/p0B+YPerYV6E/1RY7NHqOfU1
4T8VvgOMizXI3lNKxbPMcYEOJYT/VASUzh97z5T8/6moMs9+bW5O9n8q3Gu6
N54WE/2nIlp/5cLXlB9vkIoPY0YEN3wm+y8VnJySwVovKP6TihUrK/eqlDJ5
YpoK/V1as7kmZP+nYk7DhVHDFpD+l4p/7gLLbIqHuaSie+yMohuU3++VivMX
lF60Er8LlK1vldF/FdXfcVIRbnixzdmO6F/2/bGxwakXKR6bitkKAyfOVyT/
fyoa3ysEraL4Z04q1E3vdzpz2Hr5qZharnuwN+XXFqSiSc0pcdEPwn8qUtf2
ih4uofyFVAxaV9Rv3BCy/1ORY1pfcm08+X9SsTh7vuWVEeT/SwUWnpNb9B/9
p+KJaEPUh+Ok/6VCmF/c+qMv+74tFbmN93opU7yxKxXjHeaMW0T2tVwaCpwM
vTZRfoF8Gn6enjfiwQTCfxoWRZx48+U56X9pMD/xwmsij/S/NEz7PNzEfSn5
/9Nw2N346vaZZP/J+vdtjJ2lSPpfGsoSfHzkLMj+k7WHVPZ7RPq4cRrmnIlc
cYD8A6ZpCHm4dGCVgO3PMg0vp26MmE3xUNs0nON/Sxxzl+HLJQ2aX45E7X3N
5vdKw7csu2jrINL/0jDdd/+JmgLy/6Wh41bZiun2ZP+nYaSNqWTqf/H4NEzJ
7Tz23pf8v2nI25adciif/H9pKCyMPFdG8f78NHxH7VQj8ucWpGH0nL/e94+x
74vTYFikf37ydeL/aVC0P9ChTfHZijTsW/N07PkdRP9pqOntl7ImjOI/aThZ
4PJW+p3iP2ng2YS/n7GW8bfmNGSvnzRbRPG2tjQMt3tXPqiO0VdXGiQbtArS
FCj+l47fu3ZZNFN+pnw6fm1epDKN8gOV0nGt68VbD/KvqKXDWHmhuIH4rUY6
Hrz6enk95etrpyN761HDgP/yxdJhVzRiyCaKlxmko0MaJ1al+jukw7Rzzqhh
U0j+p4Pzdv3wEeQvNE3HmOEm6959I/6fjqjgkUWO74j+05E0f3vVTKI/l3QU
JDywqaV8BK90lM4Ks3K7xfoD0xFZum6xHeVXctLx5m3D7kOUP5mQDqVx+yI/
NZP+n46RN7buNSZ8SdJRsrIt9akV8f90rLrfX9/9L8V/03Holna/5p7k/0lH
5/zcU5GuhP90fHoam/2S5EVpOo6rv8t0ekz+n3SohE5avJryNarT0ay89twa
su/qZOPbZle23SP6T4fHvEt9qu2J/6cjzoPjwJ1P9J8O2wED/W9Q/VFXOnrc
1XqZJKT4HxeF0bGxnm6s3ZsLieuHp6kDyR7g4lGg2GEe4VORi20vPd98HUv6
ARdhRxa92uLE9q/KxWbHBqXKO4xe1bgYNCIhNo7gVefC8N31mX6Uz6fBRfOe
STGK5L/Q5KL7WGyRNvn/tbnINNyX7jOZ3W8dLh7s7ZMYf5vBp8vFD4HhXzWK
l+hxwd13TLVnGes34ELpkmXES32GH0MuohtrFm4OJPnDxbyjC/RB/rZlXMy1
9FxT1UX2KBfuziEPmxYxeEy40C//PS6T+L8pFzb2gp4DXNl65lw0wMQrmfJZ
Lbm492DUmQyyd6y54HzSOBR9kd0/Wy7OOXfuzCd+5MDFtafHur6S/9yFC7db
B8f3pPxKdy7MZx8QJdH7A15c3AiOX2JH+Yl+XPSA/hjBJeZvDuTi3wn7xjY5
hp9QLiJvFSZcuEf5Z1wczlVf5r2CzRfDBf9ky+v/3mdI4CLOaPLSf+TvTeHi
eK7SqFP7yD/GxbDEwlIPHzafkIsN1QnzVnxh+5HI8DdYoHOW/KHZsvOIVdnA
GUj+Uy7ix5T09ldi/XlcxP5y9Qt1IX2KC7U1aWrNFF8/Lrt/aa6HD3WSfOXi
q9pllZcULy3k4oX80LFbpSRvubA96nyyVp3BX8LFzeE7F2uRPlXKxfdzDy+e
J39WGRclzga5WqR/VXBRI//U6CKXzVfFRfnikovjG4g+uVgwM0yx+T07j0dc
zDwZM/qChJ1/new8/v1599mfzf+ci4peXO/okRS/ld2/Fd2S1ZtZfxMXOvOu
H2klf3gzFyZXFEp2kL7cysWEm3fa7Mmf0saFY0SlbyvVj3RwcT7XtgcoPtnF
xXzfm2r6Hey+/eGifhRv0Hnyx8nxcK4wwW/2C3a+vXkY+7D88jqqv5DnwXO0
j1U+3RdFHhqa8n8EP6Z8KR4sW8wGziD/rSoPZddce/gZkr3IQ1bW7m0rKV9d
nQd5Qdl0Q4pvaPCQ9Pdh+S3Kv9HkgefRkFEVSfTPg12w0RWLetbW4eF6zHCv
lyqUj8WT8bvnC1yvEf3zEJQeW/eS6hENeChxKh8w7wnbryEPOuNag25TfQ54
SJkc5i7nxPqX8bBgUv9H1pSvbsxD8uPVjUsoP8uEhyGffVtSrlN+Ag9rP8ww
O03vUZjzIPj9d8auOSSvZOcbZq95n8PO35qHWpV511O8KD+Oh+ox0y+rKrK2
Aw8DJt+Vvtck+udhv9/IWNu+bD13Hr5cMcnPNKf4puz8e07VTKX8Jj8ezP+5
PFxyh+Jdsv26GgSfJ/0/lIdewf23ttN7BRweDHTMVj/OY+vF8HDMY8PPsllk
D/HQ5rLaHTRfCg/vO4/nhBxm++XycKkxhaNjwsYLeTipEFilQ/VCEh78LVM/
qDWw77N5OPwv4ezaqWQ/83CgJi9i/kPWn8fDDa0iOxXKN83nwauuQH1/A1v/
OA8Oy+6Ud04j/YoHo/da/WafYudRyMOS8RFpf8lfWMyDveaLN3V3GLwlPHz/
3KYymt5nKOVBwW76xHR6P6NMhm+LIecSo8kfx4PfQZdNnz6x/VTx4Go1gmND
789U89Cqdm3ZiEq2/iMeTDMjD40aQvY6DwHuK6cvI3p+zsPRRVsTP5D+3MiD
hrLn18GBbD9NsvuxSeHvClvK5+BBZMWd8JXw1crDUJeQq694JN95qFBNeryQ
4scdMnpblPfBh/K1u3h4FKKFzj1E/zJ64JaGlC2h+B8fjz948KWuJP/58LWV
S3z/jvzBfCTmH9hWsJrkPx/xp+MV1bYT/fMxo9+h3z8JHlU+Nvzxi1Ijf5wa
H8csBIdWPGTrqfPRo5OrlapF8p8PsxPjgpW4bD5NPjyd7NfPbiH65yN5sHHo
XZInOnzE+E+f7E72qy4f5vMSExtofj0+5HVmL7AkfmTAx+5J8iIL8j8Z8oFv
yb0mkX0PPmoGRzwInsfGL+Pj+8oY5SuUn27Mh1rfbSXlVA9vwkdneWf0GS7l
+/MxZk1ZghP5v835mP9z0A01qtey5ON+YMj0hsUk/2X7iXSf85vy32z5KGrd
dWouvffhwEefzbtDpspRPJOPjftVBksUif75WPi6cHAB1bd48VGwViXqzzIm
T/z4OF2x1OKrI+U78TFP/dCOk9fZ96F8iJqmTGmXkP+Tj/x/T6cGkH8nho/h
PmbtLV7kD+dD6N5Zq2PN4EuRtf2iq67UkPznY82F5U2PbNj3Qj4aeE0TDq4g
+ufD8o5F5zOqR8vmo1SfFz7JlfKb+Rixb/u5AR9YO4+PNlVVlaJtpE/L1ttq
MWnRIIav43y48bdedHej/Eo+xl6pFnpS/m4hH/qBCQ5FGuRv46N95mLFWfvZ
/S+RrfdxWOK9iyT/+RjWdNdiANWDlcnuxx/rgkp6z6FChi+bB1PU6P2XKj44
s36IemdTfIaPNLd3yrkL2fhHfHxdPsakPovtt46PPZEvrtZS/fFzPspqJmY5
jKb6RD7mdP0M+mvN5m/io9u0wjJoM8l/PnL/bt4x6wODr5WPs0kRIz5TfnAb
H6Ecr2/jKL7Uwcd20y0TXlA+Wxcf7rXPKpYsZuv94WPuoMKhN2Ip/0uAxGvq
M7+Qf7G3ADsfzJq0nfL55AUIeh/+etZzpn8rClBssHnpV6rvURLA8pvRlDdU
z60qgGFTYGVqDdG/AA+HXFazoHoTdQEUtk+atO0nxQ8EaHGMyar6zr7XFABL
bh0LpXxkbQFed+QcdXvN9qMjwKRh7wYcJv+GrgCaC7d4eSxn/XoC/DId+DAs
gvINBChLjB3Ur5TNZyjAxK6Hr4oekf0pwLvUxv4LF7Lvl8ngO61hX32NzW8s
wMioyn+nqR7MRIBVLdNM/ntvyVS2/qRL/UYXMXybCzBkzugLF+JI/gtQ/5vr
YUH1B9YCHMuufZjpQvXsAoTNXrejnuoLHARY7uEwfA7lN7oIkKI3t7FuONG/
ADcGrA1pJ/+0lwBWvcbNG/6YrecnQPIs3rABC4j+BZhx3ibwHflLQgU4lOBa
Fk/xCI4Aqt84aU/q2PgYAeb0+dm78hLFQwQ4ar3Ff2Ed20+KAF+9XKecv0T2
sQANJQfddlD+jVCAKqSmdpN/XSKASHBua0sz0b8AfypU3k/spvcKBHhbUDtZ
nepB8wTYNtZ/70U7iqcL8NLoJz+J+N1xAVaq5KmvJH9pgex+GnvsrV5A+r8A
S0M3rZlI8c9iAaKjVtprU71eiQDy+R/uvqT9lwog0Lta+ZH8Z2UCtP6cf8Jg
AfnjBLBtGsMPOkT6vwDiF5N+KVC8sVp2/6XTKlI3sPYjGb4Wcbz+HSV/nQDC
QRMcnDJI/guwfvHtsSup/r1RALmQmSN3UH5mkwAWIkf9m2T/NAtwssYm6ag6
m79Vdn+Ghi31yCX5L0D777t9Qig/r0OAz0NeBP0if2eXAPuyEk54/mXtPwKk
H57Oe078UU4IOfHtb1Lix72FGCCv1OhG/nt5If7MWfuwjfQ7RSHqJz1uNvAn
+1+IYt9nAw6T/aEqhEKXz4yrq8lfKITZ0sC9JXuI/oXQ+7Gk9xG67xpCvJqU
dyyb7E1NIQ5eGOZygOLf2kKoPn/ESaf4jo4Q27ctHSG/nuLLQuSp8RKhwPiT
nhBXnEv6rSF/sIEQCUtU40bVs/kMhVjsdyV3N71/ASHuaG7h2dP7VsuEUEav
PcuJXo2FmLBo1bO400T/QvycqBtQTfFUUyHGO+1NaSP+YS7Eqr42doaUP2gp
xJmj/fI3erJ+axm8one2N8xJ/xdifZH0WgWP7ddBiK5ql52dVN/kIsSprVWz
Cikfy10I+T/dh27Qe2JeQhzr9EtdsInxEz9ZG2tG9aPzC5Sdl94S3oBa9n2o
bH7u5MAAyvfgCPH3+Tz3mRS/ixGiud/HSl/yjyQIsaKjaez2aUT/QmwSP3Zy
oPoRrhCTLoSZXp3JvhcKcT5yw8kWyseXCDFya8UxD2ey/4UIPcJtFvLJ/hfi
0GG9rHWL2fp5QryvXfzLmfT3fCG+aJ4epUb2wXEhMt58SR5N+mWBECWnLuxP
Jf5bKIRSSufgr2RfFsvgWfFveJ42G18ixMJwd/NJulQ/JUTr8Gd3bapYf5ns
vANH3t7xkfxxQrxZ4lJ1PI3NXyXEmq1x3jfnkf4vROk01YZXc5l+8UiIbauL
QrwaKF4ju/8LJlZXUj38c9l93Gpzo96D/LdCfJ/m62ZK+neTEO2NUX/nP6Z8
LiEa0+Rrr4pJ/gtxffB4ucPfKb9LCJubc+44KbP9dgjxtnVR2AKi7y4heru8
33+Q9Os/QrwrtzEbT+8xyImQsKxF0E36YG8Rag8s3lE1lfR/EVymjXefSv2K
ImhVvH0zi/irkgjHa96/Gkz1qKoiaLTfKuWQ/1BNhL3Rtjk9yL+qLsIA5ZqF
ztlE/yKsud/rRecBtp6mCLtW1l4YTu+9aYvQXNAZ+MSB8ScdWRsxy60mUXxJ
BJukqdNXkD2mJ4KwO+8wl97XMBCh2mz9qoF9yP4X4RiXkxcXTPUHIkwT2EVP
Inm+TISzs/HShOpPjUU4//n29LPkDzQR4eSQreNfrqP8BBH8PecW1ZF/3VyE
bq6H4Taqx7AUodWi5q+XLsl/Efq+NPzT3ULxCxHmnuBUPaR6SgcR7jq/VYih
9w9cRFjm229VjxI23l0EjOKlT3An/V+EXs5BYwb4svn8RIhyqo0YTPXUgSJk
3FoaEqnA3l8LFaHxsbj93zvS/0W4U20wzYziwTEiCEyn9cum+uoEEVKzrphn
GrPzTxGhuOJda2cY2f8iaPfp9fI86e9CEeSwJ91pPdG/CJvXWXR/eMHmzxZB
nOSYcbSG9H8Rjkb0WTgnnOS/CLdSFSY5Uv1mvgie55/HHCpi44+LMH35j12F
lP9YIMKfI2l9l/dl+ykUwb3ulYIe1a8Xi/D0odea9ZTvViLCwdcztPWoXqlU
hD1Tolf33kr0L1v/fkaWMsnbChG8vhb/Wn2ffV8lgvFC6YjQ/VRvLttf4MP0
THrv6pEIb2KK32aS/lcnggX3lHEtvZfyXLa/v9KaFbspf08EP7uzX+LpfcAm
2fi1IQv+6RH9i3Buqp+JG9XztMrwqxuubkP5LG0idPJ/dCxPYPN1iJCtFe7n
Re8hdokwZW2ez+eB7Ps/Itz+Uf+5XxbV/2XgvFZ708ed7PveGbi9aH9y2EHS
/zOwr+/Ms3dXsbZiBjrGlRvPW0jyPwO2qw3un6f3rFQz8GDDkEVJFJ9Qy8CF
ukX53ZQ/r54B7ZvRcj1uUvw4A5MOz7tqRf4lzQxEjjlwbzTVK2tn4Nm6RV2t
VP+rk4HfFr5Vqhbk/8vAd0PvZUUkD/Uy8GFn/2ljKH/SIAOKhuq8K69I/8/A
SK1Vs31Xkf8vA2qvet5bqUD+vwzUlT4q7aL6QuMMRLWsKcwlf4BJBnyeiSp1
35D/LwP1C6JvHTRj/eYZuOQ5K/8Q5U9ZZuCNpbrxPTW2nnUGZgrDH0tJf7fN
gPyp9v4/Kd/FIQMBXyrNXq6lfMYM9G23DNyyjPz/GWjM3ZZZR/qXVwZGbVYv
+xbN9uOXgbEfpkyqJ/9ZYAZW1zmdbI0l+z8DN5+scAwxIvmfAdPrGzdlvmf9
MTJ8yp/8my8k+Z8B4WMHN+5t8v9nYPxH49eKhE9uBtx/vDty/jqTR8IMPLpb
OdOZ8jMkGdCtdbmh8oD0/wxMLqj7G7qX6D8DvEsqhzKGk/8vA7cs7JdmkPzK
l82n+bvpIL13eDwD0V9TFzzbSfE1GXzaKhoD/zH+W5iBxUW5Fi+JnxVnYGr0
hcsxJM9KMnDl35myEeRvLs3AhLGNAQ8msP6yDKyba9DzhBvV48ju493AQ8/L
Sf/PQIO9cmZ8Cdt/tey8z5lU53mS/Z8B7l+zfty/pP9noJ/htAfr/Yj+M5Dx
6rzRCnrvr1H2/R5x9Q2yT5sycH3TPLODLQye5gwYDOp/K8KW7bc1A87VvbOH
U/y2LQO/6nb2L6R6tg7Z+cys/JRH7+12ZUCuRu99gAkb/ycD1Vd9XYNofTkx
XhnbFSRQvL23GKsmjzRpJftPXoy0yGEzIqi+SlGMF+H9J8TaU36oGDaOF0dK
qF5bVQzlspEaTvfJ/y/GJM8od9sTTD9XF8PUa6/yHHofTkOMLRe+98qh+JSm
GArv/rbmE//WFsPBzKr69wKK/8n6X9jMzaf4q64Y3DdH9mlRfYOeGCNnNVzr
c5n0fzGsK5/p2Fxh+DIU40+h0+g99P4lxPBZEZ+t84y1l4kRd1x/SSW9H2Qs
xgz1k9ukAvL/i9HsY/Q4/g3JfzFqeIoT86ieylwM49pvVc7bSf6Lse3i9lhP
yne2FmP6Zo3iI6Tf2ooxKj/3qjH59xzEsDje82jbAbL/xXiScm3TfHpvyF12
vuXmPnspf9xLdr5FPv0fU36ZnxgDDN16tNJ7HoFiBFn0uxpG+UihYqy7fbgq
h/gPRwzhsasbrW3Y/YgR4+e9/ff3U75KghjPPloE8an+KkWM9HVFPUYsI/+f
GFmGx/vEUL6CUIyUWfPrdUZQvrQYSy687+58zODLFuODgm+/Oa2k/4uh+PlQ
z40kT/LE6G7c3v+SlPkz88V41/Px4UINon/ZetM0JauoXSCG/JY+Ij69j1Qo
w8+M5huphI9iMayuO1+ZT/XoJWJc/ir++DaL9H8xqqZsvNuL4l1lsvOdPbu/
dhSbr0KMnaUK31aRvV4lhuPsQRlBSlSfLUbqoEGXio+S/BfDzTiQH0/yqU4M
pU32kf+9b/9cDNHON5tOk7+sUYwHthxPOXo/uEmM56POLD6WTPF8MeQ2he0d
WU7xPzGeTu9/YXA8xf/E+KV+/K1fPcNHhxhzLg/WU9Rj++8SI+J91LKJRYx+
/oihyj9tEknxcjkJNgXMSXMge7q3BEufa2ttpff05SXwCzE6U071oIoS+L7z
bXpI8QYlCS73VBUsuUXyX4LozzN0dq8g+S+B29T1c9Ld2H7UJajd+Ky9neIJ
GhIIe38QeVN+haYE22x+/9H4QfmEEgRlDevhtpL0fwmGLhlavofkma4EFQY3
U69VsraeBHtOC8p+0voGEjyyNL5xupjtz1CCtTrzm+47kP0vQe/Kwj4PrMj/
L8H2ga8fFjmQ/Jd9X/c0q7Av6f8S7FRXN9D+Lz9FgsDmSPv2XeT/l+DAH+mj
1bQ/Swk6buVmmBB9WkvwZ+J696n76X0sCWJrj37omMbw4yCBzdj0qG81RP8S
pPEb+5RQfp67BOkDP1vtf0H0L0Fl+brR0/VI/5fgYr4gscCH8l1k8PtYv5q+
g7VDJehc1a7Cs6b4vwSFq9vnDiF+HCNB8/PT73/ReyIJMnzcPt3+lPJPUmTn
1X8GN+q/+kgJHtz/UuGrT/F/Caojt+tq0u8/SGTnEWK0LpvqpbMlKPAMve9G
7ynmSKCkrJNTSvpdngQiBSFUqR4jX4IbKxvDPcjfd1yC8Xv6nfxA6xVI4Ply
YtIkF6J/CcZe4WxpcCH6l8D7pN3WveQfK5Htr39tnsJL8v9JcMVi2ttl70j/
lyBMW3r30Fay/yXQkNy/oz+L5L8E3z94ve8g+6datn/uwzM/+5H9L0EfZW7n
Anp/qk6C/H+nG+7PYft5LkGkNONZ2RXy/0uwwvdw7d1Ukv8SyA/a1qPlMNXz
SrBKbGWyjOqtWiUwDOvvHigl/V+C+53PxNsontohwXPzqSeUqR6nS0bfwZ+G
1NP7Vn8k6Bo6MlxC9ddyUigPWuA97DRr95Zi1dqkmzFUPyEvxaSZ1gduUj69
ohSrLScHBcwk/78Uw0dW3p5E9X6qUgxSn1ejJqX8HymmaOyMcttO/j8p5s/h
R4dQvaqGFDxtdaPs9+T/k6LscHtdxx22H20p5PZ3/cu7y/avI4XkyQuT7TlU
XyDFs4M2S2JXkf4vxewBrse7LSj/RzZffsiDfKoHNJSin39D86c7ZP9Lscsw
o8DVlbWXSXFsmkLw2cGUjyqFvbrzPhOqZzGRwmuosWYO1QuYStH77AedrRQ/
MZci8ee0hDLyd1hKof7E91wb+ZuspXg0P/HZkNvk/5PCN/3oqy3eFP+TwmTT
45O96P0WFymuPrMQ3N5J/j8p9hStdloxnupbpJhTk3TzsDvJfymC6oMzbjym
fEcpnKQnj5aksnaoFFuvRux7SfUCHCk8cqfMfEj5yTFS1Je+fLaL4lMJUkzv
wx391YrxpxQpLsY2uCfIEf1LMd66orQkgvx/UvyblW3UkMHgkUiR8dh+1ZSD
7D5ky/Bv7/7i/E6S/1IsO5C6s4rqefOk8OyVskziQfQvxQWfS47fZ5D/TwrH
Nw22f4j/FEjh7jdwbfl5hp9C2fm3/OivRu8pFEtl8u3rhTCSVyVSVJ1qunac
7LNSKc6Z7sKDt+w8yqT4/TdFRTyH6F+KXwneAznWrL9KivzdczYVkb+wWoqF
1vmB91ay7x/J6Mdq6pUnNUT/Umz03/Qj9j7F/6S4OVxFedJb8v9JcfZC6rin
Gux8mmTn397Z/Y/eI2iW4k3L5eE/95P8l+Kk6NijZWlMP2qTouV+7rCPVO/W
IcWOonefoueQ/0+KQ2/PX90qIvtfRj8+/nWppM/LZWKYd0zBXPLf9c5E0PG1
Af0pX1M+E73q1ictp/xOxUzsHV6lOpPqwZQysXv9EtfWBJL/mTgpr2X3rpud
l1omXsuPUvtE8TP1TDh2167tSfFBjUx8N7J7kkH2p2Ymjnyfqd1Kv3eiLZuv
zH/QW4pn6GTi25Lx2t/p/RbdTHRLQ99NmczW08uEaejQ3tJnJP8zMe3n7VF3
XjN+YpiJ2H0m3JlLqP48ExOvPuRNqGDnuSwT63SyL0z2JP9fJjjVJQ+FVK9v
kon+L77UqlK+uGkmTlyqbVh3leg/E/vlvAbG0e/VWGbCx7zlfi/Kz7fOxM2w
nELVCWT/Z6J86JOuCHofwSETVx+sVvxkQfnMmTCf//hq/Xmi/0y8Wml5fgPV
O3plgjfk4JxGen/QLxPcNSkvv9XRe0eZUFzsE9tM8ZPQTNz7yOkOI3uLk4nG
5vF/dSk+GJOJ+vvpK65Q/V1CJuzKv2y2JH01JRNt6xvX/x1A9RGZuHFlUEIe
5WsIM3F7ituYlRQPlGRCdGbFnu1UP5edCSu5lMb8ELL/ZfvZkDgvgH6fIS8T
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
73j9H/MC1F0=
         "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0055000000000000005`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
3sT77KP/7/8DT5NYPg==
         "]]}, {}}, {}, {}, {{}, {}}}}, {InsetBox[
      TemplateBox[{StyleBox["\"LinearRegression\"", 16, 
         GrayLevel[0], StripOnInput -> False]},
       "LineLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
              "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.15, 0.28}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      TemplateBox[{StyleBox["\"Data\"", 16, 
         GrayLevel[0], StripOnInput -> False]},
       "PointLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
              "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "False", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.45, 0.85}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{1.495, 0.3501978743336927},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Output\"", 18, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Timestep\"", 18, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameStyle->Directive[
     Thickness[0.004], 
     GrayLevel[0]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->18,
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->800,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox["\"Training set\"", 
      GrayLevel[0], 18, StripOnInput -> False], TraditionalForm],
   PlotRange->{{1, 100}, {0.36350849502978544`, 0.629720908951641}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
o8DVlbWXSXFsmkLw2cGUjyqFvbrzPhOqZzGRwmuosWYO1QuYStH77AedrRQ/
MZci8ee0hDLyd1hKof7E91wb+ZuspXg0P/HZkNvk/5PCN/3oqy3eFP+TwmTT
45O96P0WFymuPrMQ3N5J/j8p9hStdloxnupbpJhTk3TzsDvJfymC6oMzbjym
fEcpnKQnj5aksnaoFFuvRux7SfUCHCk8cqfMfEj5yTFS1Je+fLaL4lMJUkzv
wx391YrxpxQpLsY2uCfIEf1LMd66orQkgvx/UvyblW3UkMHgkUiR8dh+1ZSD
7D5ky/Bv7/7i/E6S/1IsO5C6s4rqefOk8OyVskziQfQvxQWfS47fZ5D/TwrH
Nw22f4j/FEjh7jdwbfl5hp9C2fm3/OivRu8pFEtl8u3rhTCSVyVSVJ1qunac
7LNSKc6Z7sKDt+w8yqT4/TdFRTyH6F+KXwneAznWrL9KivzdczYVkb+wWoqF
1vmB91ay7x/J6Mdq6pUnNUT/Umz03/Qj9j7F/6S4OVxFedJb8v9JcfZC6rin
Gux8mmTn397Z/Y/eI2iW4k3L5eE/95P8l+Kk6NijZWlMP2qTouV+7rCPVO/W
IcWOonefoueQ/0+KQ2/PX90qIvtfRj8+/nWppM/LZWKYd0zBXPLf9c5E0PG1
Af0pX1M+E73q1ictp/xOxUzsHV6lOpPqwZQysXv9EtfWBJL/mTgpr2X3rpud
l1omXsuPUvtE8TP1TDh2167tSfFBjUx8N7J7kkH2p2Ymjnyfqd1Kv3eiLZuv
zH/QW4pn6GTi25Lx2t/p/RbdTHRLQ99NmczW08uEaejQ3tJnJP8zMe3n7VF3
XjN+YpiJ2H0m3JlLqP48ExOvPuRNqGDnuSwT63SyL0z2JP9fJjjVJQ+FVK9v
kon+L77UqlK+uGkmTlyqbVh3leg/E/vlvAbG0e/VWGbCx7zlfi/Kz7fOxM2w
nELVCWT/Z6J86JOuCHofwSETVx+sVvxkQfnMmTCf//hq/Xmi/0y8Wml5fgPV
O3plgjfk4JxGen/QLxPcNSkvv9XRe0eZUFzsE9tM8ZPQTNz7yOkOI3uLk4nG
5vF/dSk+GJOJ+vvpK65Q/V1CJuzKv2y2JH01JRNt6xvX/x1A9RGZuHFlUEIe
5WsIM3F7ituYlRQPlGRCdGbFnu1UP5edCSu5lMb8ELL/ZfvZkDgvgH6fIS8T
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
73j9H/MC1F0=
           "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1: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
3sT77KP/7/8DT5NYPg==
           "]]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, AxesOrigin -> {1.495, 0.3501978743336927}, 
      PlotRange -> {{1, 100}, {0.36350849502978544`, 0.629720908951641}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {1.495, 0.3501978743336927}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Output", 18, 
          GrayLevel[0]], None}, {
         Style["Timestep", 18, 
          GrayLevel[0]], None}}, FrameStyle -> Directive[
        Thickness[0.004], 
        GrayLevel[0]], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> 18, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> Style["Training set", 
        GrayLevel[0], 18], 
      PlotRange -> {{1, 100}, {0.36350849502978544`, 0.629720908951641}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {
         Style["Data", 16, 
          GrayLevel[0]]}, LegendMarkers -> {{False, Automatic}}, 
        Joined -> {False}, LabelStyle -> {}, LegendLayout -> "Column"]]], {
     0.45, 0.85}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.715889485361375*^9, 3.71588956303321*^9}, {
   3.715889649407814*^9, 3.715889652558919*^9}, {3.715890131818481*^9, 
   3.715890163804262*^9}, {3.715890385309514*^9, 3.7158903868794823`*^9}, {
   3.715890420736292*^9, 3.71589043413481*^9}, 3.7158913435554132`*^9, {
   3.7159769589467793`*^9, 3.715976970311379*^9}, 3.715978472809416*^9, 
   3.7159785390986347`*^9, 3.715978654860097*^9, 3.715979231324831*^9, {
   3.715980193849526*^9, 3.715980211267988*^9}, 3.715980642860663*^9, 
   3.715980822217617*^9, 3.715981127560573*^9, {3.715983337493854*^9, 
   3.7159833514320383`*^9}, 3.716236897577804*^9, 3.716284288780978*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.715980837003799*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"netTrainTest", ",", 
      RowBox[{"Evaluate", "@", "plotOpts"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Training set\>\"", ",", "Black", ",", "18"}], "]"}]}]}], 
     "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"actualTrainTest", ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Data\>\"", ",", "16", ",", "Black"}], "]"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0.45", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.715981110792632*^9, 3.7159811145663137`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw8XXlczM//zx0luRJCCH0IIYTwzJkUSYiKbqV0l+77Pne33fYoREkISQgh
SUISklAJRYhCSMJvf4/vvPjHY5qZ98xrXvcxsxOtXY3tesvIyDwYICPz////
71/H8kM3gs8bj6pfzv6ArsUtA71uUVsWHqpLEhc9a2RtRSgtfyB3dtAL1h6B
Vxs/6f20bWJtZXzS9p8a0URtFaj/tZo2dDaNV8Wp/L0Y0fiStSfBcO97Of/Z
NF4NBsPGHQsKp/FT0ZXyk7dtxFPWVsfNK3WHer2n8dMxf+W0z9rh9D0NDPfu
8Z0iT/udhV0KMgNLzlG/Jnb/mqW82YLmz8HBP4EjLF/S+LmYOrVj6dgjBP88
/LVUfXD+1zPW1sJ7R/Pe2x7S/PkomVB5tmAo7W8BsvUnnFfQpP0vRFDGQOeS
DFpfG1/+Vj+V9af2IrS89Q8P7qHvLYZxbGaUnwXNXwID7bodf/2oXwcX7l0Y
7/GV5i+Fefz292f/ndcyiC0O2MpHUHs5BvXYPNuSS/OBCRP8HDL2M3hDgbfb
K984HqDv6eJNzKKgM3cZ/KG6cC+Z8nutHs1fgZ6xH9b43mDt0BWo/RoT22/C
a9a/Es1vdzubRrHvha7Ek6w5nTaGtJ9VMKzPtl/xjLVDV2HG06Qc3hs6/9VQ
sdyHURNp/mrcsn/3Vk2V1l+Dtls7Ck6doP41OOd34T/9sw2sfy2i59+81JJH
31+L/J47WcEnaL4eMlN6bAIuvmL9eth0IrJzUijBvw51M0587PvxOetfhw2T
kk5/lKX5+vh5/+CjrbTfUH0IEy2KZunQ/PXo2RRWHqdE66/H/IUNhVZfiZ4M
sG6AupfackZPoQbYiCPCmSH0fUMoB14ulJTR+RqC+27cF2yj89uAwEuHizLP
MXhDN6Bq4OZfn0zYfmU2wvaR5pT7ddS/EfEn+l2eokr7M4LN9skffB6x/cAI
b1MMjFcOpPM0gtJgXZlnmqxdYoSPgYoN1vm0/02w7fXYuiWT7Q+b8MZVPaZX
G83fhMT4iZZnrWj+JozvK9tr0SmCzxjijfdGtH9i5wdjbFcYX7FpPeHDGFMs
Zl0+PIDBW2KM1avHDL9wiOZvRvBoWaOgYbT+ZuyZsF1HcxqtvxkfUip/HHxP
8zdjw+iqGWc86PxMUFnYsvjTQLYeTPAt9km6wwbCp7RfeaX3jGD2/RITeCeO
9my2JPi3IPRIrofrdlp/C3x7LdkzqJroZQviLJP7v3em+VuwZvf4oeMms/Vk
tqJgWOjwgR20/laIiyYtrFtN+NqKQV0PYhwesO+VbMXHLw5zrC8Tfrch+sDs
nsLjbDy2QTv4vMXvoUQv2yDcMNjdg/pLtmGYfo6D4VU6P1PsnDFCOJTkM0xh
MzDh8ROSL6GmWPtYrDX5JO3fFHFTRlS7x5F8247TS0tnGw6g+dshaAs6IiB6
CN2OTaPHBv5eR/vfDuOJVV9t/+F/Bwxu/Ar+M5/hCzuQZvGSn6hJ8mYHdE5G
LzJ8RfjbAZfPJ9t9FhD9mqGguldF6gGC3wy95vgt5Q4hfjODenDQ/p1nGT5L
zJCupzvd7wmtb47ctbv2qOuz8TBHzXjflJp//GSOhSFDp3x5Q/RrDrOgCSmD
ymh9C/jPH7Z8Yhutb4GgcsuCHxMJ/xbYbmt3X96FwVNigaECwa30LSTfdqJt
fcXx0SsJ/zvxbsKg3Rq/6fx24kStXm7ORcLfTnyy5D0qy6D970JlXX2B3iu2
HnahcYp+4dU9NH8Xfo6cW1TRSvvfhZ7y2+uSw4h+LLEs88HJhno2XtUSbjNq
LzxbSPLAEr28Y3ZOamNtS0sU2sZZ/hlM/GmJzaVy+Ucnsf1lWiLv4eqji84Q
vizRZGfXXrSYtZsssbx75OGEuQS/FXr+Xp1o1ovpC1UrnNI6s8mN+BNWWJa2
2OT7craepRWWWznazf9A+LWCWq1JQkoRrW+FsU9evgtLZeNLrDBxRdaUrQNp
fSvkePieDvak87OG6UKV4ZtIPqta4/ff3rnbrxE9W6Mx5XbRustsv5bW2PHI
fMeNPJLX1nAIObnXdxzbf6Y1jhcsWeh0kuC3xhyL6qknh7DxTdYYlLVBxfIf
/m0QXrRzqfZ5Wt8Gf6+/lal7R/i0wak5WT83OdL52+B69/STf84Qfm3wpMFF
Q7CLtTNtMPHkhBUHC2l9G6wO0D/hE8nmN9lgvJXW/OfDSD/aYsyyl8bZ9Ww/
qrZ4MqzQ3HYLwW+LG3anZ7WH0/nbwuuCk2k3j/BvC7FcbfGXr2y9TFucHm0W
vDWezt8WY1fNtGoFazfZom/Nk4vD00n+2uF81kb/7GZa3w5vTG1V3GcR/HZo
6WtseziXjbe0w3ql0XI7wwj/djh37YSn3jyC3w4q54+4+pN8KbGDwYMVZ8Nv
EPx2SJG7oqzwmuS3PfzHPo8xdmTyTNUeFisC5w9ZSPRnD/EBYcef07S+PTbM
fP39i4TO3x4xSYOurlJi/JVpD0PtD2FXI9n3Suzx3LFKZfkfgt8eS5OcPML1
if52Y03dIIU/ioT/3Ui5P1ZbYEX8txsredcOTBrO8GW5G8OMXiidNKHz341H
NfJKTVoE/274CPuYhb4lebsbyo1mhy+3sPNt2o33LRMG3xCT/HLAs59de04u
pPN3gIbP3y77MJLHDpA5P01OvoZ939IBY3o9HPZIl+B3gHKE1SC1IrbfTAck
Ky04W36R5I0D3LOXhS9UovN3gIdn+NTok0R/jrijPOlEI5/gd4RByXHfwFqS
p45wsuIcLyL9bumIl/mW35T/I/3uCNX2I5bRWsT/jmj7XnbG4ybjtxJHpB7Y
/PgT6a8mR1xeFsCdSfaAzB5wBOL8Zy/YeanuwehlHw+kBRL+9yBl6OETyvVs
Pcs98LmoP0Y4ns5/D6blPL287zGd/x401LSGzOcS/Huw65VmzgRn1m6Srnfp
+dCO/XT+Tjh3rlw3jexxVSekW953XGdM5++Epr+8YKEG4d8JLl/VZ0qekn3i
hON3Q1Snc4n/nDD3sOHedftJXzgh6Nvj4btuk/xzQrR1x6bfAbS+M06+qxi0
/Ait7ww1c9NR4j8EvzPWuddeM+om+J3xKfZbVXE2nb8zOg94TuGQ/ZTpjPIL
Q4//nEz07wyOv395hBeTj03OMP4c9+AX2Qcye3FMb9ce56O0/l5Yv9koCWwg
e3Av3p8uj/Q+T/jfiwlJyS7Ju4n+9mL+Q+GgLxLC/16odV0rW3GB+H8vrtuX
vIuaTvS/F83rQgW+8YR/F5x44GUy4BHRnwuakwNl7g2h9V3w5YPewBm9aX0X
PLY7e1rpCdknLrjbceT7gUCC3wXjFFYU9Cb7tETanivb5fSD8O+CF5ecWrfX
0vquKOxf61zFZ/NVXTG5o/HaK3Pif1cc5w1Oj/7E6NnSFceOq8hq99D6rhg2
+kbV50K230xXDLbQPq9hSPh3xTyJ/hkx6dMmV9yLXbSqby7h3w0/Svd9uWrO
5iu6Ib5zvtfCtYQPN+imH5JpLmb9mm5IUJvVu+9sok83KK/PsX80mLWN3NAR
XjCkUpn0hRv2HnDdbJ7H+t3ccI/7reSMHdGPGyYlTx37eknz/9ocN6ht1Nzw
cS/B44a5A/7jDT3N6CnfDaVLowvnEr+WuGHHE/kshWvsPKrdMGDmX27FfpI3
brB6Ujr+4mm2Xocbphrv+mZ2h+jPHQ/MFAf038Daiu4oUJVRijpM8Lvj5ovk
913kj2u6o+zc2uDO5SSf3LG12Wh40HW2XyN3fC+rEu6sJn51x8RHfQt2TGPn
7+aOyhP7muc1E/26oz74hZv2EtbmuGNw2MwlmcdInrhDPt6ruXYha+e7Y8fX
CZe/ziD6ckdk+5HhlhR/qHZH9iKPywt1SN+4Aysd12pvYufX4Y73666/fupK
9OcBtaDBZ8vI3lf0wCbPXnslWuy8VD3Q/b5ofrwPa2t6wNLp3efdnQS/Bz4r
DIozuErwe+C/3fr28wcR/B4om6I65tNOgt8DRVpXQ+spXhPqAXsD3aG9fdh+
OR7Y+21KrdYC0iceGBvc9LwgmX0/3wPm4zTHTtxN9oUHBl1PWjZGk+D3QNzI
KeCKSd57oP1RL37nUja/wwOzt08PffGH8O+JF5FzXdoOMvgUPTG8t8/+K/8R
/j1hef/gbRGP4PeEdoO77AYXon9PyNzpdt7em8Fn5AnPPgsU6nuRvPREXu8B
/ppy7HtunmifhJSmEoJf+v3GBw+1o9j+OJ745a202Y7OJ9MTN692p06MYeeZ
74myb+9v3XUk/HvieXB1kTHZf9WesJjbMsDsCPG7J6wHjL66T4vg9wRH1lpi
TPDKeMF7hYp5Xhjxvxc2Xvsdxif7V9ULF1t6BElitr6mFxJsToxe1I/8FS+Y
HHy5pfgm8b8XzJoXPL+qQvB7ofq8+eClRnUMfi9s3mFd3D6H4PeCw5/BORok
bzleKJtXqf2Z9pfpBd7DkQ6dWwn/XhB41hqrvST4veByfckdqyoGb7UXtqaU
ykUYMvnQ5AVTvXUZZ24yeurwgl5hpfkOY7I/vNG77qXHqEeEf2/kfM/YqfqX
4PdGV/3NqzHz2Pc1vRFQbld3IILsY29oVr/wyaN4p5E3dAVB5+z6kL7wxo88
4zPu9ky+uXlDLsN6+frfJL+9UZTomB2fTvzvjelDMnZPP0rwS+ff9onfE8HG
53tjZa6Gs6820b83zo+/WbdAn42v9kbEkq7B67xI33jDVeZG7Qqynzq8MTNC
vOTsPvI/fFBQlmIpDGDnoegDBcPwxa47yR70waBM4eHukew8NX3QpbWjwI1L
+tEHjye5LHSxYPONfFClptczgPwzSx88N/2UNS+F5L8P/K2nPTY+QPj3wXSZ
LQbhFK/k+OCs/7etw51J/vugsMfZdNE6kn8+eLl2Y/ABsidKfDClPDDsQALR
vw+0ng5v3H2J5L8PciTX+uxcSPLfB8Jp235MIntYZh90P2lvNaoi+bcPi5Pv
pPwdQfDvg39c8KdB5C9o7sP87YLDLsS/2IeN2DDk+GDC/z5oe4wunV3Gzsty
H36Elflt8WXfc9uHtKEjcxcR/YXuw3iNmu3y49n+OPsw4VimXa9dZM/sw1b/
kOd997HzyZeOn+A48WYg0f8+vNP3q1qWSfpvH545P5O9Y07ybx/Ub2n3bTvI
5nfsw4xvZUXzjAl+Xyx441TXNJL1K/pCV4l/8/R0skd8UcDReb1Vlp23pi/O
RPTsHTyR5L8vfrx6fCqc5I+RL/x9RmmN1iH694XJH5V3VhQfcPOFfpRlyKed
5D/7Yrp+vOBiH9bP8YWst5GZLMWXM32hoXsvs3YFyT9fCATpb44NJPveF586
5m8P+s32W+2Ln3NnFn2neGKTLwLuvpTRoHhqhy/CT/zd8uOf/+EHN5/IRXcp
vqfoh3DnqyOOfCX+90Of8Oohj9aQ/veDRvv10KjThH8/BKvUm280J/nnhxyd
b+uV3Ah+P8i27m/zIHvJzQ8lnTGXT9uT/eOHnbOPTS5YQPTvh2WdomEP1pE9
74c52zouhlWz8fl+OKM5aoCcCvG/HzaP4mzkUv6i2g+cpj27J78m/vdDhXlh
d0chG98hHb90xZCWUILfHy5Z8s8HZZP898cCnUkZqSSPVP1hGTA1oDfFBzX9
MfaG2C3eg+xTf+S9lA97pkb6X9o+XdvyR57g98eKqSq7Vsmy8W7+cL6pGvPG
lvx3f6x6mjG1eBDJf39EJhi6XH1F8s8fprfPBURuZPvP98fFttTf60eSf+UP
p5GjP8Xokfzzx4R98sIgD6J/fzQFfgs92Yfkvz9C/js353sF0X8AEmrmrRml
QfI/ALt+3HZNLyD7JwCX5nwfIKD4pWYAXouFtrqVpP8CsG6gv6t6f9L/AdA3
yN7WnkXyLwCnTAoPHZzCxrsFIHmhVclUkPwLwNbn+eeyfAn/AbCvH6sCEVsv
MwB1Xf5Hp5I9mR+Av7uj+189S/wfgG7FsMczfAn+APTcGqvzxp3wH4ABYere
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
PLKa5fnoDdn/cbi00aLwpzzJ/zhM2H/kWsAp1q8XB+cb1SmFVA9kFIc9oTcy
M5zI/4vD+ylazgaOxP9x2P19QYcP7d8hDpNHBg8Rk3/vFgcX3eJfSVsI/3Gw
GNP7QEMg6f84jO00KqurYfQSG4dN97/88ttE+bg4aBUcvPyZ7GtRHE66LdX8
QeeTGYfrPwZ+kXFm55MbhyP27gs0XIj/4yAUjoo5RvXKRXHYr7yx+Srp+5I4
vIja47l2N/l/cVh22qhI4ybxfxxGlzs5vqJ4UJ10fa2c7WF+pP/j4PdWrBR1
k/R/HP58PWc4leoVO+Kwy22OTsYmsv/i8JOTn1tD9Qoy8TiaH90US/Ff2XjY
OQjDosYzflOMx55P84+/4xP+47HKUSE8ZxjlB+NxsE/DyIrx7DzV41EW2mMp
NKR4eTxKj29alc4l/R+Pzz9lbu61o/xJPKwjIk8+HE34j8exbL/blUFsvlE8
/JTUjiSTfjaNx4njo+tqhpH/H4/6i0p9d8myfod4OJwRf8ul+i63ePSVXype
fInsv3g8zCzS7Z1E/B+PJ2bCV8YUr46Nx8LJ20x+U/yQE48Fe25sL6J4qyge
H5XGDb7wm+y/eNy1u7xHbxRbPzcebvpTLM7tovhPPK7nXzJI3MjoqygeMkof
9tqTP10SD7khUzaZ+xD/x6N5XfrqzQeJ/+MxmRvm1ErxxLp4VBnIPp5O+qwp
Hprvp68KekP4j8eB2ydO8qmesCMecUF3NfNcKf4Xjx7P2aGh2qT/E8DPdytb
Tvku2QQkPJhnqu9A/J+AMNffuSF0H0s5Ad1yM1fdIX2imoBFvxM9v1wg+Z+A
tK4lkT8EJP8TUKXrbClP+NJOwMQ1P9WqjpP+T8Dw7wmOryi/oJcA58OWur8f
EP8noNzBItuI8v+mCfjJ37gudwjFfxOw/7Z3o2crw69DApZ/eThMayXZfwk4
dv/in6xQ4v8EuN+f0KBTTvn3BIzPHrHZM4D8/wRcGWhkMrE38X+ClJ+8+izs
xehblADrTZt/b39F+j8BSyesnWRC+j03AWrHfvRVrad6jQRE3DzE+4/otygB
e9Zdaf9D9QElCdg+IVvmVST7XoV0/Mmr5xQoHlqdgEmDTjzSMWL9dVJ89XNL
+073F5oS0O/+o5knXrD+1gR89nl+eiHlozsSsEHJ0OVMIuOnrgR49vdLj+pH
8j8RNfI/ok3EbD+yifgddWEvj+wfxUS8vH/8nO8Xdl7KiRh8aPSqpNNUL5uI
cy22g7LJ3lBPhFC/3PUE6U/NRHxUXthrZCLp/0Q0Dnkx1mYQxX8Ssf2NxZkP
ZA/qJUL0+8iBAFPCfyIk8yovPCkk/z8Ryy1Mf8VNIPwn4mFOGWfbR9bvkIiv
5x02KBH/uCUiPDbH/1/9j690/3nz5F6S/gpNxI7Y9a9bKF4amwh/58VqShcp
/ifttzj3XZ/ue4gSkRXiHLHMmPg/EQUnNw2YO5Liv4mQ0z9+pj2V+D8R01W0
TVZS/rBICl9eC/82yZuSRMzbE3ZbgeLBFYn4YxmUptCX4j+J6C/5U3xUjX2/
LhFOMdsObiH/rSkRL0zHbZGIyf5LhNecLetKrxL+E3H0eFHrnd0Mnq5EqFVO
+z6V/GOZJDwrv5L3YT3xfxJCW7p1Q/7VwyXhp8vOtDgZtr5yEhYuWX7NjuS9
ahJMnqt7DCH7Wz0J7R6vu5wvUPwvCU73Z75We0r2fxI+dnqvO7mH9H8SnAu+
uD1TJ/mfBN8tMuITVB9plITXBwy0EoXE/0mwOXl6Zj8Fsv+SsGPnipbdlM91
SEJJzvPGu3/I/kuCf9HLXUcoHuibhMqok6oN/+5HJSH2eG/doa8J/0lYcd+z
tynFNzlJeOCw/KtLPINHlITPuskHXspQ/DcJnzoHn6sj/ZabhOhqpSe3KF6b
n4RH6od0NCl/VZSEgKcvhw7lE/6ToDra0vsb1VtUJGHwx32vz04h/Z+EC44z
q3utJP8vCa0N9udPddF9kiTIjB5lVTSD9bcm4W0Sv870FcV/kpB8MD4wSpOd
b1cSPkydkDvtO+E/GSMHdw9+SvUsssn4eL0zT12Z8n/JeB409qI52bPKyYiX
CRdyNxP+k1H8S/bQjsOU/0lG1Yf2JdpfCP/JGDvy4uOtVP+onYw53609moUk
/5NxUs3FrI88y//rJePpkl3DvEIo/psMrf3lj5rvkf5PxqD9sXbd2xm9Wybj
xI4ba0KoftshGW/+Zvh33if8J+NYKi/eM4T8/2S4rZIt6H+J5H8ytvuOM8qh
+pnYZLzLGz1++wWS/8nwCFuT8Ws16f9krJnL7bOhnPg/Gdeq5jRY6JD/nyzV
57amAh7VKydjqP/c0XESkv/J4E8y6uIbkP2fjCPjYrY1LGH4qUjGtJ+5W7ZR
/V51Mkab+phkUT1hXTK+n/2QMKiQ7P9kKf3N+vuC4vWtyTCIsjgjV0D4T8as
rsNb9N+xdlcyTANaOv9kUfw/BbM8rz3zbGX9sikIzjDd5Er1xoopCPpZZT+E
6k2UU/DVYWvnYGOy/1Kgc6htUCfdt1FPwUxfzYp/9280U1DcNSl72Xi2nnYK
aiUObfV0fwApePFYNs+D8kF6Kci69jGo0Zj4PwWfL7QNs6P4g2kKuu4e8flB
+SnLFDQZbvs9W4HkfwruVR1+FZBP9l8KqlSbUyRUP+GbglcVi5xmZJL8T8Ht
V+VH5K6S/Z8CzWvB7XlOVI+WgiM7FhfmU32GKAUKLfIWviLCfwoOl2reC/ei
/E8KJhxIeXOa6k/ypf1VE0eo+LD+ohSEwNCmuYb0fwp6jUb1ftKvFSmIW2op
eDCW8J+Co+VPr0R+If2fgskKDf1cj1L+NwVD1zRO4VO+qTUFiqX2YxydyP5L
geGdhyFmpmT/paB6h0+zpzrZ/xwUZfhqeJB86MtBTdwi9dKJrF+WAwuzuPYV
7mx/8hxEFLRly5E9osjBcYUf9s+pfmkEBz4Xzd61Er8qc7DnZO3tI25svgoH
Q1UdQ/LkWFuVg0b+Xc/+IjZejYPVk08vCif5pM5B9CZ9lZXk32hwcMt9/Nwe
iqdpclChpDB7+FI2XouDlYejDuyi+lxtDsqXatxx9WVtHQ5GTO53296E7A8O
sof8iS93ZvhYxUHKxivff6pTPooD7X028m1EHwYcXNFfGbsri52XEQeRNodu
alB82oSDZXuMcXoS6Svp+Wnt+d3Tyr5nzoHJlDMWXwPIf+Wg1EPnZ2Mkm28r
3W+xiXdtC8kzDi6+HbttPd1Xd+agUm9LUrA3268bB3/ebegtq8T6vTgISYyT
zZ7D9uvLQYB3Ac9mI+sPlOJPe3/BNZofygF/UEm2bxwbH8nB15Gvm0zesvON
5WBfSESejTabn8iB3uGAE8sp38/hYNK2d/JmVH/L52Dk4oy1uocpX87Bfv2t
ki0XWX8GB5NreWcVyP/I5CDheUWvZfasP5uDhZwt1j6jiZ84aHb5rziPvp/H
QcbihYJket8hn4O6SeNV7Haw8yzkwNU9s3nfCAZfEQcKJ7Mv2juw9Yql88e/
vPNqFelfDjrvXOjbTPWhZRyM5ftwiq9TPo6DvsKvgbnET5UcLA/LM3zZwORt
NQcdzeo5gTS/hoPkEe4T3JaSvuZg4MIluy3zWbueA/PC6ZNK6b2AJg5OZN5u
uc9j59XMwdaQ86muVM/VysEKn5iRXaQ/2zgIG7xGX5viVx1Seo/bazSY8ped
0vNq1rO206B4DwfFBwPuPKT79D0cnJ27eUN6Cd3/5SL48OkEz1C2n75cHDqU
XvvalPQBF2fb99QEvmf98lzkt0e0jqT7f4pc3B525FHWQ/a9EVz8Oqy6dy7B
r8zFhZyV5+siWFuFi2j17UsnUb2BKheaLyLfrKX8uxoXn380Lb1G9pk6FxM0
vBPjyT7W4MLxidX163TfU5OLdbP8+iyOZP1aXOyapnO+9CzDnzYXvTdaDIpV
Jv7nYlFfzaD2f/ebuXhnejVs8TDWXsVF3IfF6qYGFI/kYq9aXtitHna+Bly8
zf1cc8yf8lNcXNMsMW7tZt834aLJ4NzxzDzify4S9ofq/at3M+fiYa8lTdvo
voolF7P0bMJqbNj3bLmofzt9SuJeqmfhImN46axtpQx/zlz83ZVS/2II1dNy
oVaqkB1K9+W9uBhoflZ8NpbsHS5kJFc9ThgR/3ORuvZ7lKkR6T8ufF4XmbqO
YfiN5KLVs3O82luyh7gYqVYcfZ7qBRO54N45EudO/ieHiwX672e/zWH2DJ+L
jeeMKmPsKF7KRWOC5Nw5iq9ncLHD+f22aJJPmVw43z9kbkf5i2wulMTGGZMe
kj8thcdy6cWbvxh95XGR8mvR+BN/Kb/CRd9kg4w4qn8r5CKm3Ojb7LFkb3Mx
aui9fG2KJxZzcTOsX3riIaqf5uLYsTUxSZ5s/TIuDvhEFgcPYd+v4EJr0odf
wQ7sfCql9O1dlNXPleIzXIi05a/21WHja7iY/WvQIBWKZ9Rx4fRf8ab9YN+v
58Is4ek+L6pXbJLyz2P72lWFbHyzlJ47ZgiVKJ/WykVYf666LdFbGxeDDu1b
XE3+WAcX52e8Xe1H7xN0cjF2odO6piFk73Nh0Z16oUuFfa9HSp/Tvl2f7UT6
n4eii/e79On+Tl8evn7MCdhN96tleeBvsDu8ZyqbL8+DoUPN0li6D6nIg6Xq
E8XHFI8ZwcOfAT08WU/yF3kY6Hfej0vxRhUent35vH64C/E/Dy+u6qRKD4Lx
Pw8qGL9C8188gYfB7e/ceiheosFDSZzKclmyDzV5iJysZNWX8t9aPPgZHzq8
i+xPbR4uHTNROf2Ura/Dg+blgY+UyH8HD8HWZotXn2DrreKhb07LqWeUz9fj
oSu2YNYx8k8NeDAuqBunT/FfIx5QMPWLG+HLRLofT2GS5h+yV3mI6XsjTpfk
pTkPrg+mRptOofv80vYcs93RVI9oKz2/sHV/zlP+zoGHL69vvG+keLYzD8dH
fUtKpPcd3HhYVObStJ38SS8exlSUPDVeTfEOHkImfH94bxWj30Aehl3YPGLJ
VvJ/ebiukuV4l+phInnouNBSMWAK8T8PT8+VNmyl93ASedB5XTUskfQPR4o/
BfvS0GB2PnweVMWCGXfovqBI+v2njRcbyL/N4OHMn6yMhWTfZfKgv+DrwrA7
xP88LL7WsujuUPKneDjwpszoBeWD83hYO/zn+ph4sq952DWi+tQ4DvE/D4+3
9umdRfchi3jYsvXS3P5Uv1fMw+c+A4Vryf4o4UFJYYyXnQrxPw/TdIcW2VD9
SQUP4Uon5JPus3al9HvuxfZTo4j/eYiuuiVaas/gr+HBwHzy54F0f6mOB8e3
B7eMpnrkeh7OPtsephxN/hsP657kq1sSfzbzkDWTG/eE7O1WKf41r+vev8ro
v42Ht/LtPGuq/+jg4eHJ/p9f/WLwdPJQt2zKKxW6z9DFw1av1HUzwtj3enhY
Ud2gLUf1rjKpcP+6+tQzb9L/qViRnbViJ52vbCruRV7N16V8uXwqFit9GpxL
9y0UU3EwvefGy2Li/1TM+k9zuT3hWzkVyoctx74PYG2VVPzZeIsrp0v1A6mY
UOWWG0Tvd6il4lzkffsDhB/1VExsz4uyHUr8n4pdz77LX7Kk+4ipSHpzMXI2
3cfUSsXnuddcDRqI/1PxYN77hbwjbD2dVCyd0UthHuWbkYpDvO7BcVT/uUq6
X+705nPXKR6ZCv+/38/+2Eb8n4pb3e/lP3sR/6dijMfE48fp/RSTVIQtr5rY
2UDxilQEh3xcNesW2695KnqPc7adTvxumYrt23aOm0v8ZJuKw3IeNbWJlM9O
BSq9eRM/svnOqRgy82F31A6qb0pFlFO7zd9Mlm/zSkVLyCfBa7qv7ZuK8vUj
4v78ZPMDU7HAql/cZ6LX0FRcvLFdfIjyjZGp4FaNHnHwXz4kFXoycg4ffrLz
SEzFvA7RPd3xVB+bito7TqLjVK/NT8VIsxlmjXfZ+qJUtB0dsPAj3efISEXN
0TU+hlTPmpkKqSzxXBJK9r8Un1/rPCeR/ZqbCvO5IxsjKb+WlwqHWRNXWNP3
86XnJXr6qUCDtQtTEXs/Zr6LIuVbUiEZ8+WsHOnL4lREFgb+vGdN+fdUuLQU
n+uheEqZlN52OMqOpHqXCun5KGj6XKX4T2Uq+k7c36eS4ufVqVhS3FwpT/nh
mlQ8K/uQfZXqo+pScWTB+Thduo9bn4qegqLZt+9R/VYqHm1VKbuuxvqbU7F6
5wvny6oUz02FtXzGnLd0H7ktFZPmnrrdoE3x3VTsP/e5M5Pes+lMxYDha7a+
y2L2WFcqjPsuS1o5l9FHj3S9pDy5i4RPGT5OSbRtFpF+7suH0Rh9//6DKB7M
h6tpxeaJVM8lz0fwU0n2vsdUH8CHdUOrR78B7PxH8BFZfOpdLdUjKfOR+lo/
cXgq8T8fh1NH2DvdpPoBPoL+njx5O4b8fz5WFMT6q+wl+5+PR/mpw7kBxP98
TPKoHnz0NPn/fJTdQ0sNxYu1+Ch+VvvelO4naPPxyfdx1mTKR+nwMehF4+ty
Lvn/fOws66haQ/yyio9L+4aeUQkm/18Kvxp3agK9H2LAR8bWBdkfiqg+kY+T
PRtMPpG8M+HjVblVT5462f98VNlL3v6yY/s35+PxupTnHlTvasnH++F9Dw6g
+lZbPv7jHennT/E/Bz7UBINyHyxn/c7S81G9s8+Y/FM3Pq6dm3X3SQDZ/3z4
xH9VnELvj/jysXSelUkevc8QyIdujf1I1ylk//OxsLFR10KX4SOSjy/Zsl5r
uikezsefTMG4leVk//Ox0cvQW0zvT3H4qFPo3HyN/DE+H5b9tjuJvlK+jI+3
62tfP/7N4M3go9/jg3eq/pL/z4dzlf8ZMcXHsvmoNt0RMnAfm5/Lx/2lJbtW
EP3n8SF77e6ysaPJ/+dDeaKSvgHdpyvkY0zl0AzuOTa/iI/aWeKXoHxjMR85
05XCymPp/jAfp+1Q/+YZ208ZHzNu2fi6kT1RwcfuU4/eLCH7oJKPBoc10Xdt
KD7PxzjvG2bDrIn/pfQsjLu1jPRpHR+Y/3jp+e3E/3wcaTqm50j5qSY+PNz6
Ki2k+wTNfKznyg1MpPxrq5TfVm55o0T3n9r4uPPMITi8ge4z8iF61nqSR/ZE
Jx+T18WojqT3HLv44JX9XZeRQvY/H33Ssnn2zyn+K8CrjwfOelK9ZV8B1g++
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
5N9nS+B9PCIxkOyzXAl6HSscG0zxpTwJjuqVThljyfrzpftpdUp0FDN9WCjB
mvpdek70XlyR9PvP3QZZKVD+T4JZOxdGTN1B+l+C13r2unZ036tMgprn1XGr
Cd8VEmxLmPnrBt0XqZQgzK4W37vJ/pdg/5xZzuVU71sjgdFm/9sZlA+uk6Bv
9zK5Rb3Z+HoJnIf61G4nfd4kwYpwhVV7SN83S5Bl/2KGN/3eSat0v0FbxvZQ
/WmblH7PdM3OovsAHRKYKgtzr4Yx+DolCE7cKjvnX/xPis/usIo6U6Z/eyTg
5T37T53kqUw6Gs8cPKahyPr7puNX5uPZ/uT/yabj7OMxY1ePofrfdNQrJB8e
RvkAxXT4m2b45TlQ/V860jaoDjs1ivg/HY/26e8IovcuVdKxRmZBvR7V26um
Q9Kvvtic6kXU0rEyI0F/zmLy/9Nx4mxsz08Z0v/paJvT+9hG0uea6ahRX7Lm
BeV/tNKx4+ZzBz1Dsv/TwSk+Y1mpx9o66bjweafWbHrfDOlSf8aDY+lJ+b90
NCwacWYB/X6JXjrWrhr3QX4N6zdIh4Nf3qjLO4n/07G339NkNYp3maTD5Ned
Sk+q/zBNR9CdolFr6b0Y83ScTsaQH/T7Y5bpsJo85tkjqu+1lc4XDSmxpXpX
h3Qk8YX5tmRfOafjpMH3sxPofXC3dJhlrVls7MPO3ysdexoeVN+leKFvOrjb
Lh+9spb4Px3jXTVfvdlO+f90GMRIvSWq34pMR/bOhw/L6b2g2HQkG3jdWvya
+D8di8+caw2j96A46ej2XJK8eBuDl58Ogcgy/Uo85f/TMUPlU1c2+dcZ6cif
kteuSe+xZ6ajl1Zvo170PmG2lB5exY/d/6/+Lx1ozGn2pXxMXjoU9npaDd5K
+j8ddVsk3Y9nMfosTEd1oou3bH82vigd0xXGXiglf604Hc5x/Q2/UL1AiRQ/
OreGXyF/tiwdvAv+u9dTvUZFOgpTDTO00pl/VZmOmKXvxpr8u5+djmf5j6om
0ftoNemwvXq6Udud7mulo+tucD8feu+/Ph2lN+V39qd62KZ0nCraf6yY6rma
0yGn0KKywpD0fzp+tMXtjCN91JYOC2OLVz8p/tCRjrmOP/8zpHxmp5S+m7Nm
nZGQ/k9HVeHFQ2lWZP9L+WfmsPaGIqr/zcAK97ZSRaof7ZuB4GoZby16v1k2
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
xsZJnv9reL6oeYLjqYZJfwARGO5U
         "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0055000000000000005`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
         
         "]]}, {}}, {}, {}, {{}, {}}}}, {InsetBox[
      TemplateBox[{StyleBox["\"LinearRegression\"", 16, 
         GrayLevel[0], StripOnInput -> False]},
       "LineLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
              "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.15, 0.28}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      TemplateBox[{StyleBox["\"Data\"", 16, 
         GrayLevel[0], StripOnInput -> False]},
       "PointLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
              "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "False", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.45, 0.85}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{1.495, 0.33763087538619274`},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Output\"", 18, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Timestep\"", 18, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameStyle->Directive[
     Thickness[0.004], 
     GrayLevel[0]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->18,
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->800,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox["\"Training set\"", 
      GrayLevel[0], 18, StripOnInput -> False], TraditionalForm],
   PlotRange->{{1, 100}, {0.3519106139279746, 0.6375053847636128}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
+tEHjye5LHSxYPONfFClptczgPwzSx88N/2UNS+F5L8P/K2nPTY+QPj3wXSZ
LQbhFK/k+OCs/7etw51J/vugsMfZdNE6kn8+eLl2Y/ABsidKfDClPDDsQALR
vw+0ng5v3H2J5L8PciTX+uxcSPLfB8Jp235MIntYZh90P2lvNaoi+bcPi5Pv
pPwdQfDvg39c8KdB5C9o7sP87YLDLsS/2IeN2DDk+GDC/z5oe4wunV3Gzsty
H36Elflt8WXfc9uHtKEjcxcR/YXuw3iNmu3y49n+OPsw4VimXa9dZM/sw1b/
kOd997HzyZeOn+A48WYg0f8+vNP3q1qWSfpvH545P5O9Y07ybx/Ub2n3bTvI
5nfsw4xvZUXzjAl+Xyx441TXNJL1K/pCV4l/8/R0skd8UcDReb1Vlp23pi/O
RPTsHTyR5L8vfrx6fCqc5I+RL/x9RmmN1iH694XJH5V3VhQfcPOFfpRlyKed
5D/7Yrp+vOBiH9bP8YWst5GZLMWXM32hoXsvs3YFyT9fCATpb44NJPveF586
5m8P+s32W+2Ln3NnFn2neGKTLwLuvpTRoHhqhy/CT/zd8uOf/+EHN5/IRXcp
vqfoh3DnqyOOfCX+90Of8Oohj9aQ/veDRvv10KjThH8/BKvUm280J/nnhxyd
b+uV3Ah+P8i27m/zIHvJzQ8lnTGXT9uT/eOHnbOPTS5YQPTvh2WdomEP1pE9
74c52zouhlWz8fl+OKM5aoCcCvG/HzaP4mzkUv6i2g+cpj27J78m/vdDhXlh
d0chG98hHb90xZCWUILfHy5Z8s8HZZP898cCnUkZqSSPVP1hGTA1oDfFBzX9
MfaG2C3eg+xTf+S9lA97pkb6X9o+XdvyR57g98eKqSq7Vsmy8W7+cL6pGvPG
lvx3f6x6mjG1eBDJf39EJhi6XH1F8s8fprfPBURuZPvP98fFttTf60eSf+UP
p5GjP8Xokfzzx4R98sIgD6J/fzQFfgs92Yfkvz9C/js353sF0X8AEmrmrRml
QfI/ALt+3HZNLyD7JwCX5nwfIKD4pWYAXouFtrqVpP8CsG6gv6t6f9L/AdA3
yN7WnkXyLwCnTAoPHZzCxrsFIHmhVclUkPwLwNbn+eeyfAn/AbCvH6sCEVsv
MwB1Xf5Hp5I9mR+Av7uj+189S/wfgG7FsMczfAn+APTcGqvzxp3wH4ABYere
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
PLKa5fnoDdn/cbi00aLwpzzJ/zhM2H/kWsAp1q8XB+cb1SmFVA9kFIc9oTcy
M5zI/4vD+ylazgaOxP9x2P19QYcP7d8hDpNHBg8Rk3/vFgcX3eJfSVsI/3Gw
GNP7QEMg6f84jO00KqurYfQSG4dN97/88ttE+bg4aBUcvPyZ7GtRHE66LdX8
QeeTGYfrPwZ+kXFm55MbhyP27gs0XIj/4yAUjoo5RvXKRXHYr7yx+Srp+5I4
vIja47l2N/l/cVh22qhI4ybxfxxGlzs5vqJ4UJ10fa2c7WF+pP/j4PdWrBR1
k/R/HP58PWc4leoVO+Kwy22OTsYmsv/i8JOTn1tD9Qoy8TiaH90US/Ff2XjY
OQjDosYzflOMx55P84+/4xP+47HKUSE8ZxjlB+NxsE/DyIrx7DzV41EW2mMp
NKR4eTxKj29alc4l/R+Pzz9lbu61o/xJPKwjIk8+HE34j8exbL/blUFsvlE8
/JTUjiSTfjaNx4njo+tqhpH/H4/6i0p9d8myfod4OJwRf8ul+i63ePSVXype
fInsv3g8zCzS7Z1E/B+PJ2bCV8YUr46Nx8LJ20x+U/yQE48Fe25sL6J4qyge
H5XGDb7wm+y/eNy1u7xHbxRbPzcebvpTLM7tovhPPK7nXzJI3MjoqygeMkof
9tqTP10SD7khUzaZ+xD/x6N5XfrqzQeJ/+MxmRvm1ErxxLp4VBnIPp5O+qwp
Hprvp68KekP4j8eB2ydO8qmesCMecUF3NfNcKf4Xjx7P2aGh2qT/E8DPdytb
Tvku2QQkPJhnqu9A/J+AMNffuSF0H0s5Ad1yM1fdIX2imoBFvxM9v1wg+Z+A
tK4lkT8EJP8TUKXrbClP+NJOwMQ1P9WqjpP+T8Dw7wmOryi/oJcA58OWur8f
EP8noNzBItuI8v+mCfjJ37gudwjFfxOw/7Z3o2crw69DApZ/eThMayXZfwk4
dv/in6xQ4v8EuN+f0KBTTvn3BIzPHrHZM4D8/wRcGWhkMrE38X+ClJ+8+izs
xehblADrTZt/b39F+j8BSyesnWRC+j03AWrHfvRVrad6jQRE3DzE+4/otygB
e9Zdaf9D9QElCdg+IVvmVST7XoV0/Mmr5xQoHlqdgEmDTjzSMWL9dVJ89XNL
+073F5oS0O/+o5knXrD+1gR89nl+eiHlozsSsEHJ0OVMIuOnrgR49vdLj+pH
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
NQcdzeo5gTS/hoPkEe4T3JaSvuZg4MIluy3zWbueA/PC6ZNK6b2AJg5OZN5u
uc9j59XMwdaQ86muVM/VysEKn5iRXaQ/2zgIG7xGX5viVx1Seo/bazSY8ped
0vNq1rO206B4DwfFBwPuPKT79D0cnJ27eUN6Cd3/5SL48OkEz1C2n75cHDqU
XvvalPQBF2fb99QEvmf98lzkt0e0jqT7f4pc3B525FHWQ/a9EVz8Oqy6dy7B
r8zFhZyV5+siWFuFi2j17UsnUb2BKheaLyLfrKX8uxoXn380Lb1G9pk6FxM0
vBPjyT7W4MLxidX163TfU5OLdbP8+iyOZP1aXOyapnO+9CzDnzYXvTdaDIpV
Jv7nYlFfzaD2f/ebuXhnejVs8TDWXsVF3IfF6qYGFI/kYq9aXtitHna+Bly8
zf1cc8yf8lNcXNMsMW7tZt834aLJ4NzxzDzify4S9ofq/at3M+fiYa8lTdvo
voolF7P0bMJqbNj3bLmofzt9SuJeqmfhImN46axtpQx/zlz83ZVS/2II1dNy
oVaqkB1K9+W9uBhoflZ8NpbsHS5kJFc9ThgR/3ORuvZ7lKkR6T8ufF4XmbqO
YfiN5KLVs3O82luyh7gYqVYcfZ7qBRO54N45EudO/ieHiwX672e/zWH2DJ+L
jeeMKmPsKF7KRWOC5Nw5iq9ncLHD+f22aJJPmVw43z9kbkf5i2wulMTGGZMe
kj8thcdy6cWbvxh95XGR8mvR+BN/Kb/CRd9kg4w4qn8r5CKm3Ojb7LFkb3Mx
aui9fG2KJxZzcTOsX3riIaqf5uLYsTUxSZ5s/TIuDvhEFgcPYd+v4EJr0odf
wQ7sfCql9O1dlNXPleIzXIi05a/21WHja7iY/WvQIBWKZ9Rx4fRf8ab9YN+v
58Is4ek+L6pXbJLyz2P72lWFbHyzlJ47ZgiVKJ/WykVYf666LdFbGxeDDu1b
XE3+WAcX52e8Xe1H7xN0cjF2odO6piFk73Nh0Z16oUuFfa9HSp/Tvl2f7UT6
n4eii/e79On+Tl8evn7MCdhN96tleeBvsDu8ZyqbL8+DoUPN0li6D6nIg6Xq
E8XHFI8ZwcOfAT08WU/yF3kY6Hfej0vxRhUent35vH64C/E/Dy+u6qRKD4Lx
Pw8qGL9C8188gYfB7e/ceiheosFDSZzKclmyDzV5iJysZNWX8t9aPPgZHzq8
i+xPbR4uHTNROf2Ura/Dg+blgY+UyH8HD8HWZotXn2DrreKhb07LqWeUz9fj
oSu2YNYx8k8NeDAuqBunT/FfIx5QMPWLG+HLRLofT2GS5h+yV3mI6XsjTpfk
pTkPrg+mRptOofv80vYcs93RVI9oKz2/sHV/zlP+zoGHL69vvG+keLYzD8dH
fUtKpPcd3HhYVObStJ38SS8exlSUPDVeTfEOHkImfH94bxWj30Aehl3YPGLJ
VvJ/ebiukuV4l+phInnouNBSMWAK8T8PT8+VNmyl93ASedB5XTUskfQPR4o/
BfvS0GB2PnweVMWCGXfovqBI+v2njRcbyL/N4OHMn6yMhWTfZfKgv+DrwrA7
xP88LL7WsujuUPKneDjwpszoBeWD83hYO/zn+ph4sq952DWi+tQ4DvE/D4+3
9umdRfchi3jYsvXS3P5Uv1fMw+c+A4Vryf4o4UFJYYyXnQrxPw/TdIcW2VD9
SQUP4Uon5JPus3al9HvuxfZTo4j/eYiuuiVaas/gr+HBwHzy54F0f6mOB8e3
B7eMpnrkeh7OPtsephxN/hsP657kq1sSfzbzkDWTG/eE7O1WKf41r+vev8ro
v42Ht/LtPGuq/+jg4eHJ/p9f/WLwdPJQt2zKKxW6z9DFw1av1HUzwtj3enhY
Ud2gLUf1rjKpcP+6+tQzb9L/qViRnbViJ52vbCruRV7N16V8uXwqFit9GpxL
9y0UU3EwvefGy2Li/1TM+k9zuT3hWzkVyoctx74PYG2VVPzZeIsrp0v1A6mY
UOWWG0Tvd6il4lzkffsDhB/1VExsz4uyHUr8n4pdz77LX7Kk+4ipSHpzMXI2
3cfUSsXnuddcDRqI/1PxYN77hbwjbD2dVCyd0UthHuWbkYpDvO7BcVT/uUq6
X+705nPXKR6ZCv+/38/+2Eb8n4pb3e/lP3sR/6dijMfE48fp/RSTVIQtr5rY
2UDxilQEh3xcNesW2695KnqPc7adTvxumYrt23aOm0v8ZJuKw3IeNbWJlM9O
BSq9eRM/svnOqRgy82F31A6qb0pFlFO7zd9Mlm/zSkVLyCfBa7qv7ZuK8vUj
4v78ZPMDU7HAql/cZ6LX0FRcvLFdfIjyjZGp4FaNHnHwXz4kFXoycg4ffrLz
SEzFvA7RPd3xVB+bito7TqLjVK/NT8VIsxlmjXfZ+qJUtB0dsPAj3efISEXN
0TU+hlTPmpkKqSzxXBJK9r8Un1/rPCeR/ZqbCvO5IxsjKb+WlwqHWRNXWNP3
86XnJXr6qUCDtQtTEXs/Zr6LIuVbUiEZ8+WsHOnL4lREFgb+vGdN+fdUuLQU
n+uheEqZlN52OMqOpHqXCun5KGj6XKX4T2Uq+k7c36eS4ufVqVhS3FwpT/nh
mlQ8K/uQfZXqo+pScWTB+Thduo9bn4qegqLZt+9R/VYqHm1VKbuuxvqbU7F6
5wvny6oUz02FtXzGnLd0H7ktFZPmnrrdoE3x3VTsP/e5M5Pes+lMxYDha7a+
y2L2WFcqjPsuS1o5l9FHj3S9pDy5i4RPGT5OSbRtFpF+7suH0Rh9//6DKB7M
h6tpxeaJVM8lz0fwU0n2vsdUH8CHdUOrR78B7PxH8BFZfOpdLdUjKfOR+lo/
cXgq8T8fh1NH2DvdpPoBPoL+njx5O4b8fz5WFMT6q+wl+5+PR/mpw7kBxP98
TPKoHnz0NPn/fJTdQ0sNxYu1+Ch+VvvelO4naPPxyfdx1mTKR+nwMehF4+ty
Lvn/fOws66haQ/yyio9L+4aeUQkm/18Kvxp3agK9H2LAR8bWBdkfiqg+kY+T
PRtMPpG8M+HjVblVT5462f98VNlL3v6yY/s35+PxupTnHlTvasnH++F9Dw6g
+lZbPv7jHennT/E/Bz7UBINyHyxn/c7S81G9s8+Y/FM3Pq6dm3X3SQDZ/3z4
xH9VnELvj/jysXSelUkevc8QyIdujf1I1ylk//OxsLFR10KX4SOSjy/Zsl5r
uikezsefTMG4leVk//Ox0cvQW0zvT3H4qFPo3HyN/DE+H5b9tjuJvlK+jI+3
62tfP/7N4M3go9/jg3eq/pL/z4dzlf8ZMcXHsvmoNt0RMnAfm5/Lx/2lJbtW
EP3n8SF77e6ysaPJ/+dDeaKSvgHdpyvkY0zl0AzuOTa/iI/aWeKXoHxjMR85
05XCymPp/jAfp+1Q/+YZ208ZHzNu2fi6kT1RwcfuU4/eLCH7oJKPBoc10Xdt
KD7PxzjvG2bDrIn/pfQsjLu1jPRpHR+Y/3jp+e3E/3wcaTqm50j5qSY+PNz6
Ki2k+wTNfKznyg1MpPxrq5TfVm55o0T3n9r4uPPMITi8ge4z8iF61nqSR/ZE
Jx+T18WojqT3HLv44JX9XZeRQvY/H33Ssnn2zyn+K8CrjwfOelK9ZV8B1g++
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
5N9nS+B9PCIxkOyzXAl6HSscG0zxpTwJjuqVThljyfrzpftpdUp0FDN9WCjB
mvpdek70XlyR9PvP3QZZKVD+T4JZOxdGTN1B+l+C13r2unZ036tMgprn1XGr
Cd8VEmxLmPnrBt0XqZQgzK4W37vJ/pdg/5xZzuVU71sjgdFm/9sZlA+uk6Bv
9zK5Rb3Z+HoJnIf61G4nfd4kwYpwhVV7SN83S5Bl/2KGN/3eSat0v0FbxvZQ
/WmblH7PdM3OovsAHRKYKgtzr4Yx+DolCE7cKjvnX/xPis/usIo6U6Z/eyTg
5T37T53kqUw6Gs8cPKahyPr7puNX5uPZ/uT/yabj7OMxY1ePofrfdNQrJB8e
RvkAxXT4m2b45TlQ/V860jaoDjs1ivg/HY/26e8IovcuVdKxRmZBvR7V26um
Q9Kvvtic6kXU0rEyI0F/zmLy/9Nx4mxsz08Z0v/paJvT+9hG0uea6ahRX7Lm
BeV/tNKx4+ZzBz1Dsv/TwSk+Y1mpx9o66bjweafWbHrfDOlSf8aDY+lJ+b90
NCwacWYB/X6JXjrWrhr3QX4N6zdIh4Nf3qjLO4n/07G339NkNYp3maTD5Ned
Sk+q/zBNR9CdolFr6b0Y83ScTsaQH/T7Y5bpsJo85tkjqu+1lc4XDSmxpXpX
h3Qk8YX5tmRfOafjpMH3sxPofXC3dJhlrVls7MPO3ysdexoeVN+leKFvOrjb
Lh+9spb4Px3jXTVfvdlO+f90GMRIvSWq34pMR/bOhw/L6b2g2HQkG3jdWvya
+D8di8+caw2j96A46ej2XJK8eBuDl58Ogcgy/Uo85f/TMUPlU1c2+dcZ6cif
kteuSe+xZ6ajl1Zvo170PmG2lB5exY/d/6/+Lx1ozGn2pXxMXjoU9npaDd5K
+j8ddVsk3Y9nMfosTEd1oou3bH82vigd0xXGXiglf604Hc5x/Q2/UL1AiRQ/
OreGXyF/tiwdvAv+u9dTvUZFOgpTDTO00pl/VZmOmKXvxpr8u5+djmf5j6om
0ftoNemwvXq6Udud7mulo+tucD8feu+/Ph2lN+V39qd62KZ0nCraf6yY6rma
0yGn0KKywpD0fzp+tMXtjCN91JYOC2OLVz8p/tCRjrmOP/8zpHxmp5S+m7Nm
nZGQ/k9HVeHFQ2lWZP9L+WfmsPaGIqr/zcAK97ZSRaof7ZuB4GoZby16v1k2
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
xsZJnv9reL6oeYLjqYZJfwARGO5U
           "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxd1DFsM/9dx/ETioSHDB4yeMhwoAhZKEIGAhgI9IAABgKYEoqBAEebgoFA
TQnUQIBrSYsLAQwNYCCFGzJ4yOAhg4cMN2TwkMFIGTxkuCGDhwweMnjIgBA5
oXt5qV56f76/e57+++83ffpzn/zsNwRB8N/fGAT/+5//91t9ovyfQRSUfpWo
3Kv0LXoNb+MQfzPe4f1vodfp34p38bfhBu99O/076N+J9/B34e/mve+hN+nf
S/8+/P14H/8A/kH8CRyVneDgh+g4+GE6Dn4kKv31kh+hH3CPgx/lHgc/RsfB
j9MLF++36Dj4CXrh4v4ny05w8FPc4+CQ+0P6T3OPg5+hFy6+/7O8j4N22VHh
4j2csQ9+rtwjnOAMB5/k+zj5ZHmf0YOf5/s4wRkOjrgvXHwfZ+yDX+AeJzjD
wafK70efKvcEZzj4Rb5fuPjz4wwHHe5xgrPCxf0v8efHCc4KF79f5vs4KVzc
4+BX+H7h4h5nODjm+zgpXHwfB7/KPU4KF/f04Ne4L1z890fP6MGvlx3hBGc4
iMvvhzjCMU5wirPCH9/L6cFvlHuIIxzjpHDxfZzhnPvg03wfRzgu/PFLcMo+
o+f04DPlHn6m3CN6jBOc4gznODgpfy88KfcIx+wTnOIM5zj4bPn9EEc4xknh
4vs4wzn3wW/y/cLFf//0GCfsU5yxz+nBb5Ud4gjHOCn88UvpGc7ZB92yw8LF
9+kxTnCKM97LcfDbfB9HhYu/Pz2hp/SMntOD3+H7OMIxTgoX36dn9BwHv1t2
WLj4Pj2mJzhln+EcB6fl+/C03CN6TE9wijPucxz8Ht8vXHyfHuMEp9xn9BwH
v8/3Cxffp8c4wSn3GT2nB58rO8QRjnGC08IfvwznOOiV76s4xA0c4Xbhj19M
7+EED3HKexN6Rp/jnP0KB39QdrXwxy+kN3CE2zjGPd5P8BCn3E9whuc4570V
Pfh82dXPl/chvUGP6G16jHs4wUOc8v4EZ3iOc7zi/eAPy72KQ9zAEW4X/vjF
uMc+wUOc4gnvZfQ5zvGK++Cs7CoOcaNw8fent3GMezjhvSE9pU/oGX2Oc/Yr
evBHZVdxiBuFP34RvY1j3MMJHvJ+iic4435Oz+krHPxx2VUcFv74NegRbuMY
93gvoQ9xyn6CMzznPqev6MEXyq5+obwP6Q16RG/TY9zDCR7yXkqf0DM8xzle
4aBfdhWHuFH44xfR2zhm38MJ+yFO2U/oGZ6zz+krHPxJeV/FIW7gqHDx98cx
+x5O2A/pKX2CM/Zzeo5XOPjTsqs4LPzxa+AIt3HMez16goc45X6CMzzHOe+t
cPBnZVcLF39/3MARbuMY9/heQh/SUzxhn9HnOGe/wsF5eV89L/eQ3qBHuI1j
3MMJHvK9FE9whue8l9NX9ODPy67isPDHr4Ej9m16jHs4wUOc8v4EZ3iOc7zi
/eAvyq7isHDxv38c4Tb3Me7hBA95L6VP6Bme45z7FQ7+suxq4eKfP27gCLdx
jHs4wUOc4gl/3gzP2ed4hYOk7Aqu4hoOC3/86vQGvUmPcAu3ue/gGHe57+E+
TvAAD/GI76X0MX1Cn9Iz+ow+py9wjpd4hde8H3yx3CtfLPcqvUYP6XXcYN+k
R/QWvU3v0GPcxT3cxwnvD+hD+gin7Mf0CX1Kz/CM/Zy+oOd4yX6F1+yDL5Vd
+VJ5X8U19iG9jhvsm/SI3qK36R16TO/iHu7jhPcGeMh+hFM8xhM85f0Mz9jP
6Qt6Tl/iFfs1Pfircq/gKq4V/viFuI4b3DdxxL5Fb+MOjrnv4h77Pk7wgPsh
HrFP6WM8wVPuMzzDc7zgvZy+pK/wmn1wUXYFVwt//Go4xHXcwE3ej3CLfRt3
cMx9l96j93GCB9wP8QineIwnvD+lZ3jGfk5f0HP6Eq/Yr3Hw5fK+8uVyr+Ia
DnEdN3i/iSP2LXqb3sEx+y69h/vsEzzAQzzCKe+P6RM8ZZ/RZ/Q5XrDP6Uu8
Yr+mB18p98pXyr1Kr9FDep3ewE0ccd/CbfYdHOMu9z16n57gAR7iEe+leMx+
gqc4wzM8xwuc4yVe8edb04O/LruCq7iGQ1zHDdzEUeHi3396G3dwzH0X99j3
6Ql9QB/iEU65H9Mn9Ck9wzP2c7xgn9OXeIXXOBiU36sMyr1Kr9FDep3ewE0c
cd/CbdzhPsZd9j16n57gAR5yP6Kn9DGesJ/SMzxjP8cL9jl9iVfs1/Tgq+Ve
+Wq5V3ENh9zX6Q16E0e4hdu818Ex+y7u4T5O8AAP+d4Ip+zH9Al9Ss/oMzzH
C+5zvMQr7tc4+JvyvoKruIbDwh+/Om7gJvcRvYXb7Dv0mN6l93CffUIf0If0
ET2lj/EET3HGezM8xwuc896SvqKvcfC3ZVcKF//8cY19SK/jBm5yH+EW+zbu
sI/pXdxj38cJ+wF9iEfsUzxmP6FPccZ+Rp/TF/ScvqSv6Gt6cFl25bK8r9Jr
9BDX2Tdwk31Eb9HbuMM+xl3c475PT+gDPGQ/win7MX2Cp+wzPGM/py/oOX1J
X9HX9ODvyr2Cq7hWuPj/f1zHDdzkvYjewm32HRzjLvc9eh8n7Af0IR7hFI95
b0Kf0jP6DM/ZL3COl9yv8Jp98PdlV3C18MevRg/pdXoDN3HEfYvexh32Me7i
Hvd9eoIHeMj9CKd4zP2EPqVneIbn3C/oOV7iFfdrevAPZVcKF//8cY19iOu4
gZu8F+EWbuMO78X0Lu7hPk7wAA/53gin7Mf0CZ6yz+gz+hwv2Of0JX2F1+yD
YblvDMu9Qt/EVfZb9BreZh/Sd3Ad7+IG3uP9Jt5nH+ED9i36IW6zP8Id9sf0
mH6Cu+xP6T18hvv4HCf4Ag/wJR7y57uij+jX9BTf4DH3t3iC7/CU9+7pGf2B
PsOP7Of0J7xg/0zP8Qte4le84v03+pr+Tg/+sdw3cKXwx34TV/EW9zW8zT6k
79DreBc3uN/DTbzPfUQ/oLfoh7jN/gh38DGOee8Ed/Ep9z36Gb2Pz9kn9Av6
gH5JH9Kv6CN8zT7FN3iMb/GE9+/wlP09zvADnvHeI31Of8IL/Ixz/IKX+JXv
r/Ab+zX9HQf/VN5v4ArexFW8hWt4u3Dx7z99h16n79IbeI99E++zj/AB+xY+
ZN/GR7iDj3HM+ye4y/4U9/AZ7vPeOT2hX+AB+0s8xFfcj+jXOMU3eIxveX+C
7/AU3+OM9x/wDD/iOX7CC773TM/xC15y/4pX+I37NX7HwdfK9xtfK/cKfRNX
2W/hGt7mPsQ77Ov0Xdxgv0dv0vdxxP4At9gf4jY+wh3eO8YxPuG+Sz+l9+hn
uM/+nJ7gCzzg/hIP8RX3I3yNU3yDx/iW703od/Qp/R5n7B/oM/zIfo6f2C/o
z/Sc/kJf0l/xiv0bXrN/x8FV2RuFP34VvMm+irdwDW/zXkjfwXX2u/QGfQ83
8T6OeO8At/Ah9236Eb2Dj3HM/Qm9Sz/FPXzGfZ9+jhN8gQe8d4mH7K/wiP01
PcU37Mf0Wzxhf4en7O9xhh+4n9Ef6XP6E31Bf6bn9Bf6kv6KV+zf8Jr9Ow7+
uewNXCn88dvEVfZb9Bp9mx7Sd3Cd/S5usN+jN+n7OGJ/QG/hQ/ZtfMS+g49x
zP0JvYtPcY/7M3qffk5P6Bf0Af0SD/EV9yP6NT2l3+Ax+1s8YX+Hp/ie+4z+
gGfsH+lz/IQX+Jn3cvyCl9y/0lf0N7zG7zj4l/J7G7jyL+X9Jq6y36LX8Db7
kL5Dr9N3cQPv4SbexxE+4Pst+iFu4yPcwcc45nsnuItPcY/3znAfn3Of0C/w
AF/iIb7CI753TU/pN3iMb7mf4Dv2U3yPM/yAZ7z/iOf4ifsF/Zme01/oS/yK
V/gNr3n/HQf/WvZG4eLff/omrrLfotfo2/QQ7+A63sUNvIebeB9H/PkOcAsf
ct/GR7iDj3kvxie4y/0pvUc/w3325zhhf4EH7C/xEF/hEb7m/RTfsB/Tb/EE
33E/xffsM/yAZ/iR9+b0J7zAzzjHL7y/pL/SV/gNr7l/pwejct8YlXuFvomr
eIv7Gn2bHuId9nX6Lm7gPdzkvX0c4QPuW/RD3GZ/RO/Qj3HM/gR32Z/Se/Qz
3MfnOMEXeIAv+f4QX+ER99c4xTfcj+m3eML+Dk/xPc547wHP8COe894TfUF/
xjn7F7xk/4pX7N/wmv07Dv6t7A1cKfzx3iau4i1cw9u8H+IdXMe7uMH7e/Qm
3mcf4QPc4v6Q3sZHuMP9MY7Zn+AuPuW+h89wn/tznLC/wAP2l3jI/oo+ol/T
U/oNHuNbPOG9O/qUfk/P6A/0Gf2RPqc/4QV+5j7HL+yX+BWv8Bte8/47Dv69
7A1cKVz8+4+r7LfoNfo2DvEOruNd3m/Q93AT7+MIH/B+i36I2/iI+w79mB7j
E9zFp7zXw2e4j89xgi/43oB+iYf4ivsRvsYp9zd4jG/xBN/x/hTf4ww/4Bnv
P9Ln+In9Aj+zz/EL+yX9Fa/wG17jdxz8R9kbuII3C3/8qngL1/A274V4h30d
77Jv4D32Tfo+jtgf4Bb7Q3qbfoQ77I/pMf2E3sWn7Hv4DPfxOU54/4I+oF/S
h/iK/Yh+jVN8g8e8d4sn7O/oU/o9zvAD9zP6I31Of8IL/Mx9Tn/BS/av9BV+
w2vu33FwXd5vXJd7BW+yr+ItXMPbOMQ7fK+Od3GD+z3cxPs4wge836If0tv0
I9zBx9zH9BPcZX+Ke/iM+z4+xwm+wAPev6QP8RX7Ef0ap/iG+zG+ZT+h39Gn
+J59hh/wDD/y3hw/4QX3z/Qcv+Al9694xf6NvsbvOPh6+X7j6+VewZvsq3iL
fY2+jUO8w32dvosbeI/7Jn2fHtEP6C18yL5NP8Id9sf0GJ/gLven9B79DPfZ
n9MT+gV9gC/xEF/hEe9f01P6DX1Mv6VP8B2e4nuc4Qc8w4/8eeb4if0CP7PP
6S94iV+5X+E3vMbvvBf8Z9kbhYt///Em+yp9C9fwNg55b4dex7u4wf0ebrLf
p0f0A3oLH7Jv04/oHfoxjtmf0Lv0U3oPn+E+9+f0BF+wH+BL9kP6FR6xv6an
9Bv6mH6LJ/gOT3nvHmfsH/AMP+I57z3RF/Rneo5f2C/pr3iF3/Aav+Pgv8re
wBW8Wfjjz1elb+Ea3sYh7+3gOt7FDbyHm3if70f0g//v/wPE70xd
           
           "]]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, AxesOrigin -> {1.495, 0.33763087538619274`}, 
      PlotRange -> {{1, 100}, {0.3519106139279746, 0.6375053847636128}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {1.495, 0.33763087538619274`}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Output", 18, 
          GrayLevel[0]], None}, {
         Style["Timestep", 18, 
          GrayLevel[0]], None}}, FrameStyle -> Directive[
        Thickness[0.004], 
        GrayLevel[0]], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> 18, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> Style["Training set", 
        GrayLevel[0], 18], 
      PlotRange -> {{1, 100}, {0.3519106139279746, 0.6375053847636128}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {
         Style["Data", 16, 
          GrayLevel[0]]}, LegendMarkers -> {{False, Automatic}}, 
        Joined -> {False}, LabelStyle -> {}, LegendLayout -> "Column"]]], {
     0.45, 0.85}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7159811152912483`*^9, 3.715981130855979*^9}, 
   3.715983356558734*^9, 3.7159846014340076`*^9, 3.71623689855518*^9, 
   3.7162842922773037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Predicted", " ", "and", " ", "actual", " ", "results", " ", "on", " ", 
    "test", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"trueResults", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "actualTrainTest", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"predictedResults", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"netTrainTest", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Compare", " ", "first", " ", "ten", " ", "points", " ", "for", " ", 
     "predicted", " ", "and", " ", "actual", " ", "test", " ", "data"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"trueResults", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "10"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"predictedResults", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "10"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.716237520214684*^9, 3.716237547606913*^9}, {
  3.71623766918624*^9, 3.7162376726087646`*^9}, {3.716237832717681*^9, 
  3.7162380102549257`*^9}, {3.716238116458033*^9, 3.716238125765623*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.716237885981176*^9, 3.716237938357017*^9}, 
   3.716238010744677*^9, 3.716238126216292*^9, 3.7162843031628923`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.4389235288791103`", ",", "0.4496736618647641`", ",", 
   "0.48206938452177106`", ",", "0.4850280394939416`", ",", 
   "0.5123258995467916`", ",", "0.5274062873375251`", ",", 
   "0.48724774213768507`", ",", "0.5583592661255545`", ",", 
   "0.505795501015578`", ",", "0.4923395301341642`"}], "}"}]], "Output",
 CellChangeTimes->{{3.716237885981176*^9, 3.716237938357017*^9}, 
   3.716238010744677*^9, 3.716238126216292*^9, 3.716284303164873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "log", " ", "loss", " ", "function"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"logloss", "[", 
     RowBox[{"binary_", ",", "prediction_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"binary", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"Log", "[", 
           RowBox[{"prediction", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"binary", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", 
            RowBox[{"prediction", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "binary"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Calculate", " ", "the", " ", "log", " ", "loss", " ", "for", " ", 
      "each", " ", "time", " ", "step"}], ",", " ", 
     RowBox[{"then", " ", "find", " ", "the", " ", "mean"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"logloss", "=", 
    RowBox[{"Mean", "@", 
     RowBox[{"logloss", "[", 
      RowBox[{"trueResults", ",", "predictedResults"}], 
      "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.716237397011203*^9, 3.716237696336688*^9}, {
  3.716237757810733*^9, 3.7162377999173317`*^9}, {3.7162380336823397`*^9, 
  3.716238091101624*^9}, {3.716238577321343*^9, 3.71623857935426*^9}}],

Cell[BoxData["0.6880434712170317`"], "Output",
 CellChangeTimes->{3.716238095182703*^9, 3.716238128422556*^9, 
  3.716238582466275*^9, 3.7162843086565332`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"loglossRolling", "[", 
   RowBox[{"binary_", ",", "prediction_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"binary", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"Log", "[", 
           RowBox[{"prediction", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"binary", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", 
            RowBox[{"prediction", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "@", "binary"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{"Mean", "/@", 
    RowBox[{"loglossRolling", "[", 
     RowBox[{"trueResults", ",", "predictedResults"}], "]"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rollingLogLoss", "=", 
   RowBox[{"Mean", "/@", 
    RowBox[{"loglossRolling", "[", 
     RowBox[{"trueResults", ",", "predictedResults"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.716238311543786*^9, 3.716238403774293*^9}, {
   3.716238439936625*^9, 3.716238442272868*^9}, 3.716238519588657*^9, {
   3.716284343187735*^9, 3.7162844078615026`*^9}, {3.71628814344639*^9, 
   3.716288148424604*^9}}],

Cell[BoxData["11.748349`"], "Output",
 CellChangeTimes->{3.716284421809552*^9}],

Cell[BoxData["1471.783423`"], "Output",
 CellChangeTimes->{3.716288129244965*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rollingLogLoss", ",", 
     RowBox[{"Table", "[", 
      RowBox[{"logloss", ",", "2000"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0.683", ",", "0.72"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Logloss convergence\>\"", ",", "\"\<Logloss\>\""}], "}"}]}],
    ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<datapoint\>\"", ",", "\"\<logloss\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71623845297173*^9, 3.716238532653039*^9}, {
  3.716238588469447*^9, 3.7162387163005247`*^9}, {3.716238882513126*^9, 
  3.716238926852811*^9}, {3.7162390119790363`*^9, 3.716239012547126*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1.9145567372053391`, 0.72}, {2., 0.7103369548135434}, {3., 
         0.7167803778762116}, {4., 0.7034959897621391}, {5., 
         0.6965556585866829}, {6., 0.6870937294473626}, {7., 
         0.691649278739739}, {7.6354122097756445`, 0.683}}], 
        LineBox[{{10.196367965349337`, 0.683}, {11., 0.7018815216167608}, {
         12., 0.7060559394159655}, {13., 0.7126813400435392}, {14., 
         0.7070554605456599}, {15., 0.7136633108324314}, {16., 
         0.7109730128800902}, {17., 0.7079014824341483}, {18., 
         0.7132350683106704}, {18.854433973629018`, 0.72}}], 
        LineBox[{{19.295202288037636`, 0.72}, {20., 0.7172483721244819}, {
         20.262658514249257`, 0.72}}], 
        LineBox[{{22.901711737283815`, 0.72}, {23., 0.7194535360830695}, {
         23.185956567646645`, 0.72}}], 
        LineBox[CompressedData["
1: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
2v+xh9M3sfO/bOye9vXxRcoPDWqu6Xv1MHFjNq5GDr07gZ3/ZSNxRPLresqP
37MxpNeazGB2/pcN/Tu9Ohqx8z91fE60DQkn1hAjqfer8cuJO4oxKHOMmO1f
tMSYz39k8pHlfzHcjbsuZfXrimG0fvvBWcS9xai69W2gJrG+GJPsBxy0JjYQ
w+SFtLWV2FCM7647+j8m+0Zi6Dz6+D6E2FgM3ui7fzsSm4hREj582whiUzHG
ONwLnsbyvxjHu/rWfWX5X4yRhk5lbP9nIca89/JDbD8NMTRrfvuw+qzEuNHF
/MUd9j1SjJQx/ptGEduK0WajeKVk36fEOHNeZ6IWsYMYbwOGe19i3yvFCHnU
6YEJy/9iLLYc2aM/2/+LcWHKqzMeVL+7GFtTnQ4+I30vdX95D24VE/uo+9ve
r1aP2FeMdtrO6SLiADF8Bi5yD6P6QtT6ZfxdNsQRYsx+bcW3oPJc9fheK9xd
RfvHeDEm3yszsSJOFqNn6ZFjV4nTxbge6T5sOzFPDPGwuXbPab8pEmPvLO9f
H9j3UjFUPSRTtlF5pRjXwnkL77PzfzGyh7k3/GLn/2Ikf9t39go7/xdjfLtv
C5j9g2Jsv24l30JcJMaOubk3ComLxfixSyz/3/m/GK1rLr5dSlyqbt+JN9X1
xCoxyndunzGaxqNMjNum1xOXEJeL0eg4Ym934goxggT9zlWx/b8YGeXjPrHv
mdVirLu4LPIR1V8rxn1V+jL2++WJGMHc2UPZ9406MT4cc9r2jcarXgy7XQE6
NfQ9o0GMHrM/SVuJG8WYm9l+aScq36SO368j9seR/LsY0WNizpoTN4vxL9rd
tzdxqxj7dIbM6E6sIcHmGftv5dH3544S6FeMmcG+V2tJsGP8gTElxDoStGzI
zTnK7gdJMGVm+8Rm4t4S3DDY0C2cvReRgLfTquAlyQ0kCN5nxqsgNpTg8RaL
jFnERhIUDAvb/YK9J5Fgud2EswbEJhLMyHPeMZ/dL5JgdvTBi1+Jp0jww3Pi
KF1230it3+1S5wvEFhKMOLR23AJ2/0iCPruNPoTR93grdXtdd3Z6yu6jSTA8
ddTtSmJbCeoku0/1ZPcTJei4NXShP7GDBMXKg0d2svuq6vZt+GJSQ+wqgfWl
wuYt7P6KBDFWDnuOEbtLsLEb/x57f+AlwUyJs4Ldj/WRIHVrlmAVu98kwdxX
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
/q/WOK3jFZpSHX1FTv0fR+fvvw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
uksz+Q==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0.683185}, 
     PlotRange -> {{0., 2001.}, {0.683, 0.72}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.683185}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"logloss\"", TraditionalForm], None}, {
        FormBox["\"datapoint\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 2001.}, {0.683, 0.72}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Logloss convergence\"", "\"Logloss\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.716238708865685*^9, 3.716238717305572*^9}, {
   3.7162389048107557`*^9, 3.716238927856883*^9}, 3.716239013160261*^9, 
   3.716284323129488*^9, 3.716288150926581*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rollingLogLossSD", "=", 
   RowBox[{"StandardDeviation", "/@", 
    RowBox[{
     RowBox[{"loglossRolling", "[", 
      RowBox[{"trueResults", ",", "predictedResults"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7162387428399887`*^9, 3.716238762143358*^9}, {
  3.716239029574967*^9, 3.716239032108227*^9}, {3.716239087649818*^9, 
  3.716239184048877*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"rollingLogLossSD", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "/", 
      RowBox[{"Sqrt", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "@", "rollingLogLossSD"}], "-", "1"}]}], "}"}]}], 
    "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<sd/Sqrt[i]\>\"", "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<datapoint\>\"", ",", "\"\<accuracy\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716238806365554*^9, 3.71623887542284*^9}, {
  3.716238941323175*^9, 3.716239008200622*^9}, {3.716239058923767*^9, 
  3.716239064600556*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
sW9+gdN2f94/GNp/Sj539+D9gyGsvhHjspH3D8ZSm6MTrNfw/sG4kOVcnLGY
9w/GFf/+63xm8/7ByB1XvnraDN4/GCppR1VrDXn/YCR4vL/0T5f3D8bnectL
/vXj/YOxach6y//Uef8QiJT/q7CyK+8fgiCv6oqHfL1WCH7+un1vTU/ePwT9
yl07Le7A+yvPL2hvavvLj/YPQf+itC5Z38j2IWiu1viW/5vsE4KRhjM+XflB
FoSgdenERyfekUUhuNh0SHb7BbkwBFprh7VN/04uCcGYSUMDkv+Sy0Kwcv+d
sok8ryoE+i3W16vfkutCoGG5bOW6Z+TGEDzsdfZq1R2ySii0l8SG6F4ja4Ti
g9eOXfPPkrVC4b16NkIPkw1DsdS+wejiXjJC0THK8ohsK+8fCv8OrW7yXN4/
FPulzu9MJbx/KFQzDhe/TOL9QzF6SdHw0xG8v/J+odXPK6G8fyg2ut7LDGeX
hCJ64pnfM7x4/1A8rLE698id9w9Ff92h3yp8ef9Q4PdPk0w33j8U1ov+/Fxs
z/uHQZrwurTfSt4/DHq/W8+cs+D9w/A5dPg0z4W8fxg+Lfj6NBe8fxhSMmfX
hE7k/cMQNLHFR8K2D0NrxFi1mlG8fxjU+2R1dNfh/cOQqPOxbI027x+G5M2r
rOv5vDAM2/Y/Nek6kPcPQ5u1GgNXavL+YdBZdGn5wM68fxjOWLebk6/G+yvn
F7ye9eyvL+0fBp8doapHf5JVwiE1OTnl0TeyRjiuC72fqLaQtcJxu2nmoBX/
yIbh6CBbc8f0BxnhUHshDrjaQLYMh1lznEkq2z4czzIXD5lQR/YJxzun/37X
3yMLwnEoI+PriPtkUTiKZvxdu/UmuTAcLQec2yRdJpeEI2ruvI3VZeSycDzQ
3W737hS5KhxrRjkm3zlHrgtHwqz1zz+e4P3Dsboge2LQbd4/AvOCD94yu8r7
R2BO1KCA3Wd5/whofXhg13yc949AU1aZ698S3j8CQSf+qI4o5v0jMONE8Mfb
m3n/CHTt0iP0lZT3j8ABw+czu+/j/SPwzla3x7TtvH8EzrvYWv3O5f0j0DvE
9tVQMe8fAZ+mhy+dMnn/CEx/8vZJUQLvH4FJLqM2tI3g/SNgb/pTvCGQ94/A
v08jRt7y4/0jUd9/+XEjd94/Evsk7jO7hvH+kdjSpPvHlK83jETfX+K2kd68
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
/FOQ9sZ6vW8Q558C7Wn/GVR5cf4piFhybVu9E+efguoaUf+D6zn/FBjXFZk3
8PcRKff1UvX+u5TzT4FdXXf94kWcv/J5b0Ufr83n/FNwKni3YdRszj8FFzxf
CA5M4fxTUGwxqVPvCZx/CmyEnx+fGcX5p6AwYMH2cl3OPwUGz7v/jNXm/FOw
dmWke/hAzj8Fd16e8pqnyfmn4HdP61FPNDj/FAhMN10a143zV37foe+8Y9U5
/1RYFo/e3NKO80/Fd083b/M/rpR/KhJaTm4r/EHulwpvr6yhzz+RtVJR+2Tv
5+K3ZP1UaISe65RaRzZMRV3Iv8Vfasgmqbj4McDfr5qMVOy4+P7Fxetks1T0
7uO6dv4lsqVynrcw8MJpsk0q5tyx1PpxhmyfigKHElHUMbJLKlqsfp+fwtf7
pOKkU9Q1Lz4PScVRdRdP7QNkQSp+/CiqO7ubLEyFVtFNFdv9ZFEqMs8t15Xv
IstTcTC38f337eTCVIQ39974cQu5OBWTQp94qyvIJan41Wa4y508cmkq+n92
zdLNJpelQq/+fWNdOrk8Fee1Er/4JZGrUpFsuG6eWgy5JhV3Tmkb9w4j16Vi
WFOafF4guT4V4xZdEUmSyY2pyLC+nbkjjtycCv0CV4lWIlklDYNqfP76C8hq
aeg09d8c03DOPw1ak963Tud5/dKwK/uk3uBIzj8NpuvOpB8L4vzTsKqXyvl7
3px/GkqW9S3e5sL5p8GjwtY3eAPnn4Y5GmP6i9Zw/mlwbrPiZLtVnH8azov/
e1a7lPNPw+encwdYLOb80/DiXx+7bfM5/zRs04x0+DWH80/DlkkPT/nM5PyV
83ou1HaczPmnodt1yZNHRpx/Gv4OKFz/wpDzT4POR+crA0dx/mnI7Pj+avJo
zj8Nc509dlwYwfmn4XTBvYF9DDj/NJwa6LtQbxjnn4ajl0wMtupx/mmYp9lr
ZuMQzj8NR55Jbtdocf5pmLn5YfSz/px/GtRXfYjJGcr5p2Fl8L53SYM4/zT0
jAlYdoSvb0zD4p+pE3/24fzTsO/9k/kmvTj/dHzpuXmPaQ/OPx1Pu7Y//J2t
kY6b+c66A/n5/dIx3X+amt1gzj8dy4cdmDmA30c/HTfeq1xdM4DzT0d9+ckw
/b6cfzp8rveSjeT3QTqK33/oYabB+adDRXX8wqGdOf90aN56OiKwHeefjmd2
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
glv/RRZK2XoSqA5zOm6eQdaXILpobtCSVLKBBGGDzMblCcmGEmzN7PJLLYFs
LIE4XFE/NIZsIsH6gl6jLkeSp0vg/VDn79JQMiSob/u8/lEA2VSCEVO3vNAM
JJtJMOmbmfM1H7KFBNvX/B75y4NsKcENt4IRye7kFRIsupBrNNKFbCPBYMVg
3ZubyLYSXNJxcFhtT7aX4GLw4fn2G8gOEvQd7OVeZ0d2kaDS96JNp7VkDwmO
1TgHufD1PhJ0NtKYuJyvD5DAyzRcYbCGHCJBlMaJuy225AgJuql/P6SwIQsk
SG0wHWa6ghyvvN/ByubNUrJQAqPTs1tsrbj/Elxt6eDVjS1S5jW8YN6vJdx/
CTpWL/h3aBH3X4Lut9/095rP/ZdglPBJhtsc7r8E6t0tbXVncv8leH2219+w
6dx/CQRHHY4XmHD/JXhVNXjGb2Puv/L30Gvey6lG3H8JDPRdXE6xSyV4/Dk3
6+B47r/y99AQ96t6HPdfgn9WF3adGsP9l8Bis3pTxkjuv3LeJGmjznDuvwQd
vFaLnmpz/yWY6TJGYTGU+y/B+/ZP+vUbyP1X9umtxl2fAdx/CQb1aY716sP9
lyBx9MyLK/n6VxKM8RlRNKAv91+C0pS2Fr01uf8SFOvNNx2iwf2X4KXWtlGy
Htx/CY57rDjmy+/XrMynISl28mDuvwQ6EyPHLe7P/ZdC13rNdmt+n3ZS9DfX
9f3H89Sk+DLwjN/eXtx/KYJMX8Xl8HwNKZoHLxXuVuf+S9HtomXgcTXuvxTS
LbVLhe24/1J8SvBunaXK/ZfCX3XpJKO/DtR/Kf7YfSnvzdaXYrjtnAcaf8gG
UpRfPPm9uoVsKEWT/526uJ9kYynsXm+rvPyNbCJFdu3e0naN5OlSrG/0dF3z
gQzl9ZbWn+vqyaZS9JppPnDAa7KZFB9vXK5Y/YpsIUXcuxU94urIllJsqLXo
4VdLXiFFZ/X8oQK2jRTVr5PHP60h20pxeapX+2C2vRR/b9VsO3uf7CDFGm3R
4G1sFymMQn8URd4je0jxI3r9+ad3yT5SjFob4xB/hxwghVWM4wurKnKIFEtG
PItZcoMcIYXw4oSnbhVkgRSr2mYI7C6T46VonG9m13qeLJTCvvCo2bqz5DQp
tm7Ofrr6JFkkRYZ+xNWtZ8hSKT5fjEiqOEGWS7HO5EiqSSk5X4q7tStgfoRc
KMXLr/GiQcfIRVJ4PNnVPPAQuViKCz9HO3Q9QN4rxey+hnt09pBLpFg7qadR
0F7yESlWpEwYHldMLpUi/e/21q37yKelGLYj5p01X18mRaD0mfsxvv6SFCZx
nTf+LCKXS+Hk774jYiu5Uopcb9Gv7QXkKuX5xKpGLQX5rhTJi98MXpJDrlF+
L6vxmyuyyLVSHNv0OTgyk1wnxUTX7FvnUsmvpCjNCI27n0Sul6IqKuJyeiL5
gxRuDoVdtBLIjVKoDC/MEcWQvyt/34KMF3WR5GYpjF94r7MOI7dKsSNk+o4O
IWSVbEzpOHX/+wByu2wsr+nYB75ktWxsGxNm5uhFVs+GjWdMkKonWSMbL7en
J05xI2tmY8birof7OpP7ZePTWofqt5vIg7KxNFYmPb6BrJUN/YshMafXcf+z
MaRAs7h8Pfc/G22mm90YZcv9z8aHNlM6WNtw/7Ph92XR0KgV3P9svHkUvbJp
Gfdfeb9q6gntJdz/bAxtnzfNyYL7nw3VnTbFzmxT5fy4OZ9/LuT+Z2OZzCA8
az73Pxv3d/9TWWvK/c+Gp1o/1wmzuf/Z6HK4oWv4DO5/Ni506C6I53PbbMgd
N0jrZnH/s2Ed0GqhO5P7n42UZ88nJ0zn/mejYHLbBbp8vUc2kn4O+rqXn++T
jcEp+7aMmMb9z8Ysp3Ubtphw/7OxIfZ04Sdj7n82xL3zphuO5/5nQyBaULaA
z+Oz0SpRnz1qIvc/G5oZTRmzJ3P/s1EoM390zoj7n41496mS9obc/2yo7bbo
csCA+5+N6psxUdNHcv+z0bTP5/CG4dz/bGzXrl63X5f7r8zjp9S0Qof7n43g
+RWDU4Zy/5X5d1ZZ83wg9z8bpzKq9kzpx/3PRv0b36eXNbn/2UioGJSs14P7
n41x/TxnWfbh/mdjdDuDjjt6cv+z0Wdh3tHmbtz/bKwY8HyLjTr3PxvdW3cV
Gnbi/it/D6qfrPLac/+zcWhO59EWbbn/2Xh4uVI+iF2bDeeLg0NtVLn/2XgX
qVjq3Yb7n41Vez8oqv5sov5nI0yz04kzv8kfsjE2WvChqJncmI3Det8eD/xJ
/q78fnP3mW1sIjcrv3f47y3R38it2Zg8dN/ATo1klRz06xvuaMRul4PXoreB
oR/JajlQWfFotsl7snoOqhdUyD+9JWvkwCvIVVLwiqyZg7b62/NdnpP75eCe
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
sRBJT3XtpsBgcqnZVLaHgsUT7WpL1f4fe7mFaQ==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 1999.}, {0, 0.00892700709230225}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"accuracy\"", TraditionalForm], None}, {
        FormBox["\"datapoint\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1999.}, {0, 0.00892700709230225}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"sd/Sqrt[i]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.716238858514917*^9, 3.716238876147197*^9}, {
   3.716238969100453*^9, 3.716239008957904*^9}, {3.716239049334676*^9, 
   3.716239065062043*^9}, {3.7162391806301928`*^9, 3.716239198489957*^9}, 
   3.71628816504113*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"polar", "[", "f_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"f", ">", "0.5"}], ",", "1", ",", "0"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polar2", "[", "f_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ">", 
       RowBox[{"Mean", "[", "f", "]"}]}], ",", "1", ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", "f"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polarisedOutputTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"polar", "/@", 
      RowBox[{"netTrainOutputTest", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "net", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polarisedOutputTest2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"polar2", "@", 
      RowBox[{"netTrainOutputTest", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "net", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.715981836171653*^9, 3.7159818984297113`*^9}, {
   3.715982369705144*^9, 3.71598237391185*^9}, 3.7159824463783827`*^9, {
   3.715983367131648*^9, 3.7159833730035553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tallys", "=", 
  RowBox[{"Tally", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"trainOutputTest", "-", 
      RowBox[{"polarisedOutputTest", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "tallys", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/", 
    RowBox[{"Total", "@", 
     RowBox[{
      RowBox[{"Transpose", "[", "tallys", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "//", "N"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7159847535846243`*^9, 3.715984753711816*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "438"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1087"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "476"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7159846484403467`*^9, 3.71598475450397*^9}],

Cell[BoxData[
 RowBox[{"-", "0.610225447462524`"}]], "Output",
 CellChangeTimes->{3.7159846484403467`*^9, 3.7159847545342083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Correlation", "[", 
  RowBox[{"trainOutputTest", ",", 
   RowBox[{"polarisedOutputTest", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"tallys", "=", 
  RowBox[{"Tally", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"trainOutputTest", "-", 
      RowBox[{"polarisedOutputTest", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "tallys", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/", 
    RowBox[{"Total", "@", 
     RowBox[{
      RowBox[{"Transpose", "[", "tallys", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "//", "N"}], "]"}]}], "Input",
 CellChangeTimes->{{3.715983523650021*^9, 3.715983615434779*^9}, {
  3.715983669438303*^9, 3.715983716693548*^9}, {3.71598378881459*^9, 
  3.715983816640644*^9}, {3.715983856341406*^9, 3.7159838934642467`*^9}, {
  3.715983959044547*^9, 3.7159839951836567`*^9}, {3.715984638704694*^9, 
  3.71598464101334*^9}}],

Cell[BoxData[
 RowBox[{"37", " ", 
  SqrtBox[
   FractionBox["5", "553007"]]}]], "Output",
 CellChangeTimes->{{3.715983524594615*^9, 3.71598361574185*^9}, {
  3.7159836705754433`*^9, 3.715983717073441*^9}, {3.7159837893339653`*^9, 
  3.715983817114853*^9}, {3.715983858619566*^9, 3.715983894185911*^9}, {
  3.715983963939602*^9, 3.715983995609558*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "75"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "104"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.715983524594615*^9, 3.71598361574185*^9}, {
  3.7159836705754433`*^9, 3.715983717073441*^9}, {3.7159837893339653`*^9, 
  3.715983817114853*^9}, {3.715983858619566*^9, 3.715983894185911*^9}, {
  3.715983963939602*^9, 3.715983995630739*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.5912840454342897`"}]], "Output",
 CellChangeTimes->{{3.715983524594615*^9, 3.71598361574185*^9}, {
  3.7159836705754433`*^9, 3.715983717073441*^9}, {3.7159837893339653`*^9, 
  3.715983817114853*^9}, {3.715983858619566*^9, 3.715983894185911*^9}, {
  3.715983963939602*^9, 3.715983995658556*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "0.55", "]"}]], "Input",
 CellChangeTimes->{{3.71598400507622*^9, 3.715984055924966*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.5978370007556204`"}]], "Output",
 CellChangeTimes->{{3.715984009769372*^9, 3.7159840561731663`*^9}}]
}, Open  ]],

Cell[BoxData["0.08"], "Input",
 CellChangeTimes->{{3.716230896674549*^9, 3.716230897414255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Log", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.04", "+", "1"}], ")"}], "/", "2"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.71623090243489*^9, 3.716230960224208*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.6539264674066639`"}]], "Output",
 CellChangeTimes->{{3.71623090280221*^9, 3.716230960800529*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "0.94", "]"}]], "Input",
 CellChangeTimes->{{3.716231762794548*^9, 3.716231766048752*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.06187540371808753`"}]], "Output",
 CellChangeTimes->{3.716231766489694*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.086810", "+", "1"}], ")"}], "/", "2"}], ")"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.086810", "+", "1"}], ")"}], "/", "2"}], ")"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Log", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.086810", "+", "1"}], ")"}], "/", "2"}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.716230758151628*^9, 3.716230793806027*^9}, {
  3.716230860577997*^9, 3.716230860856638*^9}}],

Cell[BoxData["0.543405`"], "Output",
 CellChangeTimes->{{3.716230764119692*^9, 3.716230794193966*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.6099003807072307`"}]], "Output",
 CellChangeTimes->{{3.716230764119692*^9, 3.716230794231083*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"methods", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Correlation", "[", 
         RowBox[{"trainOutputTest", ",", 
          RowBox[{"polarisedOutputTest", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "//", "N"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", "N"}], "//", 
  "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"methods", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Correlation", "[", 
         RowBox[{"trainOutputTest", ",", 
          RowBox[{"polarisedOutputTest2", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "//", "N"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", "N"}], "//", 
  "TableForm"}]}], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.08681017697086948`"},
    {"\<\"GaussianProcess\"\>", 
     RowBox[{"-", "0.003917372619831302`"}]},
    {"\<\"NearestNeighbors\"\>", "0.030807648601227918`"},
    {"\<\"NeuralNetwork\"\>", "0.08117354187018445`"},
    {"\<\"RandomForest\"\>", "0.04237745361344231`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.715984684911236*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.08869479395271279`"},
    {"\<\"GaussianProcess\"\>", 
     RowBox[{"-", "0.039719011986410584`"}]},
    {"\<\"NearestNeighbors\"\>", "0.030073057475303984`"},
    {"\<\"NeuralNetwork\"\>", "0.08132738376534743`"},
    {"\<\"RandomForest\"\>", "0.03833064893230114`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.715984684972953*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"methods", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Correlation", "[", 
         RowBox[{"trainOutputTest", ",", 
          RowBox[{"polarisedOutputTest", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "//", "N"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", "N"}], "//", 
  "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"methods", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Correlation", "[", 
         RowBox[{"trainOutputTest", ",", 
          RowBox[{"polarisedOutputTest2", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "//", "N"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", "N"}], "//", 
  "TableForm"}]}], "Input",
 CellChangeTimes->{{3.7159819085942574`*^9, 3.715981908871551*^9}, {
  3.7159820785964327`*^9, 3.71598208879368*^9}, {3.71598248046658*^9, 
  3.7159824975486794`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.1112554800286093`"},
    {"\<\"GaussianProcess\"\>", 
     RowBox[{"-", "0.05131161030142188`"}]},
    {"\<\"NearestNeighbors\"\>", "0.03462896483692776`"},
    {"\<\"NeuralNetwork\"\>", "0.03152873942372439`"},
    {"\<\"RandomForest\"\>", "0.03916969330104923`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.715981909425085*^9, {3.715982079971846*^9, 3.715982089510048*^9}, {
   3.71598247590767*^9, 3.715982498193625*^9}, 3.715983375489744*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.1112554800286093`"},
    {"\<\"GaussianProcess\"\>", 
     RowBox[{"-", "0.005740831939857726`"}]},
    {"\<\"NearestNeighbors\"\>", "0.07194018831078547`"},
    {"\<\"NeuralNetwork\"\>", "0.039465626361499924`"},
    {"\<\"RandomForest\"\>", "0.04043115720492269`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.715981909425085*^9, {3.715982079971846*^9, 3.715982089510048*^9}, {
   3.71598247590767*^9, 3.715982498193625*^9}, 3.715983375515321*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"trainOutputTest", ",", 
   RowBox[{"polarisedOutputTest", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7159820619265537`*^9, 3.715982073353921*^9}, {
  3.715982117154091*^9, 3.715982126383934*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.715982062321045*^9, 3.7159820738314657`*^9}, {
  3.715982117626107*^9, 3.715982126812751*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"netTrainOutputTest", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polarisedOutputTest", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.7159819931351423`*^9, 3.7159820125301857`*^9}}],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{
  3.715981930189334*^9, {3.7159819951920223`*^9, 3.71598201274933*^9}}],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{
  3.715981930189334*^9, {3.7159819951920223`*^9, 3.7159820127650337`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"methods", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Correlation", "[", 
       RowBox[{"trainOutputTest", ",", 
        RowBox[{"netTrainOutputTest", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.023758203908790663`"},
    {"\<\"GaussianProcess\"\>", 
     RowBox[{"-", "0.06567374155871131`"}]},
    {"\<\"NearestNeighbors\"\>", 
     RowBox[{"-", "0.15609659293272274`"}]},
    {"\<\"NeuralNetwork\"\>", 
     RowBox[{"-", "0.041495485030438935`"}]},
    {"\<\"RandomForest\"\>", 
     RowBox[{"-", "0.06635167422439064`"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7159816831622143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"methods", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Correlation", "[", 
       RowBox[{"trainOutputTest", ",", 
        RowBox[{"netTrainOutputTest", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.7159811706310883`*^9, 3.715981173341447*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.023758203908790663`"},
    {"\<\"GaussianProcess\"\>", 
     RowBox[{"-", "0.06567374155871131`"}]},
    {"\<\"NearestNeighbors\"\>", 
     RowBox[{"-", "0.15609659293272274`"}]},
    {"\<\"NeuralNetwork\"\>", 
     RowBox[{"-", "0.041495485030438935`"}]},
    {"\<\"RandomForest\"\>", 
     RowBox[{"-", "0.06635167422439064`"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.715981174462022*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"methods", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Correlation", "[", 
       RowBox[{"trainOutput", ",", 
        RowBox[{"netTrainOutput", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.27116776308822893`"},
    {"\<\"GaussianProcess\"\>", "1.`"},
    {"\<\"NearestNeighbors\"\>", "0.393519859879713`"},
    {"\<\"NeuralNetwork\"\>", "0.5562026133893012`"},
    {"\<\"RandomForest\"\>", "0.9718990910202172`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.715980830867301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"methods", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Correlation", "[", 
       RowBox[{"trainOutput", ",", 
        RowBox[{"netTrainOutput", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.25078433479804996`"},
    {"\<\"GaussianProcess\"\>", "0.9999999999999999`"},
    {"\<\"NearestNeighbors\"\>", "0.24334503755894793`"},
    {"\<\"NeuralNetwork\"\>", "0.28350835024274784`"},
    {"\<\"RandomForest\"\>", "0.9770278809126918`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.715980645612586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"methods", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Correlation", "[", 
       RowBox[{"trainOutput", ",", 
        RowBox[{"netTrainOutput", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{3.715978701291897*^9, 3.715980246620686*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.24542535822716516`"},
    {"\<\"GaussianProcess\"\>", "1.`"},
    {"\<\"NearestNeighbors\"\>", "0.393519859879713`"},
    {"\<\"NeuralNetwork\"\>", "0.32173081085844596`"},
    {"\<\"RandomForest\"\>", "0.9752778910445737`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7159802470540323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"methods", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Correlation", "[", 
       RowBox[{"trainOutput", ",", 
        RowBox[{"netTrainOutput", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.27116776308822893`"},
    {"\<\"GaussianProcess\"\>", "1.`"},
    {"\<\"NearestNeighbors\"\>", "0.393519859879713`"},
    {"\<\"NeuralNetwork\"\>", "0.5562026133893012`"},
    {"\<\"RandomForest\"\>", "0.9722707215371341`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.715978664631274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"methods", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Correlation", "[", 
       RowBox[{"trainOutput", ",", 
        RowBox[{"netTrainOutput", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.715890207808127*^9, 3.715890226952474*^9}, {
  3.715890282766863*^9, 3.715890330553768*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LinearRegression\"\>", "0.24542535822716516`"},
    {"\<\"GaussianProcess\"\>", "1.`"},
    {"\<\"NearestNeighbors\"\>", "0.393519859879713`"},
    {"\<\"NeuralNetwork\"\>", "0.32173081085844596`"},
    {"\<\"RandomForest\"\>", "0.9725320657429125`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7158901917635117`*^9, 3.715890220374936*^9}, {
   3.715890283590674*^9, 3.7158902923066063`*^9}, {3.7158903243210278`*^9, 
   3.715890330922*^9}, 3.715891343635243*^9, 3.715978615587162*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["actualTrain"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"58", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"59", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"61", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"62", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"76", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"77", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"78", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"79", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"83", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"86", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"94", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"95", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"97", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"101", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"102", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"104", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"105", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"106", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"107", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"109", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"110", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"111", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"112", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"113", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"114", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"115", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"116", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"118", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"119", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"121", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"122", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"123", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"124", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"125", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"126", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"127", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"128", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"129", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"130", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"131", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"132", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"133", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"134", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"135", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"136", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"137", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"138", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"139", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"141", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"142", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"143", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"144", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"145", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"146", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"147", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"148", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"149", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"151", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"152", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"153", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"154", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"155", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"156", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"157", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"158", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"159", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"160", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"161", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"162", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"163", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"164", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"166", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"167", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"168", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"169", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"170", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"171", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"172", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"173", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"174", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"175", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"176", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"177", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"178", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"179", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"181", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"182", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"183", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"184", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"185", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"186", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"187", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"188", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"189", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"190", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"191", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"192", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"193", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"194", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"195", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"196", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"197", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"198", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"199", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7159802883277693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "@", "actualTrain"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Abs", "@", 
   RowBox[{"Fourier", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "actualTrain", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Abs", "@", 
    RowBox[{"Fourier", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "actualTrain", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7158915016378193`*^9, 3.715891580159851*^9}, {
  3.7158916156377287`*^9, 3.7158916626380157`*^9}, {3.715891731446859*^9, 
  3.715891903828617*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0EtOVUEQgOGKI4cOHDhwcDXGGGOM77fSIiK+UFERQeBw5aEjt9BLOUvp
ocs4S3AJakyZ9HcTQr78VV0Xzsx/rB0ci4iff37+/v73+bXQ/44S3ed46fsJ
+kn6KfppPGP+LP0cPs/8BfpF+iX6ZXwFX8XX8HXev0G/Sb+Fb+M77N/F9/B9
9h/QH9If0Rfope+10B/TcSz283WR/oT9dL6/xP5SPx9P6TiWeX+Z/oyOY4X3
V+jP6The8D6Ol/R07r/ifRyv2cexyv4q/Q37ON72Lul8Dzcc73qXdN6jNxxr
3Mc1nfs43rOPazr36fGB748rbun8fOR+OvfpDcc693Fd7+cbjk/cxzWd358e
G9zHdaOfb/T4zH1cccOxyX1cN/v5hmOLfVy3+vmG4wv7uOKWzs82+9t9r7gx
Hzvs7/TzFTfmY7fvZbfvld7oMfR9hgse0vk+Hplv9Ikee9zHBQ/pvI9H3PDE
ezHv+2ze90If6BWPuLE/0eNr7xkueEjn308fccMT+7HP/f2+F/qAKx5x472J
HgfcT+d9PDBf8YgbnnAc9u/PDvte8IAr+yNuzE84jriPy1E/P+CKR/YbfaLH
t77PcEnn/59e6SO94Yn5+P6//wbs/Rn4
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 200.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.71589149879844*^9, 3.71589158066726*^9}, {
   3.715891622608532*^9, 3.715891663117878*^9}, {3.715891731990464*^9, 
   3.715891904269404*^9}, 3.715980257027272*^9, 3.715980300528936*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQPX/hp0PHNv+zZwCDD1CaweFgmLH+3xsPoXwOhwUz
Dx+YUnQQyhdwiJJguS079yqUL+JQWtDCz7H3OJQv4XBDjeljtfglKF/GwVVx
/TJehctQvoJDxMrtzvNMz0H5Sg41B7x6F1qehvJVHH7pn/OYH3gdyldzmLf5
clTOtitQvoYD488HC0pijkH5Wg6n2c4sv/Z/GZSv4/A4u89Zfec1KF/PoaGs
0/u292Mo38BB7YFZ0Yory6F8Q4fSdXXmuv8fQflGDq/5/U2872yF8o0dLu45
rf2yHeZfEwf5SCmT60kwvqnDsrjSVhv/W1C+mcPvj6cd7nyFhZ+5w5drSpdV
FryE8i0cglL2Xdm69QGUb+nwNlfjxKP5N6B8Kwe3m/mfLV7A/GvtEPZISnD3
VZh6G4diWYnD3ueeQ/m2DhyB7zMca2DhZecgkb+Iz9scFv72Du99g8uEg2Du
dXA4P/eVbLHZHQi/wcHhwDLZKe0rYfKODknGWWmb9q+Hyjs6sBmlHZ+dDHOP
k8PVO0+35W2Ghn+Dk4OS+oanolfOQOWdHRyj3untyYCGZ4Ozw0FV55rX9rDw
cHF49/jN9RlKUH6Di8Ma46aflv/eQuVdHYz/O2dtf7TP/t++QzxLUlwdIOIf
7AHrC8yj
      "]], 
     LineBox[{{43.21603585266955, 1.}, {44., 0.1325137975919529}, {45., 
      0.330709623540016}, {46., 0.38946939267797764`}, {47., 
      0.17146203373188176`}, {48., 0.31045453091281755`}, {49., 
      0.2408043409238676}, {50., 0.24483177296707812`}, {51., 
      0.35355339059327373`}, {52., 0.08866605927605291}, {52.917226461587916`,
       1.}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbfpLsf4op7cDAxh8sAdTDd4OG6vqOHYlX4LwGXwc
vFySJDc1X4HK+zg8XszPWdd+HSrv67Dlwmz5OL63UHlfB6YJ63rDRJ5C5f0c
jii+CTBkvwCV93NQmG30c1LJaai8v8PDjfUp053PQeX9HU4vdOjKfXwRKh/g
UMhf3XJyw20I3yHAQXHTT+79X9dA1Qc4LHqvtdRWCSp/IMBBI8IyWPcwTH+g
wzENjdt+6x9C9Qc6aPV58euLQ93fEOhwWqcustniFVR/oMNfee8DG1+8g+oP
crhwXfLuudgbUP1BDguZmOpcTj2C6g9yuGxfnxyVDw2fA0EOswr6FOqf3oPq
D3aYXOOu03rnJlR/sENDhq/X1cOw8Ax2yNSu09J0grrnQLCD1qTJCrXGT6D6
Qxz+b9N8Mbd4G1R/iIOJTPDJfXF37OsWsJ0pKwmBxx8A3vyKcw==
      "]], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQbXF4ffmXrhAHBjD4YA+mDoQ4HBXZZLtQ4BaEzxDq
sFpb5vtshbMQvkOog2+mSeX24AcQfkOow7cUU8XnO55C9Yc6GCw3sLo/5xVU
f5hDjcWJ9nudT6D6wxwm/E74lTkZpj/M4ZzCo21Wd29A9Yc5vDq01FVy+x2o
/nCH8xktKXnLL0D1hzv0z3PbJ/T7EVR/uMPvRBedLSeh7j0Q7rBpY6zifKu3
UP0RDsqK8veuy1yE6o9wiN3IxiqvdAmqP8JBxnTfnT87jkP1Rzhsb31R9joa
6h+GSIf2vvdNijefQfVHOgS9retftfY+VH+kQxuy/IFIh50o+qMcFJHNd4hC
sz8K1X0Hohy2oLg/2uEXsv8cotH8H+1wCTl8DkQ7vEUJvxiHM8jh6xDj0I8S
/jEOtcjxcyDGQQ8l/mIdviPHr0MsWvzHOqxCTh8HYuHp54RNQAf311h4+gIA
7qrKnw==
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQ3RT/07iTO86BAQw+2IMphzgHE5ngk/vi7kD4DXEO
f7ZpvphbvA3CPxDnoDNpskKt8RMInyHeIU27TkvT6TpUf7xDY4av19XDV6D6
4x0m1LjrtN65CdUf7zCnoE+h/uk9qP4Ehyv29clR+VD1CgkOi5iY6lxOPYKa
l+Bw4brk3XOxNyD8hASHv/LeBza+eAc1P8HhtE5dZLPFKwh/QYKDZp8Xv744
1D0HEhyOamjc9lv/EMJ/kOCgEWEZrHv4ItT+RIdl77WW2irdhtqf6KC46Sf3
/q9roPYnOuTyV7ec3ACVT0h0OLHQoSv3MVR/Q6LD3Y31KdOdz0HtT3RQn230
c1LJaaj9iQ6HFd8EGLJfgNqf6MA8YV1vmMhTqP1JDpsvzJaP43sLtT/J4fFi
fs66dlh4Jjl4uCRJbmqGhk8CUH1VHceu5Ev2xY3mC/pqk+DxBwCXOI4+
      "]], 
     LineBox[{{149.08277353841208`, 1.}, {150., 0.08866605927605281}, {151., 
      0.3535533905932737}, {152., 0.24483177296707798`}, {153., 
      0.24080434092386768`}, {154., 0.31045453091281777`}, {155., 
      0.1714620337318818}, {156., 0.3894693926779774}, {157., 
      0.33070962354001576`}, {158., 0.13251379759195292`}, {
      158.78396414733047`, 1.}}], LineBox[CompressedData["
1:eJw10F9IU1EcB/DLiP48lESEIlyYZhmFCc00Idg39pB4CXNC0IgSPffco/1Z
qA0iCZFEfMgnH4pQZw8zITKSKZHZTMhgsqT9888erlesrNQk9jCwlnV/O3A4
fDnn8Dnnm1fndqoWSZKObc9/Ky583Ip9rof0f/y0mytDQdrROGZMmNnK8MzW
nir/s2ZmMGws/4g/zF8ycy3Du8OO1u92ym0McK2fGBeGmb0MhwpfrByMzJg5
wBBNrIzeHHlvZp1h10k+/bg+Qr6Kq7ZG/vLtMPkqJn1yT+dQlHwVs73f5ObS
BPkqkudrPAectN+mItv9ZJ9S9ol8FXuqN8TZ1jj5KprlnCkl9IV8FTVG7v7X
UZ18jsp596/TX+k9Vo61G0c/GP1z5HM42UTE76fztRzJWH64wLtKPsfWZhCJ
JPXh5fBdud1xpmqBfA75Um5JvI7eq3PMjgePr3ZSljSsZ1WVKAk/+Ro8z++V
FaWpT2go0kubnkYGydfQ7ulSFpVl8jUY17odha9i5GsI7ZwZjKV95GuwpHRv
y+VM/xoGRsKu66OZ/gVSxaGK/mrqyypwJ1D5YKA8SL6Aa2jM0XcqRL7Aubxh
315rmHyBhSOWzbvZmf4FWm7dz9r9Zpr87fs5Oxbl3sz/BfoeTQV6mibJb0Dg
oq3499yS/S/wiN3m
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10.995000000000001`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{982.4921875, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 2000}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.71589149879844*^9, 3.71589158066726*^9}, {
   3.715891622608532*^9, 3.715891663117878*^9}, {3.715891731990464*^9, 
   3.715891904269404*^9}, 3.715980257027272*^9, 3.715980300577734*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1131, 1003},
WindowMargins->{{3, Automatic}, {-32, 29}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 69, 1, 30, "Input"],
Cell[630, 23, 305, 8, 35, "Input"],
Cell[938, 33, 420, 9, 110, "Text"],
Cell[CellGroupData[{
Cell[1383, 46, 184, 3, 30, "Input"],
Cell[1570, 51, 214, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1821, 60, 131, 4, 32, "Input"],
Cell[1955, 66, 71, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2063, 72, 701, 18, 35, "Input"],
Cell[2767, 92, 8182, 151, 565, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10986, 248, 108, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[11119, 253, 1441, 40, 59, "Input"],
Cell[12563, 295, 1835, 29, 59, "Message"],
Cell[14401, 326, 304, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14742, 336, 2062, 52, 99, "Input"],
Cell[16807, 390, 4843, 129, 172, "Output"],
Cell[21653, 521, 2501, 52, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24191, 578, 743, 20, 83, "Input"],
Cell[24937, 600, 282, 6, 32, "Output"],
Cell[25222, 608, 1004, 27, 52, "Output"],
Cell[26229, 637, 285, 6, 32, "Output"]
}, Open  ]],
Cell[26529, 646, 2255, 56, 79, "Input"],
Cell[28787, 704, 130, 3, 30, "Input"],
Cell[28920, 709, 273, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[29218, 719, 1387, 41, 59, "Input"],
Cell[30608, 762, 235, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30880, 771, 1561, 43, 59, "Input"],
Cell[32444, 816, 105725, 1745, 241, "Output"]
}, Open  ]],
Cell[138184, 2564, 551, 11, 91, "Input"],
Cell[CellGroupData[{
Cell[138760, 2579, 77, 1, 30, "Input"],
Cell[138840, 2582, 305, 6, 32, "Output"]
}, Open  ]],
Cell[139160, 2591, 1676, 40, 83, "Input"],
Cell[CellGroupData[{
Cell[140861, 2635, 419, 9, 32, "Input"],
Cell[141283, 2646, 361, 5, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141693, 2657, 129, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[141847, 2662, 460, 14, 35, "Input"],
Cell[142310, 2678, 143, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142490, 2686, 1291, 36, 59, "Input"],
Cell[143784, 2724, 1974, 33, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145795, 2762, 69, 1, 30, "Input"],
Cell[145867, 2765, 248, 3, 30, "Output"]
}, Open  ]],
Cell[146130, 2771, 571, 17, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146738, 2793, 102, 1, 45, "Subsection"],
Cell[146843, 2796, 1563, 44, 192, "Input"],
Cell[148409, 2842, 70, 1, 30, "Input"],
Cell[148482, 2845, 2018, 58, 105, "Input"],
Cell[150503, 2905, 652, 16, 59, "Input"],
Cell[CellGroupData[{
Cell[151180, 2925, 132, 2, 35, "Input"],
Cell[151315, 2929, 1364, 25, 112, "Output"]
}, Open  ]],
Cell[152694, 2957, 549, 15, 56, "Input"],
Cell[CellGroupData[{
Cell[153268, 2976, 1380, 34, 101, "Input"],
Cell[154651, 3012, 370, 5, 32, "Output"]
}, Open  ]],
Cell[155036, 3020, 1800, 52, 103, "Input"],
Cell[156839, 3074, 94, 1, 30, "Input"],
Cell[156936, 3077, 1784, 52, 103, "Input"],
Cell[158723, 3131, 270, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[159018, 3139, 2957, 77, 175, "Input"],
Cell[161978, 3218, 81674, 1423, 531, "Output"]
}, Open  ]],
Cell[243667, 4644, 68, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[243760, 4649, 843, 23, 59, "Input"],
Cell[244606, 4674, 81194, 1417, 535, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325837, 6096, 1313, 32, 141, "Input"],
Cell[327153, 6130, 298, 6, 32, "Output"],
Cell[327454, 6138, 489, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327980, 6152, 1748, 47, 144, "Input"],
Cell[329731, 6201, 159, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329927, 6208, 1722, 47, 131, "Input"],
Cell[331652, 6257, 79, 1, 30, "Output"],
Cell[331734, 6260, 81, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331852, 6266, 915, 22, 59, "Input"],
Cell[332770, 6290, 41450, 728, 245, "Output"]
}, Open  ]],
Cell[374235, 7021, 492, 12, 35, "Input"],
Cell[CellGroupData[{
Cell[374752, 7037, 850, 22, 59, "Input"],
Cell[375605, 7061, 32659, 570, 239, "Output"]
}, Open  ]],
Cell[408279, 7634, 1554, 45, 124, "Input"],
Cell[CellGroupData[{
Cell[409858, 7683, 749, 21, 56, "Input"],
Cell[410610, 7706, 323, 10, 32, "Output"],
Cell[410936, 7718, 130, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411103, 7725, 1165, 29, 80, "Input"],
Cell[412271, 7756, 352, 7, 60, "Output"],
Cell[412626, 7765, 518, 13, 32, "Output"],
Cell[413147, 7780, 325, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413509, 7790, 124, 2, 32, "Input"],
Cell[413636, 7794, 131, 2, 30, "Output"]
}, Open  ]],
Cell[413782, 7799, 96, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[413903, 7804, 257, 7, 51, "Input"],
Cell[414163, 7813, 128, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414328, 7820, 125, 2, 32, "Input"],
Cell[414456, 7824, 106, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414599, 7831, 617, 20, 91, "Input"],
Cell[415219, 7853, 102, 1, 30, "Output"],
Cell[415324, 7856, 129, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415490, 7863, 1064, 32, 59, "Input"],
Cell[416557, 7897, 849, 21, 107, "Output"],
Cell[417409, 7920, 849, 21, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418295, 7946, 1232, 35, 59, "Input"],
Cell[419530, 7983, 966, 23, 107, "Output"],
Cell[420499, 8008, 968, 23, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421504, 8036, 275, 6, 35, "Input"],
Cell[421782, 8044, 2446, 38, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424265, 8087, 322, 7, 52, "Input"],
Cell[424590, 8096, 122, 2, 30, "Output"],
Cell[424715, 8100, 125, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424877, 8107, 460, 14, 35, "Input"],
Cell[425340, 8123, 914, 24, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426291, 8152, 528, 15, 35, "Input"],
Cell[426822, 8169, 912, 24, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427771, 8198, 452, 14, 32, "Input"],
Cell[428226, 8214, 805, 20, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429068, 8239, 452, 14, 32, "Input"],
Cell[429523, 8255, 824, 20, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430384, 8280, 516, 15, 32, "Input"],
Cell[430903, 8297, 808, 20, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431748, 8322, 452, 14, 32, "Input"],
Cell[432203, 8338, 805, 20, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433045, 8363, 567, 16, 32, "Input"],
Cell[433615, 8381, 977, 22, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434629, 8408, 37, 0, 32, "Input"],
Cell[434669, 8410, 12189, 403, 264, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446895, 8818, 909, 24, 75, "Input"],
Cell[447807, 8844, 2172, 47, 243, "Output"],
Cell[449982, 8893, 5228, 99, 631, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

